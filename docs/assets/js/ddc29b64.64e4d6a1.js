"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[91195],{28453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>i});var r=n(96540);const o={},s=r.createContext(o);function d(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),r.createElement(s.Provider,{value:t},e.children)}},98466:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"form-controls/reversegeolocatorbutton","title":"ReverseGeolocatorButton","description":"This form control is a button which request the current location of the user and fills in the form fields defined in its options.","source":"@site/versioned_docs/version-9.4/form-controls/reversegeolocatorbutton.md","sourceDirName":"form-controls","slug":"/form-controls/reversegeolocatorbutton","permalink":"/docs/9.4/form-controls/reversegeolocatorbutton","draft":false,"unlisted":false,"tags":[],"version":"9.4","frontMatter":{"title":"ReverseGeolocatorButton"},"sidebar":"tutorialSidebar","previous":{"title":"RadioBox","permalink":"/docs/9.4/form-controls/radiobox"},"next":{"title":"ScanButton (Anyline)","permalink":"/docs/9.4/form-controls/scanbuttonanyline"}}');var o=n(74848),s=n(28453);const d={title:"ReverseGeolocatorButton"},i="ReverseGeolocatorButton",c={},a=[{value:"Watcher Object",id:"watcher-object",level:2},{value:"Stored data",id:"stored-data",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"reversegeolocatorbutton",children:"ReverseGeolocatorButton"})}),"\n",(0,o.jsx)(t.p,{children:"This form control is a button which request the current location of the user and fills in the form fields defined in its options."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-html",children:"<div id=\"getLocation\"\n    class=\"pdf-hide\"\n    data-win-control=\"HFWinJSCtrl.ReverseGeolocatorButton\"\n    data-win-options=\"{\n        buttonLabel: 'Get Location',\n        buttonType: 'small',\n        targetFields: {'address_zip_code':'postal_code', 'address_city': 'locality', 'address_street_and_no':'route + street_number' },\n        typesSeperator: ', ', \n        nextToField: 'address_city',\n        watcher: {\n            alwaysShowAccuracy: true,\n            acceptResultAfter: 10,\n            acceptPositionIfExact: true,\n            requestAlwaysNewPosition: true\n        }\n    }\"></div>\n"})}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Property"}),(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{children:"How to use"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"buttonLabel"}),(0,o.jsx)(t.td,{children:"String"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"buttonLabel: 'Get Location'"})}),(0,o.jsx)(t.td,{children:'Sets the label of the button (displayed if buttonType is "medium" or "large")'})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"buttonType"}),(0,o.jsx)(t.td,{children:"String"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"buttonType: 'large'"})}),(0,o.jsx)(t.td,{children:'There are three buttonTypes "small", "medium" and "large"'})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"doNotCopy"}),(0,o.jsx)(t.td,{children:"Boolean"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"doNotCopy: true"})}),(0,o.jsx)(t.td,{children:'Set "true" whenever the field should get deleted if form is copied.'})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"nextToField"}),(0,o.jsx)(t.td,{children:"String"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"nextToField: 'address_city'"})}),(0,o.jsx)(t.td,{children:"Define the form control the button should be placed next to."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"targetFields"}),(0,o.jsx)(t.td,{children:"Object"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"targetFields: {'address_zip_code':'postal_code', 'address_city': 'locality', 'address_street_and_no':'route + street_number' }"})}),(0,o.jsxs)(t.td,{children:["An object with key-value pairs. The key is the fieldId, the value is one of the possible components of a  google maps reverse geocoding result. For more information about the different address types see the ",(0,o.jsx)(t.a,{href:"https://developers.google.com/maps/documentation/javascript/geocoding#GeocodingAddressTypes",children:"reverse geocoding documentation of Google"}),". Concatenation of address types is possible with the plus sign."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"typesSeperator"}),(0,o.jsx)(t.td,{children:"String"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"typesSeperator: ', '"})}),(0,o.jsx)(t.td,{children:'Specifies a delimiter for the concatenation of address components, eg. if you want to combine the street (route) with the street number address component in one field, seperated by a comma: "Baker Street, 221b".'})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"watcher"}),(0,o.jsx)(t.td,{children:"Object"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.a,{href:"#watcher-object",children:(0,o.jsx)(t.code,{children:"watcher: {...}"})})}),(0,o.jsx)(t.td,{children:"Define additional functions to the query and the result."})]})]})]}),"\n",(0,o.jsx)(t.h2,{id:"watcher-object",children:"Watcher Object"}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{children:"Property"}),(0,o.jsx)(t.th,{children:"Type"}),(0,o.jsx)(t.th,{children:"How to use"}),(0,o.jsx)(t.th,{children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"alwaysShowAccuracy"}),(0,o.jsx)(t.td,{children:"Boolean"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"alwaysShowAccuracy: true"})}),(0,o.jsxs)(t.td,{children:["This property provides an information on the approximate deviation in meter and by color code ( red: deviation more than 50 m, orange: deviation between 10 and 50 m, green: deviation lower than 10 m), default setting is ",(0,o.jsx)(t.code,{children:"true"}),"."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"acceptResultAfter"}),(0,o.jsx)(t.td,{children:"Number"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"acceptResultAfter: 10"})}),(0,o.jsxs)(t.td,{children:["Set this property to the number of seconds after  which the result will be accepted automatically and stored. ",(0,o.jsx)(t.strong,{children:"Note"}),": Default settings is ",(0,o.jsx)(t.code,{children:"null"})," (unset)."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"acceptPositionIfExact"}),(0,o.jsx)(t.td,{children:"Boolean"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"acceptPositionIfExact: true"})}),(0,o.jsx)(t.td,{children:"Set this property to accept the query result automatically if the accuracy deviation is below 10 m."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{children:"requestAlwaysNewPosition"}),(0,o.jsx)(t.td,{children:"Boolean"}),(0,o.jsx)(t.td,{children:(0,o.jsx)(t.code,{children:"requestAlwaysNewPosition: false"})}),(0,o.jsxs)(t.td,{children:["Set this property to ",(0,o.jsx)(t.code,{children:"false"})," to prevent any observation of the user position changes and result updates. Default setting is ",(0,o.jsx)(t.code,{children:"true"}),"."]})]})]})]}),"\n",(0,o.jsx)(t.h2,{id:"stored-data",children:"Stored data"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-json",children:'{\n    "id": "getLocation",\n    "value": {\n        "position": {\n            "latitude":47.06732,\n            "longitude":15.43345,\n            "accuracy":21,\n            "accuracyFormatted":"~ 21 m",\n            "timestamp":"2018-07-05T08:38:11.717Z"\n        },\n        "geocoderResult": {\n            "address_components": [\n                {\n                    "long_name":"1a",\n                    "short_name":"1a",\n                    "types": ["street_number"]\n                }, {\n                    "long_name":"Entenplatz",\n                    "short_name":"Entenpl.",\n                    "types": ["route"]\n                }, {\n                    "long_name":"Gries",\n                    "short_name":"Gries",\n                    "types": ["political","sublocality", "sublocality_level_1"]\n                }, {\n                    "long_name":"Graz",\n                    "short_name":"Graz",\n                    "types": ["locality", "political"]\n                }, {\n                    "long_name":"Graz",\n                    "short_name":"Graz",\n                    "types": ["administrative_area_level_2","political"]\n                }, {\n                    "long_name":"Steiermark",\n                    "short_name":"Steiermark",\n                    "types": ["administrative_area_level_1","political"]\n                }, {\n                    "long_name":"Austria",\n                    "short_name":"AT",\n                    "types": ["country","political"]\n                }, {\n                    "long_name":"8020",\n                    "short_name":"8020",\n                    "types": ["postal_code"]\n                }\n            ], \n            "formatted_address":"Entenplatz 1a, 8020 Graz, Austria",\n            "geometry": {\n                "bounds": {\n                    "south":47.0671784,\n                    "west":15.433212700000013,\n                    "north":47.0675852,\n                    "east":15.433834899999965\n                },\n                "location": {\n                    "lat":47.0674364,\n                    "lng":15.433538099999964\n                }, \n                "location_type":"ROOFTOP",\n                "viewport": {\n                    "south":47.0660328197085,\n                    "west":15.432174819708507,\n                    "north":47.0687307802915,\n                    "east":15.434872780291471\n                }\n            },\n            "place_id":"ChIJQa-mgHk1bkcR-_XOmRNkV8g",\n            "types":["premise"]\n        }\n    }\n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);