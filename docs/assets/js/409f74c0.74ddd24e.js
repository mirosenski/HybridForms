"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[88022],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>d});var s=t(96540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}},31721:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"js-guide/typescript/tscustomcontrols","title":"Create Custom Controls","description":"Integration within the HTML","source":"@site/versioned_docs/version-9.2/js-guide/30-typescript/30-tscustomcontrols.md","sourceDirName":"js-guide/30-typescript","slug":"/js-guide/typescript/tscustomcontrols","permalink":"/docs/9.2/js-guide/typescript/tscustomcontrols","draft":false,"unlisted":false,"tags":[],"version":"9.2","sidebarPosition":30,"frontMatter":{"title":"Create Custom Controls"},"sidebar":"tutorialSidebar","previous":{"title":"onChanged event handler","permalink":"/docs/9.2/js-guide/typescript/tsonchanged"},"next":{"title":"HybridForms API","permalink":"/docs/9.2/js-guide/api"}}');var o=t(74848),r=t(28453);const i={title:"Create Custom Controls"},d="Create Custom Controls",l={},c=[{value:"Integration within the HTML",id:"integration-within-the-html",level:2},{value:"Coding examples",id:"coding-examples",level:2}];function a(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"create-custom-controls",children:"Create Custom Controls"})}),"\n",(0,o.jsx)(n.h2,{id:"integration-within-the-html",children:"Integration within the HTML"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<div id="custom_control_id" class="pdf-hide" data-win-control="HFFormdefinition.SomeNamespace.CustomControlName"\n    data-win-options="{\n        prop1: \'value1\'\n    }">\n</div>\n'})}),"\n",(0,o.jsxs)(n.admonition,{title:"Note",type:"tip",children:[(0,o.jsx)(n.p,{children:"The class \u201cpdf-hide\u201d is necessary to prevent the PDF parser from parsing this Custom Control, which would not work in that case."}),(0,o.jsx)(n.p,{children:"IMPORTANT FACTS"}),(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["All registered event handlers have to get deregistered (dispose pattern) when the form is left. Therefore you have to implement your ",(0,o.jsx)(n.code,{children:"dispose()"})," method within your control."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["It is recommended that all custom controls derive from the HybridForms BaseControl ",(0,o.jsx)(n.code,{children:"HybridForms.API.UIControls.BaseControl"})]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["This control adds the ",(0,o.jsx)(n.code,{children:"win-disposable"})," class to the html markup and calls the dispose method when leaving the page."]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["Override the ",(0,o.jsx)(n.code,{children:"dispose"}),"-method where to remove all previously registered event handlers."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]}),"\n",(0,o.jsx)(n.h2,{id:"coding-examples",children:"Coding examples"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Example of a simple custom control that derives from BaseControl"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<div id="derived_custom_control" \n        data-win-control="HFFormdefinition.SomeNamespace.CustomControl"\n        data-win-options="{\n            publicProp1: \'foo\'\n        }">\n</div>\n'})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"export class CustomControl extends HybridForms.API.UIControls.BaseControl {\n    // instance properties\n    private onRendered: () => void;\n    public publicProp1: string;\n\n    // instance methods\n    constructor(element, options) {\n        super(element, options);\n    }\n\n    protected createControl(): Promise<void> { // will be called by base class\n        console.log('createControl');\n\n        // return a promise here, when all ui relevant work is done!\n        return Promise.resolve();\n    }\n\n    protected createView() { // will be called by base class\n        // get called on PDF creation\n    }\n\n    protected registerEvents() { // will be called by base class\n        // registerEvents here\n        console.log('registerEvents');\n        \n        this.onRendered = () => {\n            console.log('form is rendered and ready');\n        };\n        HybridForms.API.Page.addEventListener('rendered', this.onRendered);\n        HybridForms.API.Page.addEventListener('viewrendered', this.onRendered);\n    }\n\n    public dispose() {\n        if (this.disposed) {\n            return;\n        }\n\n        // dispose registered events here\n        if (this.onRendered) {\n            HybridForms.API.Page.removeEventListener('rendered', this.onRendered);\n            HybridForms.API.Page.removeEventListener('viewrendered', this.onRendered);\n        }\n\n        this.disposed = true;\n    }\n\n    public static staticMethod() {\n        // static method\n    }\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);