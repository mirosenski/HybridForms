"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[99266],{4416:(e,n,t)=>{t.d(n,{A:()=>_,n:()=>N});var s=t(96540),a=t(26186),o=t(66801),i=t(51107),r=t(22375),c=t(28774);const d="headingWrapper_viav",l="subHeading_VpFi",p="optionWrapper_rgfQ",u="optionHeading_F865",m="optionDescription_SgL9",h="optionExample_imJ2",f="optionDetails_xihm",b="separator_qNd6",g="tableRow_H7Hk";var x=t(38193);let j=function(e){return e.STORAGE_CHANGED="storageChanged",e}({});const y=(e,n)=>{const[t,a]=(0,s.useState)(((e,n)=>x.A.canUseDOM&&localStorage.getItem(e)||n)(e,n));return(0,s.useEffect)((()=>{const n=n=>{n.detail.key===e&&a(n.detail.newValue)};return window.addEventListener(j.STORAGE_CHANGED,n),()=>{window.removeEventListener(j.STORAGE_CHANGED,n)}}),[]),t},v="buttonGroup_qkEZ",F="buttonGroup__button_W3AV";var C=t(74848);const k=e=>{const{storageKey:n,subHeading:t}=e,s=y(n||"optionsList_Props","list"),a=e=>{var t,s;t=n||"optionsList_Props",s=e,localStorage.setItem(t,s),window.dispatchEvent(new CustomEvent(j.STORAGE_CHANGED,{detail:{key:t,newValue:s}}))};return(0,C.jsxs)("div",{className:v,style:{marginBottom:t?"4px":"20px"},children:[(0,C.jsx)("button",{className:`${F} button button--sm ${"list"===s?"button--primary":"button--secondary"}`,onClick:()=>a("list"),title:"List view",children:(0,C.jsx)("i",{className:"fas fa-list"})}),(0,C.jsx)("button",{className:`${F} button button--sm ${"table"===s?"button--primary":"button--secondary"}`,onClick:()=>a("table"),title:"Table view",children:(0,C.jsx)("i",{className:"far fa-table"})})]})},w=e=>e.sort(((e,n)=>e.name.localeCompare(n.name))).sort(((e,n)=>e.required&&!n.required?-1:!e.required&&n.required?1:0)),N=e=>{e.options=w(e.options);let n=[];return e.heading&&(n=[{value:e.heading,id:(0,r.k)(e.heading),level:e.levelBase?e.levelBase:2}]),[...n,...e.options.map((n=>({value:`${n.name}${n.required?" *":""}`,id:`${n.idPrefix?`${n.idPrefix}-`:""}${n.name}`,level:e.levelBase?e.levelBase+1:3})))]},_=e=>{const{options:n,storageKey:t,levelBase:p,heading:u,subHeading:m,subHeadingLink:h,children:f}=e,b=y(t||"optionsList_Props","list"),g=(0,s.useMemo)((()=>w(n)),[n]);if(0===g.length)return null;let x="h2";return p&&(x=`h${p}`),(0,C.jsxs)(C.Fragment,{children:[u&&(0,C.jsxs)("div",{className:d,children:[(0,C.jsx)(i.A,{as:x,id:(0,r.k)(u),className:"heading",style:{marginBottom:m?"4px":"20px"},children:u}),(0,C.jsx)(k,{storageKey:t,subHeading:Boolean(m)})]}),m&&(0,C.jsxs)("p",{className:l,children:[(0,C.jsx)(a.oz,{components:{a:$,p:"span"},rehypePlugins:[o.A],children:m})," ",h&&(0,C.jsx)(c.A,{href:h,children:"read more"})]}),f&&(0,C.jsx)(C.Fragment,{children:f}),("list"===b&&u||!u)&&(0,C.jsx)(S,{options:g}),"table"===b&&u&&(0,C.jsx)(B,{options:g})]})},S=e=>{const{options:n}=e;return(0,C.jsx)(C.Fragment,{children:n.map(((e,t)=>(0,C.jsxs)("div",{className:p,children:[(0,C.jsxs)(i.A,{as:"h3",id:`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`,className:u,children:[e.name,e.required&&(0,C.jsx)("small",{style:{fontWeight:"normal"},children:" - required"})]}),(0,C.jsx)("div",{className:m,children:(0,C.jsx)(a.oz,{components:{a:$,p:"span"},rehypePlugins:[o.A],children:e.description})}),(0,C.jsxs)("div",{className:f,children:[(0,C.jsxs)("div",{children:[(0,C.jsx)("strong",{children:"How to use:"})," ",(0,C.jsx)("div",{className:h,children:(0,C.jsx)(a.oz,{components:{a:$,p:"code"},rehypePlugins:[o.A],children:e.example})})]}),e.type&&(0,C.jsxs)("div",{children:[(0,C.jsx)("strong",{children:"Type:"})," ",(0,C.jsx)("code",{dangerouslySetInnerHTML:{__html:e.type}})]}),e.signature&&(0,C.jsxs)("div",{children:[(0,C.jsx)("strong",{children:"Signature:"})," ",(0,C.jsx)("code",{children:e.signature})]}),e.default&&(0,C.jsxs)("div",{children:[(0,C.jsx)("strong",{children:"Default:"})," ",(0,C.jsx)("code",{children:e.default})]})]}),t<n.length-1&&(0,C.jsx)("hr",{className:b})]},`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`)))})},B=e=>{const{options:n}=e;return(0,C.jsxs)("table",{children:[(0,C.jsx)("thead",{children:(0,C.jsxs)("tr",{children:[(0,C.jsx)("td",{children:"Property"}),(0,C.jsx)("td",{children:"Type"}),(0,C.jsx)("td",{children:"How to use"}),(0,C.jsx)("td",{children:"Description"})]})}),(0,C.jsx)("tbody",{children:n.map((e=>(0,C.jsxs)("tr",{id:`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`,className:g,children:[(0,C.jsx)("td",{children:e.required?(0,C.jsx)(C.Fragment,{children:(0,C.jsxs)("strong",{children:[e.name," *"]})}):(0,C.jsx)(C.Fragment,{children:e.name})}),(0,C.jsx)("td",{children:(0,C.jsx)("code",{dangerouslySetInnerHTML:{__html:e.type}})}),(0,C.jsx)("td",{children:(0,C.jsx)("div",{className:h,children:(0,C.jsx)(a.oz,{components:{a:$,p:"code"},rehypePlugins:[o.A],children:e.example})})}),(0,C.jsx)("td",{children:(0,C.jsx)(a.oz,{components:{a:$,p:"span"},rehypePlugins:[o.A],children:e.description})})]},`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`)))})]})},$=e=>{let{children:n,href:t}=e;return(0,C.jsx)(c.A,{to:t,children:n})}},22375:(e,n,t)=>{t.d(n,{I:()=>a,k:()=>s});const s=e=>e.replace(/[\s_]+/g,"-").toLowerCase(),a=function(e,n){void 0===n&&(n=!1);const[t,s,a,o]=e.replace(/^#?(?:(?:(..)(..)(..)(..)?)|(?:(.)(.)(.)(.)?))$/,"$1$5$5$2$6$6$3$7$7$4$8$8").match(/(..)/g).map((e=>parseInt("0x"+e)));return(~~(299*t)+~~(587*s)+~~(114*a))/1e3>=128||1+~(128/o)&&n?"#000":"#FFF"}},54364:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,options:()=>l,scanOptions:()=>p,toc:()=>u});const s=JSON.parse('{"id":"form-controls/scanbuttonbarcode","title":"ScanButton (Barcode/NFC)","description":"This form control (button) starts a scan of barcodes and processes the decoded information inside the form.","source":"@site/versioned_docs/version-9.5/form-controls/scanbuttonbarcode.mdx","sourceDirName":"form-controls","slug":"/form-controls/scanbuttonbarcode","permalink":"/docs/9.5/form-controls/scanbuttonbarcode","draft":false,"unlisted":false,"tags":[],"version":"9.5","frontMatter":{"title":"ScanButton (Barcode/NFC)"},"sidebar":"tutorialSidebar","previous":{"title":"ReverseGeolocatorButton","permalink":"/docs/9.5/form-controls/reversegeolocatorbutton"},"next":{"title":"ScanButton (IDScanner)","permalink":"/docs/9.5/form-controls/scanbuttonidscanner"}}');var a=t(74848),o=t(28453),i=t(4416);const r={title:"ScanButton (Barcode/NFC)"},c=void 0,d={},l=[{name:"fieldId",type:"string",example:"fieldId: &#39;add_parts_item1&#39;",description:"Provide the ID of the form control receiving the scanned value.",required:!0},{name:"buttonLabel",type:"string",example:"buttonLabel: &#39;Scan&#39;",description:'Sets the label of the button (displayed if buttonType is "medium" or "large")',required:!1},{name:"buttonType",type:"'small' | 'medium' | 'large'",example:"buttonType: &#39;large&#39;",description:"Define the size of the button (&#39;small&#39;, &#39;medium&#39; or &#39;large&#39;).",required:!0},{name:"buttonIcon",type:"string",example:"buttonIcon: &#39;fa-barcode-scan&#39;",description:"Sets the icon of the button",required:!1},{name:"buttonHeading",type:"string",example:"buttonHeading: &#39;Navigation&#39;",description:"Define a label for the control element.",required:!1},{name:"scan",type:"ScanObject",example:'<a href="#scan-object">scan: { ... }</a>',description:"An object with key-value pairs defining the form field and the scan type, a config part for the plugin and an optional custom postprocessing function",required:!1}],p=[{name:"scanType",type:"'BARCODE' | 'NFC'",example:"scanType: &#39;BARCODE&#39;",description:"Defines the used scanning type.",required:!0},{name:"fieldId",type:"string",example:"fieldId: &#39;scan_input_id&#39;",description:"FormControl in which the scan value is entered.",required:!1},{name:"mapping",type:"{ [scanKey: string]: string }",example:"mapping: {  &#39;0&#39;: &#39;scan_input_id_1&#39;,  &#39;1&#39;: &#39;scan_input_id_1&#39;  }",description:"An object with key-value pairs defining the scan record id and form field ID (especially for NFC Ndef Messages). Overwrites fieldId if both are set!",required:!1},{name:"hidden",type:"boolean",example:"hidden: true",description:"Hide FormControl in Form.",required:!1},{name:"config",type:"object",example:"config: { ... }",description:"Configuration object for scan type BARCODE. For more information check out the links below.",required:!1},{name:"errorMessage",type:"string",example:"errorMessage: &#39;This is my custom error.&#39;",description:"Customized error message in case the scan fails.",required:!1},{name:"audioFeedback",type:"boolean",example:"audioFeedback: true",description:"Enables or disables an audible feedback on proccessing the scan.",required:!1,default:"true"},{name:"vibrationFeedback",type:"boolean",example:"vibrationFeedback: true",description:"Enables or disables a haptic feedback on proccessing the scan.",required:!1,default:"true"},{name:"callbackFeedback",type:"boolean",example:"callbackFeedback: true",description:"Enables or disables a audible feedback on success.",required:!1,default:"true"},{name:"callback",type:"function",signature:"function(config: any, result: any, postfix: string) => void",example:"callback: HFFormdefinition.BaselHelpers.callback",description:"Call a custom JS-method after the scan is completed",required:!1},{name:"multiple",type:"boolean",example:"multiple: true",description:"Enables or disables multiple scanning. Scan starts again after successful scan. It is aborted after an error or by cancel scanning manually.",required:!1},{name:"multipleMessage",type:"string",example:"multipleMessage: &#39;Another scan follows - abort with Cancel or Back&#39;",description:"Displays confirm message after every scan to start or abort next scan.",required:!1},{name:"postProcess",type:"function",signature:"function(config: any, result: any, postfix: string) => Promise<any>",example:"postProcess: HFFormdefinition.BaselHelpers.postProcessMRZ",description:"Call a custom JS-method to postprocess the scanned values",required:!1}],u=[...(0,i.n)({options:l,heading:"FormControl Options"}),...(0,i.n)({options:p,heading:"Scan Object"})];function m(e){const n={a:"a",admonition:"admonition",code:"code",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.p,{children:"This form control (button) starts a scan of barcodes and processes the decoded information inside the form.\nThe control is based on the NPM cross-platform barcode scanner for cordova and ZXing barcode scanner for browser."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",metastring:"title=Barcode Example showLineNumbers",children:"<div id=\"scanBtn\" \n    class=\"pdf-hide\" \n    data-win-control=\"HFWinJSCtrl.ScanButton\" \n    data-win-options=\"{                \n        buttonType: 'large',\n        icon: 'fa-barcode-scan',\n        buttonHeading: 'QR-Code',\n        buttonLabel: 'Scan',\n        scan: {\n            fieldId: 'add_parts_item1',\n            scanType: 'BARCODE',      \n            config: {\n                preferFrontCamera : false,\n                showFlipCameraButton : true,\n                showTorchButton : true,\n                saveHistory: false, \n                prompt : 'Please scan the appropriate barcode...',\n                resultDisplayDuration: 500,\n                formats : 'QR_CODE,AZTEC',\n                disableAnimations : true,\n                disableSuccessBeep: false\n            },\n            audioFeedback: true,\n            vibrationFeedback: true,\n            callbackFeedback: true,\n            callback: HFFormdefinition.BaseHelpers.customQRScanButton\n        }\n    }\">\n</div>\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",metastring:"title=NFC Example showLineNumbers",children:"<div id=\"nfcScanBtn\" class=\"hide-in-view\" \n    data-win-control=\"HFWinJSCtrl.ScanButton\" \n    data-win-options=\"{                \n        buttonType: 'large',\n        buttonHeading: 'NFC-Code',\n        buttonLabel: 'Scan',\n        buttonIcon: 'fa-times',\n        scan: {\n            mapping: {\n                '0': 'nfc-textfield-1',\n                '1': 'nfc-textfield-2',\n                '2': 'nfc-textfield-3'\n            },\n            scanType: 'NFC',\n            postProcess: HFFormdefinition.BaseHelpers.postProcessNFC\n        }\n    }\">\n</div>\n"})}),"\n",(0,a.jsx)(i.A,{heading:"FormControl Options",options:l}),"\n",(0,a.jsx)(i.A,{heading:"Scan Object",options:p}),"\n",(0,a.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,a.jsxs)(n.p,{children:["For further information on the config values especially the formats for Barcode/QR-Code scanning (",(0,a.jsx)(n.code,{children:"formats : 'QR_CODE,AZTEC'"}),"), please read the documentation at ",(0,a.jsx)(n.a,{href:"https://github.com/phonegap/phonegap-plugin-barcodescanner",children:"https://github.com/phonegap/phonegap-plugin-barcodescanner"})," for mobile scanning and at ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/@zxing/library",children:"https://www.npmjs.com/package/@zxing/library"})," for browser scanning."]})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}}}]);