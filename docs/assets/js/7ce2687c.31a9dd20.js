"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[28660],{1427:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"form-controls/treeview","title":"TreeView","description":"The TreeView control enables you to display complex dataSources/catalogs in a hierarchical view and offers the possibility to select and store multiple values as well as the hierarchical path of the values.","source":"@site/versioned_docs/version-9.4/form-controls/treeview.md","sourceDirName":"form-controls","slug":"/form-controls/treeview","permalink":"/docs/9.4/form-controls/treeview","draft":false,"unlisted":false,"tags":[],"version":"9.4","frontMatter":{"title":"TreeView"},"sidebar":"tutorialSidebar","previous":{"title":"TimePicker","permalink":"/docs/9.4/form-controls/timepicker"},"next":{"title":"Webview","permalink":"/docs/9.4/form-controls/webview"}}');var n=i(74848),l=i(28453);const s={title:"TreeView"},d="TreeView",o={},c=[{value:"Minimum configuration:",id:"minimum-configuration",level:3},{value:"Complex configuration:",id:"complex-configuration",level:3},{value:"listOptions Object",id:"listoptions-object",level:2},{value:"Stored data",id:"stored-data",level:2}];function a(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"treeview",children:"TreeView"})}),"\n",(0,n.jsx)(t.p,{children:"The TreeView control enables you to display complex dataSources/catalogs in a hierarchical view and offers the possibility to select and store multiple values as well as the hierarchical path of the values."}),"\n",(0,n.jsx)(t.admonition,{title:"Info",type:"info",children:(0,n.jsx)(t.p,{children:"The catalogs must be valid and compatible JSON represenations."})}),"\n",(0,n.jsx)(t.admonition,{title:"Note",type:"tip",children:(0,n.jsxs)(t.p,{children:['If you develop locally in the FormDev environment it\xb4s best to paste the full catalog URL including the "hierarchy" part (eg. ',(0,n.jsx)(t.a,{href:"https://exampleserver.hybridforms.net/api/catalog/TreeviewCatalog/hierarchy",children:"https://exampleserver.hybridforms.net/api/catalog/TreeviewCatalog/hierarchy"}),") in your browser and add the resulting JSON response as local file to your formDefinition folder."]})}),"\n",(0,n.jsx)(t.h3,{id:"minimum-configuration",children:"Minimum configuration:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",children:"<div id=\"treeview_minimum\"\n    data-win-control=\"HFWinJSCtrl.TreeView\"\n    data-win-options=\"{ \n        label: 'TreeView',   \n        url: '/api/catalog/Hierarchietest/hierarchy',\n        treeviewCtrlOptions: {\n            dataTextField: 'Text',\n            dataValueField: 'ID',\n        },\n        selectCtrlOptions:{\n            placeholder: 'Open tree',\n        }\n    }\"></div>\n"})}),"\n",(0,n.jsx)(t.h3,{id:"complex-configuration",children:"Complex configuration:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",children:"<div id=\"treeview_complex\"\n    data-win-control=\"HFWinJSCtrl.TreeView\"\n    data-win-options=\"{ \n        label: 'TreeView',\n        multiselect: true,      \n        url: '/api/catalog/Hierarchietest/hierarchy?start=0001&maxlevel=3&sort=Text&select=Text,ID',\n        treeviewCtrlOptions: {\n            checkboxes: {\n                checkChildren: true\n            },\n            dataTextField: 'Text',\n            dataValueField: 'ID',\n            selectOnlyLeaves: true,\n        },\n        textValueCallback: HFFormdefinition.QAFormHelpers.getTreeViewTextTemplate,\n        selectCtrlOptions:{\n            placeholder: 'Open tree',\n        },\n            onChanged: HFFormdefinition.QAFormHelpers.onTreeViewChange\n    }\"></div>\n"})}),"\n",(0,n.jsx)(t.admonition,{title:"Info",type:"info",children:(0,n.jsx)(t.p,{children:"The TreeView control currently supports only a via URL provided datasource."})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"How to use"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"doNotCopy"}),(0,n.jsx)(t.td,{children:"Boolean"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"doNotCopy: true"})}),(0,n.jsx)(t.td,{children:'Set "true" whenever the field should get deleted if form is copied.'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"label"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"label: 'TreeView'"})}),(0,n.jsx)(t.td,{children:"Define a label for your control element."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"list"}),(0,n.jsx)(t.td,{children:"Boolean"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"list: true"})}),(0,n.jsxs)(t.td,{children:['Set this property to "true" if data connected with this control should be a sorting/filtering/grouping option on the listpage, is used in template objects (eg. the ',(0,n.jsx)(t.a,{href:"../form-definition/templateobjects#list-template-list-entry",children:"listTemplate"}),") or it should show up in admin ui listings."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"listOptions"}),(0,n.jsx)(t.td,{children:"Object"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"#listoptions-object",children:(0,n.jsx)(t.code,{children:"listOptions: {...}"})})}),(0,n.jsxs)(t.td,{children:["Set additional options for controls with ",(0,n.jsx)(t.code,{children:"list"})," equals ",(0,n.jsx)(t.code,{children:"true"}),". E.g. set custom label for filter/sort/group dialogs or hide them complettely."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"multiselect"}),(0,n.jsx)(t.td,{children:"Boolean"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"multiselect: true"})}),(0,n.jsxs)(t.td,{children:['Set "true" whenever the user can select more than one value. Default setting is ',(0,n.jsx)(t.code,{children:"false"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"selectCtrlOptions:  {placeholder:\xa0'...'}"}),(0,n.jsx)(t.td,{children:"JSON Array"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"selectCtrlOptions:"}),"  ",(0,n.jsx)(t.code,{children:"{placeholder: 'Open tree'}"})]}),(0,n.jsx)(t.td,{children:"Define a placeholder value - this option is obligatory."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"url"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"url: '/api/catalog/Hierarchietest/hierarchy'"})}),(0,n.jsxs)(t.td,{children:["The URL must be a HFSql server relative URL. For instance, the oData link to a HFSql server list. ",(0,n.jsx)(t.strong,{children:"Note"}),": The url has to contain ",(0,n.jsx)(t.strong,{children:"'/hierarchy'"})," to obtain the hierarchical catalog."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"?start=0001"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:"url: '/api/catalog/Hierarchietest"}),"\xad",(0,n.jsx)(t.code,{children:"/hierarchy?start=0001'"})]}),(0,n.jsx)(t.td,{children:"Define the start node inside the catalog to reduce the provided items."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"?maxlevel=3"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"url: '/api/catalog/Hierarchietest/hierarchy?maxlevel=3'"})}),(0,n.jsx)(t.td,{children:"Define the nodes depth (levels) of the presented catalog to reduce the provided items for example show only items of the first three levels."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"?sort=ID"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"url: '/api/catalog/Hierarchietest/hierarchy?sort=ID'"})}),(0,n.jsx)(t.td,{children:'Define a sort criterion according to which the items are sorted in ascending order. These sort values are used to build up the "sortpath".'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"?select=Text,ID"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"url: '/api/catalog/Hierarchietest/hierarchy?select=Text,ID'"})}),(0,n.jsx)(t.td,{children:"Define the columns to be included in the query. Not defined the complete catalogs is queried."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"textValueCallback"}),(0,n.jsx)(t.td,{children:"Function(nodeVal: string, node: any)"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"textValueCallback: NameSpace.getTreeViewTextTemplate"})}),(0,n.jsx)(t.td,{children:"Provide a method to configure the text value, for example show the complete path of the selected item (node)."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"treeviewCtrlOptions"}),(0,n.jsx)(t.td,{children:"JSON Array"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"treeviewCtrlOptions: { ... }"})}),(0,n.jsx)(t.td,{children:"This array contains the options to configure the selection behaviuor of the node and its children. Default setting is no simultaneous selection of children."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"treeviewCtrlOptions:  {checkboxes: {..}}"}),(0,n.jsx)(t.td,{children:"JSON Array"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"checkboxes: { checkChildren: true } }"})}),(0,n.jsxs)(t.td,{children:["Set the option ",(0,n.jsx)(t.code,{children:"checkChildren"})," to ",(0,n.jsx)(t.code,{children:"true"}),", if you want to select all the children of a node simultaneously."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"treeviewCtrlOptions:  {dataTextField: 'Text'}"}),(0,n.jsx)(t.td,{children:"JSON Array"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"dataTextField: 'Text'"})}),(0,n.jsx)(t.td,{children:"Provide the catalog column name of the text value of the items."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"treeviewCtrlOptions:  {dataValueField: 'ID'}"}),(0,n.jsx)(t.td,{children:"JSON Array"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"dataValueField: 'ID' "})}),(0,n.jsx)(t.td,{children:"Provide the catalog column name of the unique identifier (i.e.: ID or Title) of the items."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"treeviewCtrlOptions:  {selectOnlyLeaves:\xa0true}"}),(0,n.jsx)(t.td,{children:"JSON Array"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"selectOnlyLeaves: true"})}),(0,n.jsxs)(t.td,{children:["Set the option  to ",(0,n.jsx)(t.code,{children:"true"}),' to restrict the selection to the "leaves" (i.e.  the end nodes of the tree). Default setting is ',(0,n.jsx)(t.code,{children:"false"}),"."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"onChanged"}),(0,n.jsx)(t.td,{children:"Function(value: { id: string, text: string }[])"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"onChanged: HFFormdefinition.Namespace.Method"})}),(0,n.jsx)(t.td,{children:"Call a pre-defined JS-method to do something when the status of the control changes (optional)"})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"listoptions-object",children:"listOptions Object"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"How to use"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"dialogText"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"dialogText: 'Display Text'"})}),(0,n.jsx)(t.td,{children:"Set custom label for filter/sort/group dialogs."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"dialogHide"}),(0,n.jsx)(t.td,{children:"Boolean"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"dialogHide: true"})}),(0,n.jsx)(t.td,{children:"Hide field from filter/sort/group dialogs."})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"stored-data",children:"Stored data"}),"\n",(0,n.jsx)(t.p,{children:"For each TreeView inside your forms there are two value pairs of stored data:"}),"\n",(0,n.jsx)(t.p,{children:"First the information for the TreeView itself"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n    "id": "treeview",\n    "value": "0009"\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"and second for the selected value:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n    "id": "treeview_HFText",\n    "value": "Punkt 3"\n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,l.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(a,{...e})}):a(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>d});var r=i(96540);const n={},l=r.createContext(n);function s(e){const t=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(l.Provider,{value:t},e.children)}}}]);