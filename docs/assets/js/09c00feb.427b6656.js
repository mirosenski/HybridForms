"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8420],{4416:(e,t,i)=>{i.d(t,{A:()=>A,n:()=>q});var s=i(96540),n=i(26186),r=i(66801),a=i(51107),o=i(22375),d=i(28774);const l="headingWrapper_viav",c="subHeading_VpFi",p="optionWrapper_rgfQ",h="optionHeading_F865",m="optionDescription_SgL9",f="optionExample_imJ2",u="optionDetails_xihm",g="separator_qNd6",x="tableRow_H7Hk";var y=i(38193);let j=function(e){return e.STORAGE_CHANGED="storageChanged",e}({});const b=(e,t)=>{const[i,n]=(0,s.useState)(((e,t)=>y.A.canUseDOM&&localStorage.getItem(e)||t)(e,t));return(0,s.useEffect)((()=>{const t=t=>{t.detail.key===e&&n(t.detail.newValue)};return window.addEventListener(j.STORAGE_CHANGED,t),()=>{window.removeEventListener(j.STORAGE_CHANGED,t)}}),[]),i},w="buttonGroup_qkEZ",v="buttonGroup__button_W3AV";var S=i(74848);const k=e=>{const{storageKey:t,subHeading:i}=e,s=b(t||"optionsList_Props","list"),n=e=>{var i,s;i=t||"optionsList_Props",s=e,localStorage.setItem(i,s),window.dispatchEvent(new CustomEvent(j.STORAGE_CHANGED,{detail:{key:i,newValue:s}}))};return(0,S.jsxs)("div",{className:w,style:{marginBottom:i?"4px":"20px"},children:[(0,S.jsx)("button",{className:`${v} button button--sm ${"list"===s?"button--primary":"button--secondary"}`,onClick:()=>n("list"),title:"List view",children:(0,S.jsx)("i",{className:"fas fa-list"})}),(0,S.jsx)("button",{className:`${v} button button--sm ${"table"===s?"button--primary":"button--secondary"}`,onClick:()=>n("table"),title:"Table view",children:(0,S.jsx)("i",{className:"far fa-table"})})]})},_=e=>e.sort(((e,t)=>e.name.localeCompare(t.name))).sort(((e,t)=>e.required&&!t.required?-1:!e.required&&t.required?1:0)),q=e=>{e.options=_(e.options);let t=[];return e.heading&&(t=[{value:e.heading,id:(0,o.k)(e.heading),level:e.levelBase?e.levelBase:2}]),[...t,...e.options.map((t=>({value:`${t.name}${t.required?" *":""}`,id:`${t.idPrefix?`${t.idPrefix}-`:""}${t.name}`,level:e.levelBase?e.levelBase+1:3})))]},A=e=>{const{options:t,storageKey:i,levelBase:p,heading:h,subHeading:m,subHeadingLink:f,children:u}=e,g=b(i||"optionsList_Props","list"),x=(0,s.useMemo)((()=>_(t)),[t]);if(0===x.length)return null;let y="h2";return p&&(y=`h${p}`),(0,S.jsxs)(S.Fragment,{children:[h&&(0,S.jsxs)("div",{className:l,children:[(0,S.jsx)(a.A,{as:y,id:(0,o.k)(h),className:"heading",style:{marginBottom:m?"4px":"20px"},children:h}),(0,S.jsx)(k,{storageKey:i,subHeading:Boolean(m)})]}),m&&(0,S.jsxs)("p",{className:c,children:[(0,S.jsx)(n.oz,{components:{a:F,p:"span"},rehypePlugins:[r.A],children:m})," ",f&&(0,S.jsx)(d.A,{href:f,children:"read more"})]}),u&&(0,S.jsx)(S.Fragment,{children:u}),("list"===g&&h||!h)&&(0,S.jsx)(T,{options:x}),"table"===g&&h&&(0,S.jsx)(D,{options:x})]})},T=e=>{const{options:t}=e;return(0,S.jsx)(S.Fragment,{children:t.map(((e,i)=>(0,S.jsxs)("div",{className:p,children:[(0,S.jsxs)(a.A,{as:"h3",id:`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`,className:h,children:[e.name,e.required&&(0,S.jsx)("small",{style:{fontWeight:"normal"},children:" - required"})]}),(0,S.jsx)("div",{className:m,children:(0,S.jsx)(n.oz,{components:{a:F,p:"span"},rehypePlugins:[r.A],children:e.description})}),(0,S.jsxs)("div",{className:u,children:[(0,S.jsxs)("div",{children:[(0,S.jsx)("strong",{children:"How to use:"})," ",(0,S.jsx)("div",{className:f,children:(0,S.jsx)(n.oz,{components:{a:F,p:"code"},rehypePlugins:[r.A],children:e.example})})]}),e.type&&(0,S.jsxs)("div",{children:[(0,S.jsx)("strong",{children:"Type:"})," ",(0,S.jsx)("code",{dangerouslySetInnerHTML:{__html:e.type}})]}),e.signature&&(0,S.jsxs)("div",{children:[(0,S.jsx)("strong",{children:"Signature:"})," ",(0,S.jsx)("code",{children:e.signature})]}),e.default&&(0,S.jsxs)("div",{children:[(0,S.jsx)("strong",{children:"Default:"})," ",(0,S.jsx)("code",{children:e.default})]})]}),i<t.length-1&&(0,S.jsx)("hr",{className:g})]},`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`)))})},D=e=>{const{options:t}=e;return(0,S.jsxs)("table",{children:[(0,S.jsx)("thead",{children:(0,S.jsxs)("tr",{children:[(0,S.jsx)("td",{children:"Property"}),(0,S.jsx)("td",{children:"Type"}),(0,S.jsx)("td",{children:"How to use"}),(0,S.jsx)("td",{children:"Description"})]})}),(0,S.jsx)("tbody",{children:t.map((e=>(0,S.jsxs)("tr",{id:`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`,className:x,children:[(0,S.jsx)("td",{children:e.required?(0,S.jsx)(S.Fragment,{children:(0,S.jsxs)("strong",{children:[e.name," *"]})}):(0,S.jsx)(S.Fragment,{children:e.name})}),(0,S.jsx)("td",{children:(0,S.jsx)("code",{dangerouslySetInnerHTML:{__html:e.type}})}),(0,S.jsx)("td",{children:(0,S.jsx)("div",{className:f,children:(0,S.jsx)(n.oz,{components:{a:F,p:"code"},rehypePlugins:[r.A],children:e.example})})}),(0,S.jsx)("td",{children:(0,S.jsx)(n.oz,{components:{a:F,p:"span"},rehypePlugins:[r.A],children:e.description})})]},`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`)))})]})},F=e=>{let{children:t,href:i}=e;return(0,S.jsx)(d.A,{to:i,children:t})}},22375:(e,t,i)=>{i.d(t,{I:()=>n,k:()=>s});const s=e=>e.replace(/[\s_]+/g,"-").toLowerCase(),n=function(e,t){void 0===t&&(t=!1);const[i,s,n,r]=e.replace(/^#?(?:(?:(..)(..)(..)(..)?)|(?:(.)(.)(.)(.)?))$/,"$1$5$5$2$6$6$3$7$7$4$8$8").match(/(..)/g).map((e=>parseInt("0x"+e)));return(~~(299*i)+~~(587*s)+~~(114*n))/1e3>=128||1+~(128/r)&&t?"#000":"#FFF"}},71551:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>E,contentTitle:()=>P,default:()=>C,frontMatter:()=>N,metadata:()=>s,toc:()=>B});const s=JSON.parse('{"id":"form-templates/features/stages","title":"Stages and Workflows","description":"Stages enable you to control the editable parts and the form processing within the scope of predefined workflows.","source":"@site/versioned_docs/version-10.1/20-form-templates/30-features/40-stages.mdx","sourceDirName":"20-form-templates/30-features","slug":"/form-templates/features/stages","permalink":"/docs/form-templates/features/stages","draft":false,"unlisted":false,"tags":[],"version":"10.1","sidebarPosition":40,"frontMatter":{"title":"Stages and Workflows","description":"Stages enable you to control the editable parts and the form processing within the scope of predefined workflows."},"sidebar":"tutorialSidebar","previous":{"title":"Dynamic Repeating Units","permalink":"/docs/form-templates/features/dynamicrepeatingunits"},"next":{"title":"Workflow Examples","permalink":"/docs/form-templates/features/workflow-examples"}}');var n=i(74848),r=i(28453),a=i(51107),o=i(4416);const d=[{name:"type",type:"string",description:"Set the type of the workflow, further properties are available depending on the type.",example:'"type": "pdf"',required:!0},{name:"errorAction",type:"string",description:'Define the action in case the workflow fails: "ignore" skips the failed workflow and proceeds as defined, "status=Edit[, stage]" stops any workflow execution and sets the Form Item status (and optionally the form stage) to the specified status. "fields" sets the specified fields to the specified values.',example:'"errorAction": "ignore / status=Edit[, stage] / fields={"fieldname": "fieldvalue", ...}"',required:!1},{name:"errorFeedback",type:"string",description:"Provide an error message (List page feedback dialog).",example:'"errorFeedback": "Email dispatch failed."',required:!1},{name:"errorNotify",type:"string",description:"Provide an email address for an error notification email.",example:'"errorNotify": "admin@example.com"',required:!1},{name:"errorNotifyFrom",type:"string",description:"Specifies the email address from which error notification emails will be sent.",example:'"errorNotifyFrom": "admin@example.com"',required:!1},{name:"errorNotifyReplyTo",type:"string",description:"If set, it will instruct the recipient mailclient to send replies to the specified address instead of the 'from' address.",example:'"errorNotify": "admin@example.com"',required:!1},{name:"errorNotifySubject",type:"string",description:"Provide an email subject for an error notification email.",example:'"errorNotifySubject": "Workflow error"',required:!1},{name:"errorNotifyTemplate",type:"string",description:"Provide an email template file for more complex error notification email content.",example:'"errorNotifyTemplate": "errortemplate.txt"',required:!1}],l=[{name:"create",type:"boolean",description:"Set option to `false`, if you want to prevent PDF creation at this time of workflow processing.",example:'"create": false',required:!1},{name:"language",type:"string",description:"Select which translation language should be used when generating the pdf",example:'"language": "De"',required:!1}],c=[{name:"target",type:"string",description:"Specify a filename to which the form.pdf is copied and stored as an attached document to the Form Item.",example:'"target": "stage2.pdf"',required:!0}],p=[{name:"condition",type:"string",description:"Define the condition to evaluate. Test for equality (`==`) or inequality (`!=`), please use uppercase for testing boolean values (**T**rue / **F**alse). To check if a form field value is null or empty compare the form field to a fake (i.e. not existing) form field. See more examples [here](workflow-examples#conditions-examples).",example:'"condition": "{field} != True"',required:!0},{name:"isEnhanced",type:"boolean",description:"Enables the use of complex expression conditions. More information [here](https://learn.microsoft.com/en-us/dotnet/fundamentals/runtime-libraries/system-data-datacolumn-expression). Variable substitutions are always strings and must be enclosed in single quotes '{control01}'. Example for an enhanced condition: ('{checkbox01}' = 'True' or '{text1}' = 'Hello') and '{checkbox02}'='False'",example:'"isEnhanced": true',required:!1}],h=[{name:"template",type:"string",description:"Provide the filename of the excel template that is included in the FormDefinition template files.",example:'"template": "excel_template.xlsx"',required:!0},{name:"filename",type:"string",description:"Provide a filename for the excel output file.",example:'"filename": "form.xlsx"',required:!0}],m=[{name:"subject",type:"string",description:"Provide a subject line.",example:'"subject": "HybridForms: Form Approved"',required:!0},{name:"attachDocuments",type:"string",description:'Attach the named documents made avaliable by the App feature "Documents" to the email using a regex pattern.',example:'"attachDocuments": "^stage2.pdf$, ^uploadedDocument.docx$"',required:!1},{name:"attachEmlDocument",type:"string",description:"Attach the finished email to the form item as an .eml file with the specified filename",example:'"attachEmlDocument": "mail.eml"',required:!1},{name:"attachImage",type:"string",description:"Attach an image from the Form Template and make it available for reference inside your mailtemplat.",example:'"attachImage": "form-logo.png"',required:!1},{name:"attachImages",type:"boolean",description:"Attach all images (photos/sketches etc) contained in the form.",example:'"attachImages": true',required:!1},{name:"attachPDF",type:"boolean",description:"Set the value to true to attach the form.pdf to the email.",example:'"attachPDF": true',required:!1},{name:"attachTemplateFiles",type:"Array<string>",description:"Attach files from the Form Template to the email.",example:'"attachTemplateFiles": ["Example.pdf"]',required:!1},{name:"bcc",type:"string",description:"Set additional email address(es) not shown in header.",example:'"bcc": "{email-address1},{email-address2}"',required:!1},{name:"body",type:"string",description:"Provide a short email body message. You can include values of form fields.",example:'"body": "A new form {title} has been approved"',required:!1},{name:"bodyFile",type:"string",description:"Provide a simple email template file.",example:'"bodyFile ": "mailbody.txt"',required:!1},{name:"cc",type:"string",description:"Set additional email address(es).",example:'"cc": "{email-address1},{email-address2}"',required:!1},{name:"filename",type:"string",description:"Rename the form.pdf file attached to the email, note: this does not affect the stored form.pdf.",example:'"filename": "attachFile.pdf"',required:!1},{name:"format",type:"string",description:'Format of the email to send. can be either "text" or "html". Default is html, which will generate a multipart message containing both text and html parts',example:'"format": "text"',required:!1},{name:"from",type:"string",description:"Set sender Address.",example:'"from": "{email-address1}"',required:!1},{name:"replyTo",type:"string",description:"replyTo header for the email. If set will instruct recipients mailclient to send replies to the specified address instead of the 'from' address",example:'"replyTo": "recipient@example.com"',required:!1},{name:"templateFile",type:"string",description:"Provide an email template file for more complex email content. Mustache templating engine is used to set form fields and variables. [Read more](https://github.com/janl/mustache.js)",example:'"templateFile ": "mailtemplate.txt"',required:!1},{name:"to",type:"string",description:"Set the recipient's email address(es). Multiple addresses can be separated by a comma.",example:'"to": "{email-address1},{email-address2}"',required:!1},{name:"urgent",type:"boolean",description:"Indicates whether the email should be marked as high priority.",example:'"urgent": true',required:!1}],f=[{name:"fields",type:"{ [key: string]: string }",description:"Specify the form fields and the values inherited by the new form.",example:'"fields": {"name" : "{name_textfield}", "date": "{work_date}",...}',required:!1},{name:"formUpdateModel",type:"string",description:"Specify properties for the new form in the same format the formupdate API takes. If this is specified, it takes precedence over the other options for specifying new form contents.",example:'"formUpdateModel": "{\\\\"title\\\\": \\\\"newTitle\\\\", \\\\"fields\\\\": {\\\\"field1\\\\": \\\\"{control01}\\\\"}}"',required:!1},{name:"group",type:"string",description:"Specify the group of the new form, defaults to current form",example:'"group": "hf-group"',required:!1},{name:"jsonEscapeModel",type:"boolean",description:"When using the formUpdateModel, specify if {} substitutions should be quoted to avoid json special characters. Set to false if you want to substitue a complete json structure in a single variable",example:'"jsonEscapeModel": true',required:!1},{name:"owner",type:"string",description:"Specify the owner of the new form, defaults to current form",example:'"owner": "user@hybridforms.net"',required:!1},{name:"stage",type:"string",description:"Specify the stage of the new form, defaults to current form",example:'"stage": "S3"',required:!1},{name:"status",type:"string",description:"Specify the status of the new form, defaults to current form",example:'"status": "Edit"',required:!1},{name:"template",type:"string",description:"Specify the template id of the new form if the created form is not of the same type.",example:'"template": "bc40e199-e8a1-4a4f-9b53-a5e8f16154c0"',required:!1},{name:"title",type:"string",description:"Title of the new form, defaults to current form",example:'"title": "{Title}"',required:!1}],u=[{name:"url",type:"string",description:"Specify the URL to connect to.",example:'"url": "https://example.com/api/endpoint"',required:!0},{name:"requestType",type:"string",description:'Define the request method ("POST" or "GET").',example:'"requestType": "POST"',required:!1},{name:"impersonate",type:"boolean",description:"Set the value to true to call the service authenticated as the user submitting the form.",example:'"impersonate": false',required:!1},{name:"resourceId",type:"boolean",description:"Set the ADFS/AzureAD identity of the called service for impersonation.",example:'"resourceId": "ClientID"',required:!1},{name:"timeout",type:"number",description:"Timeout in seconds for calling the specified service. Default 100 seconds.",example:'"timeout": 300',required:!1},{name:"success",type:"string",description:"Conditional expression to verify successful completion. Fields from a Json or XML body returned by the service can be referenced.",example:'"success": "{result_returnCode}==0"',required:!1},{name:"message",type:"string",description:"Template for the history entry in case the success condition is not met.",example:'"message": "Status code \'{result_returnCode}\' returned by service. Error: {result_message}"',required:!1},{name:"fields",type:"{ [key: string]: string }",description:"List of fields to set in the form using values from the body returned by the called service.",example:'"fields": {"fld1":"result_data_fld1",...}',required:!1},{name:"headers",type:"{ [key: string]: string }",description:"List of additional http headers to set when calling the service.",example:'"headers": {"X-Access-Token":"1234",...}',required:!1},{name:"clientId",type:"string",description:"ClientId for ADFS/Entra ID authentication.",example:'"clientId": "exampleId"',required:!1},{name:"clientSecret",type:"string",description:"ClientSecret for ADFS/Entra ID authentication.",example:'"clientSecret": "exampleSecret"',required:!1},{name:"metaData",type:"string",description:"MetadataAddress for ADFS/Entra ID authentication configuration.",example:'"metaData": "https://adfs.example.com/adfs/.well-known/openid-configuration"',required:!1},{name:"userName",type:"string",description:"Username for ADFS/Windows AD authentication.",example:'"userName": "exampleUser"',required:!1},{name:"password",type:"string",description:"Password for ADFS/Windows AD authentication.",example:'"password": "examplePassword"',required:!1},{name:"retryDelay",type:"number",description:"Requests are retried three times in case of failure. Retrydelay specifies how long to wait (in seconds) before 2nd and 3rd attempts.",example:'"retryDelay":300',required:!1},{name:"skipRetryStatus",type:"string",description:"If the http status code matches this regular extression, no further retires will be made.",example:'"skipRetryStatus" = "^2"',required:!1},{name:"successIsEnhanced",type:"boolean",description:"Enables the use of complex expressions for the success condition. More information [here](https://learn.microsoft.com/en-us/dotnet/fundamentals/runtime-libraries/system-data-datacolumn-expression). Variable substitutions are always strings and must be enclosed in single quotes '{control01}'. Example for an enhanced condition: ('{checkbox01}' = 'True' or '{text1}' = 'Hello') and '{checkbox02}'='False'",example:'"successIsEnhanced:" false',required:!1},{name:"authenticationType",type:"string",description:'Authentication type to use when calling the service. can be "credentials" for username/password or "adfs" for OpenIdConnect',example:'"authenticationType:" "Adfs"',required:!1},{name:"certificate",type:"string",description:"base64 encoded PKCS12 (.pfx) certificate to use as a client certificate for the web service.",example:'"certificate": "MIILSQIBAzCCCw8GCSqGSI....=="',required:!1},{name:"certificatePassword",type:"string",description:"Password for the specified client certificate.",example:'"certificatePassword": "{secret}"',required:!1},{name:"logResponse",type:"boolean",description:"Log the full web service response to the hybridForms log file even for successfull calls (status 2xx).",example:'"logResponse:" false',required:!1},{name:"formUpdateModel",type:"string",description:"Specify updates to make to the form based on the respone from the web service in the same format the formupdate API takes. The full body is available as {result_originalbody}.",example:'"formUpdateModel": "{\\\\"fields\\\\": {\\\\"field1\\\\": \\\\"{result_value1}\\\\"}}"',required:!1},{name:"jsonEscapeModel",type:"boolean",description:"When using the formUpdateModel, specify if {} substitutions should be quoted to avoid json special characters. Set to false if you want to substitue a complete json structure in a single variable",example:'"jsonEscapeModel:" false',required:!1},{name:"bodyFile",type:"string",description:"Filename of a file attached to the curent form item to be used as the body of a POST or PUT request.",example:'"bodyFile": "somefile.xml"',required:!1},{name:"bodyFilePattern",type:"string",description:"Regular expression pattern that can match multiple filenames attached to the current form item. if multiple files are matched, the specified url will be called once for each filename.",example:'"bodyFilePattern"=".*\\\\.pdf$"',required:!1}],g=[...u,{name:"transformFile",type:"string",description:"Provide an XSLT file for transformation of HybridForms XML to POST body. Must be in XSLT 1.0 format.",example:'"transformFile": "nameofxsltemplate.xslt"',required:!1}],x=[...u,{name:"format",type:"string",description:"Specify how complete the information in JSON should be, same as can be specified when requesing forms using the API.",example:'"format": "Minimal/Brief/Full/Repeating"',required:!1},{name:"includeFiles",type:"boolean",description:'Set to true to include attachment binary data in "files" property (as "base64Content").',example:'"includeFiles": true',required:!1},{name:"includeCharset",type:"boolean",description:'Set to true to include charset attribute in the content type ("application/json; charset=utf-8").',example:'"includeCharset": true',required:!1}],y=[{name:"program",type:"string",description:"Location on the server of a script to execute.",example:'"program": "path_to_script_on_server"',required:!0},{name:"arguments",type:"string",description:"Parameters to pass to the called script or program.",example:'"arguments": "{templateId} {itemId}"',required:!1},{name:"timeout",type:"number",description:"Number of seconds to wait for the executed program to finish. Defaults to 60.",example:'"timeout": "300"',required:!1},{name:"fields",type:"{ [key: string]: string }",description:"List of item fields to update after calling the program.",example:'{"control01": "{result_value1}"}',required:!1},{name:"files",type:"{ [key: string]: string }",description:"List of files to add/update for the current item after calling the programm. File content must be provided as base64 encoded strings.",example:'{"result_file.jpg": "{result_files_image}"}',required:!1},{name:"formUpdateModel",type:"string",description:"Specify updates to make to the form based on the respone from the program in the same format the formupdate API takes. The full output is available as {result_originalbody}.",example:'"formUpdateModel": "{\\\\"fields\\\\": {\\\\"field1\\\\": \\\\"{result_value1}\\\\"}}"',required:!1},{name:"jsonEscapeModel",type:"boolean",description:"When using the formUpdateModel, specify if {} substitutions should be quoted to avoid json special characters. Set to false if you want to substitue a complete json structure in a single variable",example:'"jsonEscapeModel": false',required:!1}],j=[{name:"owner",type:"string",description:"Change the owner of the Form Item when proceeding to the next stage. Value should be the owners UPN",example:'"owner": "{field}"',required:!0}],b=[{name:"owner",type:"string",description:"Change the owner of the Form Item in the current stage. Value should be the owners UPN",example:'"owner": "{field}"',required:!0}],w=[{name:"status",type:"string",description:'Set item status ("New", "Edit", "Group", "Reachout", "Approved" or "Archived") when proceeding to the next stage.',example:'"status ": "Archived"',required:!0}],v=[{name:"status",type:"string",description:'Set the form status ("New", "Edit", "Group", "Reachout", "Approved" or "Archived") in the current stage.',example:'"status ": "Archived"',required:!0}],S=[{name:"group",type:"string",description:"Assign item to a new group when proceeding to the next stage.",example:'"group": "grp_admin"',required:!0}],k=[{name:"group",type:"string",description:"Assign a new group to the item in the current stage.",example:'"group": "grp_admin"',required:!0}],_=[{name:"field",type:"string",description:"Name of a single field in the current item.",example:'"field": "control01"',required:!0},{name:"value",type:"string",description:'Set the new value of the defined form field. Enter the new value by using the variant string `"new value"` or by referencing a field value `{{another fieldID}}` or set the value of RadioBoxes or CheckBoxes using the variant `{true}, {false} or {null}`.',example:'"value" : "new value"',required:!0}],q=[{name:"feedback",type:"string",description:"Set a feedback message on the current form. To preview how it appears, click [here](workflow-examples#feedback-example-pictures).",example:'"feedback" : "Feedback message"',required:!0}],A=[{name:"stage",type:"string",description:"Set a stage to proceed to at the next stage change.",example:'"stage": "stage_3"',required:!0}],T=[{name:"catalogName",type:"string",description:"The name of the catalog from which an entry is to be deleted.",example:'"catalogName": "catalog_name"',required:!0},{name:"entryIds",type:"string",description:"Specifies the IDs (or Titles in older catalogs) of the entries to be deleted, provided as a string.",example:'"entryIds": "ItemID"',required:!1},{name:"entryIdsObject",type:"array",description:"An array of IDs (or Titles in older catalogs) of the entries to be deleted. This option is recommended when dealing with multiple entries, as it is more organized and easier to manage compared to using a single string.",example:'"entryIdsObject": ["{ItemID}"]',required:!1}],D=[{name:"catalogName",type:"string",description:"Specifies the name of the catalog to which new entries will be added.",example:'"catalogName": "catalog_name"',required:!0},{name:"entries",type:"string",description:"Specifies the entries to be added, provided as a string.",example:'"entries": "ItemID"',required:!1},{name:"entriesObject",type:"array",description:"An array of entries to be added. This option is recommended for larger datasets, as it is more organized and easier to manage compared to using a single string for multiple entries.",example:'"entriesObject": ["{ItemID}"]',required:!1}],F=[{name:"stopWithError",type:"boolean",description:"Determines whether the workflow should stop with an error. If set to `true`, the workflow will terminate with an error, and all previous steps will be undone. If set to `false`, the workflow will stop at the current stage, and earlier workflows will be completed as usual.",example:'"stopWithError": true',required:!1}],I=[{name:"formUpdateModel",type:"string",description:"Update form using the same format as used by the new API available since v9.0 that makes form handling easier (eg. pictures, datefields, feedback, repeating units etc.). See more information [here](https://documenter.getpostman.com/view/6898557/S1EMUzAD?version=latest#1ef6d91a-80a7-4575-a181-d87bb8f5f2a0).",example:'"formUpdateModel": "{\\\\"fields\\\\": {\\\\"field1\\\\": \\\\"{result_value1}\\\\"}}"',required:!0},{name:"jsonEscapeModel",type:"boolean",description:"Specify if {} substitutions should be quoted to avoid json special characters. Set to false if you want to substitue a complete json structure in a single variable",example:'"jsonEscapeModel": false',required:!1}];const N={title:"Stages and Workflows",description:"Stages enable you to control the editable parts and the form processing within the scope of predefined workflows."},P=void 0,E={},B=[{value:"JSON File",id:"json-file",level:2},{value:"Stage Object",id:"stage-object",level:3},{value:"Workflow Object",id:"workflow-object",level:3},{value:"Workflow Definitions",id:"workflow-definitions",level:2},...(0,o.n)({options:d,heading:"Common",levelBase:3}),...(0,o.n)({options:l,heading:"type: pdf",levelBase:3}),...(0,o.n)({options:c,heading:"type: copypdf",levelBase:3}),...(0,o.n)({options:p,heading:"type: condition",levelBase:3}),...(0,o.n)({options:h,heading:"type: createexcel",levelBase:3}),...(0,o.n)({options:m,heading:"type: email",levelBase:3}),...(0,o.n)({options:f,heading:"type: newform",levelBase:3}),...(0,o.n)({options:u,heading:"type: request",levelBase:3}),...(0,o.n)({options:g,heading:"type: xmlrequest",levelBase:3}),...(0,o.n)({options:x,heading:"type: jsonrequest",levelBase:3}),...(0,o.n)({options:y,heading:"type: execute",levelBase:3}),...(0,o.n)({options:j,heading:"type: setowner",levelBase:3}),...(0,o.n)({options:b,heading:"type: setcurrentowner",levelBase:3}),...(0,o.n)({options:w,heading:"type: setstatus",levelBase:3}),...(0,o.n)({options:v,heading:"type: setcurrentstatus",levelBase:3}),...(0,o.n)({options:S,heading:"type: setgroup",levelBase:3}),...(0,o.n)({options:k,heading:"type: setcurrentgroup",levelBase:3}),...(0,o.n)({options:_,heading:"type: setfield",levelBase:3}),...(0,o.n)({options:q,heading:"type: setfeedback",levelBase:3}),...(0,o.n)({options:A,heading:"type: stagechange",levelBase:3}),...(0,o.n)({options:D,heading:"type: updatecatalogentries",levelBase:3}),...(0,o.n)({options:T,heading:"type: deletecatalogentries",levelBase:3}),...(0,o.n)({options:F,heading:"type: stop",levelBase:3}),...(0,o.n)({options:I,heading:"type: formupdate",levelBase:3}),{value:"Workflow Data",id:"workflow-data",level:2},{value:"Form Definition",id:"form-definition",level:2},{value:"Conditions",id:"conditions",level:3},{value:"list-/headerTemplate",id:"list-headertemplate",level:3},{value:"Images in mailtemplate.txt",id:"images",level:2}];function L(e){const t={a:"a",admonition:"admonition",code:"code",hr:"hr",img:"img",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.p,{children:'The steps of the form processing workflow ("stages") can be defined by a JSON file. This file is named "stages.json" and can be provided as part of your template definition.'}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Note"}),': "Stages" require a Server version 7.2.* or higher AND an App version 7.3 or higher!']}),"\n",(0,n.jsx)(a.A,{as:"h2",id:"json-file",children:"JSON File"}),"\n",(0,n.jsx)(t.p,{children:'The JSON file serves as the "configuration file" for stages and workflows initialized by clicking the toolbar button "Approve".'}),"\n",(0,n.jsxs)(t.p,{children:["Unless a ",(0,n.jsx)(t.code,{children:"stages.json"}),' file is provided, the Form Definition is processed in "stage 1" with all default settings.']}),"\n",(0,n.jsxs)(t.p,{children:["The JSON file consists of two objects: ",(0,n.jsx)(t.code,{children:"stages"})," and ",(0,n.jsx)(t.code,{children:"workflows"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["The stage definition must include a ",(0,n.jsx)(t.code,{children:"next"})," definition, specifying what should happen if a stage is approved (",(0,n.jsx)(t.code,{children:"Form.Status == Approved"}),"). The form will progress to the next stage when all defined workflows of the current stage have successfully completed, or it will finish if only one stage is defined."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n    "stages": {\n        "stage_1": {\n            "first": true,\n            "label": "Stage 1",\n            "appKioskMode": false,\n            "next": {\n                "stage": "stage_2",\n                "workflows": ["wf_pdf","wf_cond1" "wf_email1", "wf_grp1", "wf_excel" ],\n                "buttonLabel": "Approve Stage 1: {{field_id}}",\n                "dialogTitle": "Approve dialog title",\n                "dialogMessage": "Message text of the approve dialog - Finishing {{field_id}}"\n            },\n            "stateChanges": {\n                "Group": {\n                    "workflows": [ "wf_email1" ]\n                }\n            }\n        },\n        "stage_ ...": {\n\n        },\n        "stage_final": {\n            "label": "Stage final",\n            "next": {\n                "workflows": [ "wf_archive" ]\n            }\n        }\n    },\n    "workflows": {\n        "wf_pdf": {\n            "type": "pdf",\n            "create": true\n        },\n        "wf_email1": {\n            "type": "email",\n            "to": "office@icomedias.com",\n            "subject": "New HybridForms process created ",\n            "body": "A new HybridForms process was created.",\n            "erroraction": "ignore",\n            "errorfeedback": "Notification could not be sent",\n            "errornotify": "admin@icomedias.com",\n            "filename": "email-filename.pdf",\n            "attachPDF": true,\n            "attachImages": true,\n            "attachimage":"form-logo.png"\n        },\n        "wf_email2" : {\n            "type": "email",\n            "to": "office@icomedias.com",\n            "subject": "A new form",\n            "template": "mailtemplate.txt"\n        },\n        "wf_grp1": {\n            "type": "setgroup",\n            "group": "icoad\\\\ag-sachbearbeiter"\n        },\n         "wf_current_grp": {\n            "type": "setcurrentgroup",\n            "group": "icoad\\\\ag-mitarbeiter"\n        },\n        "wf_archive": {\n            "type": "setstatus",\n            "status": "Archived"\n        },\n        "wf_current_archived": {\n            "type": "setcurrentstatus",\n            "status": "Archived"\n        },\n        "wf_cond1": {\n            "type": "condition",\n            "condition": "{field} != True"\n        },\n        "wf_newValue": {\n            "type": "setfield",\n            "field": "fieldID",\n            "value": "new Value"\n        },\n        "wf_newCheckboxValue": {\n            "type": "setfield",\n            "field": "fieldID",\n            "value": "{true}"\n        },\n        "wf_newRadioboxValue": {\n            "type": "setfield",\n            "field": "fieldID",\n            "value": "{null}"\n        },\n        "wf-newform": {\n            "type": "newform",\n            "title": "{Title}",\n            "template": "bc40e199-e8a1-4a4f-9b53-a5e8f16154c0",\n            "status": "Edit",\n            "stage": "S1",\n            "owner": "user@hybridforms.net",\n            "group": "hf-group",\n            "fields": {\n                "name" : "{name_textfield}",\n                "date": "{work_date}"\n            }\n        },\n        "wf_owner": {\n            "type": "setowner",\n            "owner": "{fieldValueUPN}"\n        },\n        "wf_current_owner": {\n            "type": "setcurrentowner",\n            "owner": "{Editor}"\n        },\n        "wf_excel": {\n            "type": "createexcel",\n            "template": "excel_template.xlsx",\n            "filename": "form.xlsx",\n            "errorNotify": "admin@icomedias.com",\n            "errorFeedback": "Fehler beim Erzeugen des Excel"\n        }\n    }\n}\n'})}),"\n",(0,n.jsx)(t.admonition,{title:"Note",type:"tip",children:(0,n.jsx)(t.p,{children:'Workflows executed by finishing a "one-stage" Form Item must be defined inside a stages.json as well, simply skip the entry "stage" inside the "next" object.'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",metastring:"showLineNumbers",children:'"S1": {\n    "first": true,\n    "label": "Default Stage",\n    "next": {\n        "workflows": ["wf_email"]\n    }\n}\n'})}),"\n",(0,n.jsx)(t.p,{children:"If the stage enging is enabled, the App kiosk mode is disabled by default. The App kiosk mode could be activated for a specific stage."}),"\n",(0,n.jsx)(t.admonition,{title:"Note",type:"tip",children:(0,n.jsxs)(t.p,{children:['Stages and workflows can also be created and edited in the Admin UI. Go to the FormDefinition template, in the section "stages" click the "Edit"-button.\n',(0,n.jsx)(t.img,{src:"/img/doc/editStages.png#light-mode-only",alt:"Edit Stages in Admin UI"}),(0,n.jsx)(t.img,{src:"/img/doc/editStages-dark.png#dark-mode-only",alt:"Dark Edit Stages in Admin UI"})]})}),"\n",(0,n.jsx)(a.A,{as:"h3",id:"stage-object",children:"Stage Object"}),"\n",(0,n.jsxs)(t.p,{children:['Configure a stage object by specifying a custom name (e.g. "stage_1" ) and the values for the keys ',(0,n.jsx)(t.code,{children:"label"}),", ",(0,n.jsx)(t.code,{children:"next"}),", ",(0,n.jsx)(t.code,{children:"stagechanges"})," and once ",(0,n.jsx)(t.code,{children:"first"}),"."]}),"\n",(0,n.jsx)(t.admonition,{title:"Info",type:"info",children:(0,n.jsxs)(t.p,{children:["The key-value pairs ",(0,n.jsx)(t.code,{children:"label"}),", ",(0,n.jsx)(t.code,{children:"next"})," and ",(0,n.jsx)(t.code,{children:"first"})," are required and ",(0,n.jsx)(t.code,{children:"first"})," must be unique."]})}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{children:"How to use"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"first"}),(0,n.jsx)(t.td,{children:"Boolean"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"first": true'})}),(0,n.jsx)(t.td,{children:"Specify the stage where to start."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"label"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"label": "Stage 1"'})}),(0,n.jsx)(t.td,{children:"Set the ID/name of the stage used in your form for conditions."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"appKioskMode"}),(0,n.jsx)(t.td,{children:"Boolean"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"appKioskMode": false'})}),(0,n.jsxs)(t.td,{children:["De/activate App Kiosk Mode button for this stage. App Kiosk Mode must be enabled for form (",(0,n.jsx)(t.a,{href:"./appkioskmode",children:"App Kiosk Mode"}),"). Default value is true."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"next"}),(0,n.jsx)(t.td,{children:"Object"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"next": { }'})}),(0,n.jsx)(t.td,{children:"Define the options of the workflows initialized by finishing the stage."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"../stage"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"next": {"stage":"stage_final"}'})}),(0,n.jsx)(t.td,{children:"Set the stage processed next."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"../workflows"}),(0,n.jsx)(t.td,{children:"JSON Array"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"next": {"workflows": ["wf_pdf","wf_cond1" "wf_email1", "wf_grp1"] }'})}),(0,n.jsx)(t.td,{children:"Specify the workflows invoked by finishing the stage."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"../buttonLabel"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"next": {"buttonLabel":"Approve Stage 1: {{field_id}}"}'})}),(0,n.jsxs)(t.td,{children:['For better usability define an appropriate label of the "Approve" button in the form toolbar for each stage. ',(0,n.jsx)(t.code,{children:"{{field_id}}"})," placeholder gets replaced by list data value."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"../dialogTitle"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"next": {"dialogTitle": "Approve dialog title"}'})}),(0,n.jsxs)(t.td,{children:["Specify the title of the approve dialog for each stage. ",(0,n.jsx)(t.code,{children:"{{field_id}}"})," placeholder gets replaced by list data value."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"../dialogMessage"}),(0,n.jsx)(t.td,{children:"String"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"next": {"dialogMessage": "Message text of the approve dialog"}'})}),(0,n.jsxs)(t.td,{children:["Specify the approve dialog message text for each stage. ",(0,n.jsx)(t.code,{children:"{{field_id}}"})," placeholder gets replaced by list data value."]})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"stateChanges"}),(0,n.jsx)(t.td,{children:"Object"}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"stateChanges": { "Group": {"workflows": [ "wf_email1" ] } }'})}),(0,n.jsx)(t.td,{children:"Define the workflows invoked by changing the form's status in the stage's life cycle."})]})]})]}),"\n",(0,n.jsx)(a.A,{as:"h3",id:"workflow-object",children:"Workflow Object"}),"\n",(0,n.jsx)(t.p,{children:"Define all your workflows invoked by stage or status changes."}),"\n",(0,n.jsx)(t.p,{children:"These workflows can be used multiple times and can be of different types: conditions, requests, emails sent or changes of the Form Item meta data (e.g the owner or the assigned group)."}),"\n",(0,n.jsx)(t.admonition,{title:"Note",type:"tip",children:(0,n.jsxs)(t.p,{children:["The workflows are processed in order of the JSON array position. A workflow of ",(0,n.jsx)(t.code,{children:'"type": "condition"'})," is applied to all following workflows until a new condition is defined.\nin the example ",(0,n.jsx)(t.code,{children:'{"workflows": ["wf_pdf","wf_cond1", "wf_email1", "wf_grp1"]}'})," the condition of the workflow ",(0,n.jsx)(t.code,{children:'"wf_cond1"'})," controls the execution of workflow ",(0,n.jsx)(t.code,{children:'"wf_email1"'})," and ",(0,n.jsx)(t.code,{children:'"wf_group"'}),"."]})}),"\n",(0,n.jsx)(a.A,{as:"h3",id:"workflow-definitions",children:"Workflow Definitions"}),"\n",(0,n.jsx)(o.A,{heading:"Common",subHeading:"Common options for every workflow option typically include type specifications and error handling mechanisms (such as retries, logging, and notifications).",options:d,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: pdf",options:l,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: copypdf",options:c,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: condition",options:p,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: createexcel",subHeading:"Creates an excel with data of the form based on an excel template file that contains form field replacers. These replacers are contained in double curly braces, eg: `{{field_id}}`, in an excel cell. See more examples [here](workflow-examples#createexcel-examples).",options:h,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: email",subHeading:"Send an email. At a minimum, a subject and at least one recipient (to, cc or bcc) must be specified",options:m,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: newform",options:f,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: request",options:u,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: xmlrequest",subHeading:"Send XML formated data to the service.",options:g,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: jsonrequest",subHeading:"Send JSON data to the service.",options:x,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: execute",subHeading:"Call an executable or a script on the server. Special parameter `{PDF}` refers to the path of a copy of the form.pdf file.",options:y,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: setowner",options:j,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: setcurrentowner",options:b,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: setstatus",options:w,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: setcurrentstatus",options:v,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: setgroup",options:S,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: setcurrentgroup",options:k,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: setfield",subHeading:"This option is deprecated; we recommend using `formupdate` instead.",options:_,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: setfeedback",options:q,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: stagechange",options:A,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: updatecatalogentries",options:D,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: deletecatalogentries",options:T,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: stop",options:F,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(o.A,{heading:"type: formupdate",options:I,levelBase:"3",storageKey:"optionsList_Stages"}),"\n",(0,n.jsx)(a.A,{as:"h2",id:"workflow-data",children:"Workflow Data"}),"\n",(0,n.jsxs)(t.p,{children:["Besides any form field value (i.e addressed by ",(0,n.jsx)(t.code,{children:"{form field id}"})," ) you can use the following server meta data:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Author"}),(0,n.jsx)(t.td,{children:"The\xa0name\xa0of\xa0the\xa0user\xa0who\xa0created\xa0the\xa0form"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"AuthorEmail"}),(0,n.jsx)(t.td,{children:"Email\xa0of\xa0this\xa0user\xa0(if\xa0any)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"AuthorID"}),(0,n.jsx)(t.td,{children:"The\xa0ID\xa0(UPN)\xa0of\xa0the\xa0user\xa0who\xa0created\xa0the\xa0form"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"CatalogPath"}),(0,n.jsx)(t.td,{children:"Filesystem path for the cached catalogs used by the item"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"AssetPath"}),(0,n.jsx)(t.td,{children:"Filesystem path for the cached assets"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ClientId"}),(0,n.jsx)(t.td,{children:"The\xa0ID\xa0of\xa0the sub system\xa0the form belongs to"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Created"}),(0,n.jsx)(t.td,{children:"Creation\xa0date\xa0of\xa0the\xa0form\xa0item\xa0(datetime in UTC format)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Created_Date"}),(0,n.jsx)(t.td,{children:"Creation\xa0date\xa0of\xa0the\xa0form\xa0item\xa0- dateOnly"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Created_HFLocal"}),(0,n.jsx)(t.td,{children:'"Local" creation\xa0time\xa0of\xa0the\xa0form\xa0item'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Created_Time"}),(0,n.jsx)(t.td,{children:"Creation\xa0time\xa0of\xa0the\xa0form\xa0item"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Culture"}),(0,n.jsx)(t.td,{children:"The\xa0HF.Culture\xa0field\xa0from\xa0the\xa0form\xa0definition"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"DisplayVersion"}),(0,n.jsx)(t.td,{children:"The version of the form at the time of PDF generation/of the workflow action"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Editor"}),(0,n.jsx)(t.td,{children:"The\xa0user\xa0who\xa0last\xa0changed\xa0the\xa0form - you probably want the owner instead"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"EditorEmail"}),(0,n.jsx)(t.td,{children:"Email\xa0of\xa0this\xa0user\xa0(if\xa0any)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"EditorID"}),(0,n.jsx)(t.td,{children:"The\xa0ID\xa0(UPN)\xa0of\xa0the\xa0user\xa0who\xa0last\xa0changed\xa0the\xa0form"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"FormPath"}),(0,n.jsx)(t.td,{children:"Filesystem path with the files attached to the item"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Group"}),(0,n.jsx)(t.td,{children:"The\xa0name\xa0of\xa0the\xa0currently assigned group."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ItemID"}),(0,n.jsx)(t.td,{children:"HF.ItemID\xa0field"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Modified"}),(0,n.jsx)(t.td,{children:"Date\xa0of\xa0the\xa0last\xa0modification\xa0of\xa0the\xa0form\xa0item\xa0(datetime in UTC format)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Modified_Date"}),(0,n.jsx)(t.td,{children:"Date\xa0of\xa0the\xa0last\xa0modification\xa0of\xa0the\xa0form\xa0item - dateOnly"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Modified_Time"}),(0,n.jsx)(t.td,{children:"Only the time of the\xa0last\xa0modification\xa0of\xa0the\xa0form\xa0item"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Modified_HFLocal"}),(0,n.jsx)(t.td,{children:'The "local" time of the\xa0last\xa0modification\xa0of\xa0the\xa0form\xa0item'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Now"}),(0,n.jsx)(t.td,{children:"Current Timestamp (UTC) in ISO8601 Format"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Owner"}),(0,n.jsx)(t.td,{children:"The\xa0user\xa0who\xa0owns\xa0the\xa0form\xa0-\xa0this\xa0need\xa0not\xa0be\xa0the\xa0editor!"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"OwnerEmail"}),(0,n.jsx)(t.td,{children:"Email\xa0of\xa0this\xa0user\xa0(if\xa0any)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"OwnerID"}),(0,n.jsx)(t.td,{children:"The\xa0ID\xa0(UPN)\xa0of\xa0the\xa0user\xa0who\xa0owns\xa0the\xa0form"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Pdf"}),(0,n.jsx)(t.td,{children:"content of form.pdf (only for exec and request workflows)"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ReachoutUrl"}),(0,n.jsx)(t.td,{children:"Url to Reachout form"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ReachoutConfirm"}),(0,n.jsx)(t.td,{children:"Url to Reachout confirm form"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"ServerUrl"}),(0,n.jsx)(t.td,{children:"Base url of HybridForms server"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Stage"}),(0,n.jsx)(t.td,{children:"The\xa0id\xa0of\xa0the\xa0current\xa0form\xa0stage"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"StageLabel"}),(0,n.jsx)(t.td,{children:"The\xa0label\xa0of\xa0the\xa0current\xa0form\xa0stage"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Status"}),(0,n.jsx)(t.td,{children:"Value\xa0of\xa0the\xa0HF.Status\xa0field"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"TemplateID"}),(0,n.jsx)(t.td,{children:"HF.FormID\xa0of the\xa0form\xa0definition"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"TemplateName"}),(0,n.jsx)(t.td,{children:"The\xa0name\xa0of\xa0the\xa0form\xa0definition"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"TemplatePath"}),(0,n.jsx)(t.td,{children:"Filesystem path for the cached template for by the item"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Title"}),(0,n.jsx)(t.td,{children:'The\xa0form\xa0"Title"'})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Version"}),(0,n.jsx)(t.td,{children:"The current version number of the Form Item"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"XML"}),(0,n.jsx)(t.td,{children:"XML representation of the Form Item (only for exec and request workflows)"})]})]})]}),"\n",(0,n.jsx)(a.A,{as:"h2",id:"form-definition",children:"Form Definition"}),"\n",(0,n.jsx)(a.A,{as:"h3",id:"conditions",children:"Conditions"}),"\n",(0,n.jsx)(t.p,{children:'The visibility of HybridForms elements (e.g. pages, tabs, blocks, fields, etc.) can be defined by a new condition type "stage". The "val" configures the relevant stages.'}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<form>\n    ...\n    <li\n        data-hf-title="Repair"\n        data-hf-condition=\'{\n            "cond": [{\n                "type": "stage",\n                "id": "stage_2",\n                "val": true\n            }],\n            "else": "readonly"\n        }\'\n    >\n        <a href="#repair-block1"></a>\n        <a href="#repair-block2"></a>\n    </li>\n\n    <li>...</li>\n</form>\n'})}),"\n",(0,n.jsx)(a.A,{as:"h3",id:"list-headertemplate",children:"list-/headerTemplate"}),"\n",(0,n.jsx)(t.p,{children:'The stage id and stage label can be used by the list-/headerTemplate as well.\nAccess the information by "data.stage.id" and "data.stage.label".'}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<form>\n    ...\n    <span data-hf-bind="textContent: data.stage.id"></span>\n    <span data-hf-bind="textContent: data.stage.label"></span>\n    ...\n</form>\n'})}),"\n",(0,n.jsx)(a.A,{as:"h2",id:"images",children:"Images in mailtemplate.txt"}),"\n",(0,n.jsx)(t.admonition,{title:"Note",type:"tip",children:(0,n.jsxs)(t.p,{children:["Attached images can be referenced inside your email body by the HTML tag ",(0,n.jsx)(t.code,{children:"img"})," and the path prefix `cid."]})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",metastring:'title="Example"',children:'<img src="cid:logo.png" />\n'})})]})}function C(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(L,{...e})}):L(e)}}}]);