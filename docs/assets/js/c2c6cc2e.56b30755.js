"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3822],{21428:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"js-guide/typescript/tsonchanged","title":"onChanged event handler","description":"Integration within the HTML","source":"@site/versioned_docs/version-9.5/js-guide/30-typescript/20-tsonchanged.md","sourceDirName":"js-guide/30-typescript","slug":"/js-guide/typescript/tsonchanged","permalink":"/docs/9.5/js-guide/typescript/tsonchanged","draft":false,"unlisted":false,"tags":[],"version":"9.5","sidebarPosition":20,"frontMatter":{"title":"onChanged event handler"},"sidebar":"tutorialSidebar","previous":{"title":"Integration of TS functionality","permalink":"/docs/9.5/js-guide/typescript/tsintegration"},"next":{"title":"Create Custom Controls","permalink":"/docs/9.5/js-guide/typescript/tscustomcontrols"}}');var i=t(74848),a=t(28453);const r={title:"onChanged event handler"},s="onChanged event handler",l={},c=[{value:"Integration within the HTML",id:"integration-within-the-html",level:2},{value:"Coding examples",id:"coding-examples",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"onchanged-event-handler",children:"onChanged event handler"})}),"\n",(0,i.jsx)(e.h2,{id:"integration-within-the-html",children:"Integration within the HTML"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["Each HybridForms form control (TextField, ComboBox, DatePicker \u2026) provides an onChanged event handler within the ",(0,i.jsx)(e.code,{children:"data-win-options"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"This can be used to react on user inputs or general changes within the value field of the control."}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["The ",(0,i.jsx)(e.code,{children:"onChanged"}),"-function gets as first argument the value of the control. ",(0,i.jsx)(e.code,{children:"this"})," is the current instance of the form control class."]}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:'As a security feature, WinJS blocks referenced event handlers and functions in declarative html markup, to avoid malicious JavaScript from being run. Therefore, this function has to be marked as "safe" in the corresponding TypeScript file:'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",metastring:"showLineNumbers",children:"WinJS.Utilities.markSupportedForProcessing(HFFormdefinition.SomeNamespace.doSomethingOnChange);\n"})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"HTML and JavaScript example:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",metastring:"showLineNumbers",children:"<div id=\"tab1_timepicker1\" \n    data-win-control=\"HFWinJSCtrl.TimePicker\" \n    data-win-options=\"{\n        label: 'Start time',\n        defaultValue: 'now',\n        emptyContent: 'hh:mm',\n        tooltip: 'Start time',\n        onChanged: HFFormdefinition.SomeNamespace.doSomethingOnChange,\n        calcDurationOptions:'tab1_timepicker1,tab1_timepicker2,tab1_time_duration'\n    }\"></div>\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",metastring:"showLineNumbers",children:"namespace HFFormdefinition.SomeNamespace {\n    export function doSomethingOnChange(value) {\n        console.log('value: ', value);\n        console.log('ctrl: ', this);\n    }\n}\n\nfor (let index in HFFormdefinition.SomeNamespace) {\n    const exportedFunction = HFFormdefinition.SomeNamespace[index];\n    if (typeof exportedFunction !== 'function') {\n        continue;\n    }\n    WinJS.Utilities.markSupportedForProcessing(exportedFunction);\n}\n"})}),"\n",(0,i.jsx)(e.h2,{id:"coding-examples",children:"Coding examples"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsx)(e.li,{children:"Example of combining two ComboBoxes"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-html",metastring:"showLineNumbers",children:"\x3c!-- ComboBox: Begin - Field Dependence: When choosing a Value from the Main ComboBox, \nthe content in the Sub ComboBox will change to the relevant content for the selection. --\x3e\n<div id=\"tab1_combobox_haupt\"\n    data-win-control=\"HFWinJSCtrl.ComboBox\"\n    data-win-options=\"{\n        label: 'Main ComboBox',\n        dataSource: [\n        {\n            kat:1,\n            name:'Main selection 1'\n        },\n        {\n            kat:2,\n            name:'Main selection 2'\n        },\n        {\n            kat:3,\n            name:'Main selection 3'\n        }],\n        dataTextField: 'name',\n        dataValueField: 'kat',\n        onChanged: HFFormdefinition.SomeNamespace.filterData,\n        subCtrlId: 'tab1_combobox_sub'\n    }\"></div>\n\x3c!-- Replace Namespace from added Script --\x3e\n\n<div id=\"tab1_combobox_sub\"\n    data-win-control=\"HFWinJSCtrl.ComboBox\"\n    data-win-options=\"{\n        label: 'Sub ComboBox',\n        dataSource: [\n        {\n            value:101,\n            name:'Sub selection 1.1',\n            kat:1\n        },\n        {\n            value:102,\n            name:'Sub selection 1.2',\n            kat:1\n        },\n        {\n            value:201,\n            name:'Sub selection 2.1',\n            kat:2\n        },\n        {\n            value:202,\n            name:'Sub selection 2.2',\n            kat:2\n        },\n        {\n            value:301,\n            name:'Sub selection 3.1',\n            kat:3\n        },\n        {\n            value:302,\n            name:'Sub selection 3.2',\n            kat:3\n        }],\n        dataTextField: 'name',\n        dataValueField: 'value'\n    }\"></div>\n\x3c!-- ComboBox: End - Field Dependence --\x3e\n"})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-typescript",metastring:"showLineNumbers",children:"namespace HFFormdefinition.SomeNamespace {\n    /*\n    * filterData \n    * Type: onChanged Method\n    * Description:\n    *      When choosing a Value from the Main ComboBox, the content in the Sub ComboBox \n    *      will change to the relevant content for the selection.\n    *      Works in both non- and repeating units.\n    * @data-win-options:\n    *      subCtrlId[string](required): formcontrol-id of effected ComboBox\n    */\n    export function filterData() {\n        var datengruppe = this.val(),\n            comboBoxTargetCtrl,\n            datenquelle,\n            currentRU = '';\n        \n        if (HybridForms.API.RepeatingUnits.isRepeatingUnit(this.element)) {\n            currentRU = HybridForms.API.RepeatingUnits.getPostfixFieldId(this.element);\n        }\n\n        comboBoxTargetCtrl = HybridForms.API.FormControls.getCtrl(this.subCtrlId + currentRU);\n        \n        if (typeof comboBoxTargetCtrl === 'undefined') {\n            return;\n        }\n\n        datenquelle = comboBoxTargetCtrl.dataSource;\n        if (!datengruppe || !datengruppe.value) {\n            comboBoxTargetCtrl.setDataSource(datenquelle);\n            return;\n        }\n\n        var filterByValue = datengruppe.value;\n        var filtered = datenquelle.filter(function(item) {\n            return filterByValue == item.kat;\n        });\n        comboBoxTargetCtrl.setDataSource(filtered);\n    },        \n}\n\nfor (let index in HFFormdefinition.SomeNamespace) {\n    const exportedFunction = HFFormdefinition.SomeNamespace[index];\n    if (typeof exportedFunction !== 'function') {\n        continue;\n    }\n    WinJS.Utilities.markSupportedForProcessing(exportedFunction);\n}\n"})})]})}function m(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},28453:(n,e,t)=>{t.d(e,{R:()=>r,x:()=>s});var o=t(96540);const i={},a=o.createContext(i);function r(n){const e=o.useContext(a);return o.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:r(n.components),o.createElement(a.Provider,{value:e},n.children)}}}]);