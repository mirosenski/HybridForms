"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[90849],{86164:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"10.1","label":"10.1","banner":null,"badge":true,"noIndex":false,"className":"docs-version-10.1","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"FormDev","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Quickstart","href":"/docs/formdev/quickstart","docId":"formdev/quickstart","unlisted":false},{"type":"link","label":"Dev Tools","href":"/docs/formdev/devtools","docId":"formdev/devtools","unlisted":false},{"type":"link","label":"Local Backend","href":"/docs/formdev/backend","docId":"formdev/backend","unlisted":false}],"href":"/docs/category/formdev"},{"type":"category","label":"Form Templates","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Folder Structure","href":"/docs/form-templates/folder-structure","docId":"form-templates/folder-structure","unlisted":false},{"type":"category","label":"HTML Template File","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Basics","href":"/docs/form-templates/html-template-file/basics","docId":"form-templates/html-template-file/basics","unlisted":false},{"type":"link","label":"Referencing CSS and JS Files","href":"/docs/form-templates/html-template-file/referencing-css-js-files","docId":"form-templates/html-template-file/referencing-css-js-files","unlisted":false},{"type":"link","label":"Referencing Files","href":"/docs/form-templates/html-template-file/referencing-files","docId":"form-templates/html-template-file/referencing-files","unlisted":false},{"type":"link","label":"Template Variables","href":"/docs/form-templates/html-template-file/variables","docId":"form-templates/html-template-file/variables","unlisted":false},{"type":"link","label":"Structure, Layout and Navigation","href":"/docs/form-templates/html-template-file/structure","docId":"form-templates/html-template-file/structure","unlisted":false},{"type":"link","label":"Title Templates","href":"/docs/form-templates/html-template-file/titletemplates","docId":"form-templates/html-template-file/titletemplates","unlisted":false},{"type":"link","label":"Form Blocks","href":"/docs/form-templates/html-template-file/formblocks","docId":"form-templates/html-template-file/formblocks","unlisted":false}],"href":"/docs/category/html-template-file"},{"type":"category","label":"Features","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Conditions","href":"/docs/form-templates/features/conditions","docId":"form-templates/features/conditions","unlisted":false},{"type":"link","label":"Form Field Validation","href":"/docs/form-templates/features/formfieldsvalidations","docId":"form-templates/features/formfieldsvalidations","unlisted":false},{"type":"link","label":"Repeating Units","href":"/docs/form-templates/features/repeatingunits","docId":"form-templates/features/repeatingunits","unlisted":false},{"type":"link","label":"Dynamic Repeating Units","href":"/docs/form-templates/features/dynamicrepeatingunits","docId":"form-templates/features/dynamicrepeatingunits","unlisted":false},{"type":"link","label":"Stages and Workflows","href":"/docs/form-templates/features/stages","docId":"form-templates/features/stages","unlisted":false},{"type":"link","label":"Workflow Examples","href":"/docs/form-templates/features/workflow-examples","docId":"form-templates/features/workflow-examples","unlisted":false},{"type":"link","label":"Translations","href":"/docs/form-templates/features/translation","docId":"form-templates/features/translation","unlisted":false},{"type":"link","label":"Counter","href":"/docs/form-templates/features/counter","docId":"form-templates/features/counter","unlisted":false},{"type":"link","label":"App Kiosk Mode","href":"/docs/form-templates/features/appkioskmode","docId":"form-templates/features/appkioskmode","unlisted":false},{"type":"link","label":"Integrate Maps","href":"/docs/form-templates/features/integrate-maps","docId":"form-templates/features/integrate-maps","unlisted":false}],"href":"/docs/category/features"},{"type":"link","label":"PDF","href":"/docs/form-templates/pdf","docId":"form-templates/pdf","unlisted":false},{"type":"link","label":"Includes","href":"/docs/form-templates/includes","docId":"form-templates/includes","unlisted":false},{"type":"link","label":"Template Settings","href":"/docs/form-templates/template-settings","docId":"form-templates/template-settings","unlisted":false}],"href":"/docs/category/form-templates"},{"type":"category","label":"Form Controls","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ApproveButton","href":"/docs/form-controls/approveButton","docId":"form-controls/approveButton","unlisted":false},{"type":"link","label":"BooleanControl","href":"/docs/form-controls/booleancontrol","docId":"form-controls/booleancontrol","unlisted":false},{"type":"link","label":"ButtonControl","href":"/docs/form-controls/buttoncontrol","docId":"form-controls/buttoncontrol","unlisted":false},{"type":"link","label":"CheckBox","href":"/docs/form-controls/checkbox","docId":"form-controls/checkbox","unlisted":false},{"type":"link","label":"ComboBox","href":"/docs/form-controls/combobox","docId":"form-controls/combobox","unlisted":false},{"type":"link","label":"Condition","href":"/docs/form-controls/condition","docId":"form-controls/condition","unlisted":false},{"type":"link","label":"DataControl","href":"/docs/form-controls/datacontrol","docId":"form-controls/datacontrol","unlisted":false},{"type":"link","label":"DatePicker","href":"/docs/form-controls/datepicker","docId":"form-controls/datepicker","unlisted":false},{"type":"link","label":"DateTimePicker","href":"/docs/form-controls/datetimepicker","docId":"form-controls/datetimepicker","unlisted":false},{"type":"link","label":"DrawingControl","href":"/docs/form-controls/drawingcontrol","docId":"form-controls/drawingcontrol","unlisted":false},{"type":"link","label":"DropDownList","href":"/docs/form-controls/dropdownlist","docId":"form-controls/dropdownlist","unlisted":false},{"type":"link","label":"FileUploader","href":"/docs/form-controls/fileuploader","docId":"form-controls/fileuploader","unlisted":false},{"type":"link","label":"Highlighter","href":"/docs/form-controls/highlighter","docId":"form-controls/highlighter","unlisted":false},{"type":"link","label":"HtmlContainer","href":"/docs/form-controls/htmlcontainer","docId":"form-controls/htmlcontainer","unlisted":false},{"type":"link","label":"Label","href":"/docs/form-controls/label","docId":"form-controls/label","unlisted":false},{"type":"link","label":"MailButton","href":"/docs/form-controls/mailbutton","docId":"form-controls/mailbutton","unlisted":false},{"type":"link","label":"MapButton","href":"/docs/form-controls/mapbutton","docId":"form-controls/mapbutton","unlisted":false},{"type":"link","label":"MultiSelect","href":"/docs/form-controls/multiselect","docId":"form-controls/multiselect","unlisted":false},{"type":"link","label":"NumericField","href":"/docs/form-controls/numericfields","docId":"form-controls/numericfields","unlisted":false},{"type":"link","label":"PhoneButton","href":"/docs/form-controls/phonebutton","docId":"form-controls/phonebutton","unlisted":false},{"type":"link","label":"PicturePicker","href":"/docs/form-controls/picturepicker","docId":"form-controls/picturepicker","unlisted":false},{"type":"link","label":"RadioBox","href":"/docs/form-controls/radiobox","docId":"form-controls/radiobox","unlisted":false},{"type":"link","label":"ReverseGeolocatorButton","href":"/docs/form-controls/reversegeolocatorbutton","docId":"form-controls/reversegeolocatorbutton","unlisted":false},{"type":"link","label":"ScanButton (Barcode/NFC)","href":"/docs/form-controls/scanbuttonbarcode","docId":"form-controls/scanbuttonbarcode","unlisted":false},{"type":"link","label":"ScanButton (IDScanner)","href":"/docs/form-controls/scanbuttonidscanner","docId":"form-controls/scanbuttonidscanner","unlisted":false},{"type":"link","label":"SelectBox","href":"/docs/form-controls/selectbox","docId":"form-controls/selectbox","unlisted":false},{"type":"link","label":"Signature","href":"/docs/form-controls/signature","docId":"form-controls/signature","unlisted":false},{"type":"link","label":"SignatureLight","href":"/docs/form-controls/signaturelight","docId":"form-controls/signaturelight","unlisted":false},{"type":"link","label":"Switch","href":"/docs/form-controls/switch","docId":"form-controls/switch","unlisted":false},{"type":"link","label":"TextField / Textarea","href":"/docs/form-controls/textfield","docId":"form-controls/textfield","unlisted":false},{"type":"link","label":"TimePicker","href":"/docs/form-controls/timepicker","docId":"form-controls/timepicker","unlisted":false},{"type":"link","label":"TreeView","href":"/docs/form-controls/treeview","docId":"form-controls/treeview","unlisted":false},{"type":"link","label":"Webview","href":"/docs/form-controls/webview","docId":"form-controls/webview","unlisted":false}],"href":"/docs/category/form-controls"},{"type":"category","label":"Custom Code Guide","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Integration","href":"/docs/custom-code-guide/integration","docId":"custom-code-guide/integration","unlisted":false},{"type":"link","label":"Functions","href":"/docs/custom-code-guide/functions","docId":"custom-code-guide/functions","unlisted":false},{"type":"link","label":"Controls","href":"/docs/custom-code-guide/controls","docId":"custom-code-guide/controls","unlisted":false},{"type":"link","label":"Examples","href":"/docs/custom-code-guide/examples","docId":"custom-code-guide/examples","unlisted":false},{"type":"category","label":"JS (deprecated)","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Integration","href":"/docs/custom-code-guide/js/integration","docId":"custom-code-guide/js/integration","unlisted":false},{"type":"link","label":"Functions","href":"/docs/custom-code-guide/js/functions","docId":"custom-code-guide/js/functions","unlisted":false},{"type":"link","label":"Controls","href":"/docs/custom-code-guide/js/controls","docId":"custom-code-guide/js/controls","unlisted":false}],"href":"/docs/category/js-deprecated"}],"href":"/docs/category/custom-code-guide"},{"type":"category","label":"Custom Styling Guide","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Integration","href":"/docs/custom-styling-guide/integration","docId":"custom-styling-guide/integration","unlisted":false},{"type":"link","label":"Theming","href":"/docs/custom-styling-guide/theming","docId":"custom-styling-guide/theming","unlisted":false},{"type":"category","label":"HF Utilitiy Classes","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Borders","href":"/docs/custom-styling-guide/hf-utility-classes/borders","docId":"custom-styling-guide/hf-utility-classes/borders","unlisted":false},{"type":"link","label":"Button","href":"/docs/custom-styling-guide/hf-utility-classes/button","docId":"custom-styling-guide/hf-utility-classes/button","unlisted":false},{"type":"link","label":"Color","href":"/docs/custom-styling-guide/hf-utility-classes/color","docId":"custom-styling-guide/hf-utility-classes/color","unlisted":false},{"type":"link","label":"Layout","href":"/docs/custom-styling-guide/hf-utility-classes/layout","docId":"custom-styling-guide/hf-utility-classes/layout","unlisted":false},{"type":"link","label":"Helpers","href":"/docs/custom-styling-guide/hf-utility-classes/helpers","docId":"custom-styling-guide/hf-utility-classes/helpers","unlisted":false}],"href":"/docs/category/hf-utilitiy-classes"}],"href":"/docs/category/custom-styling-guide"}]},"docs":{"custom-code-guide/controls":{"id":"custom-code-guide/controls","title":"Controls","description":"Custom Controls in HybridForms are specialized TypeScript classes designed to enhance Form Development by providing tailored functionality and visual components. Derived from HybridForms.API.UIControls.BaseControl, these controls have the capability to render HTML elements, manage events, and seamlessly integrate with the HybridForms Framework.","sidebar":"tutorialSidebar"},"custom-code-guide/examples":{"id":"custom-code-guide/examples","title":"Examples","description":"In HybridForms development, TypeScript functions are crucial for creating dynamic Forms.","sidebar":"tutorialSidebar"},"custom-code-guide/functions":{"id":"custom-code-guide/functions","title":"Functions","description":"Functions in TypeScript play a crucial role in enhancing the functionality of HybridForms by encapsulating reusable code that can be invoked as needed.","sidebar":"tutorialSidebar"},"custom-code-guide/integration":{"id":"custom-code-guide/integration","title":"Integration","description":"We strongly advice for TypeScript over JavaScript when implementing Custom Code.","sidebar":"tutorialSidebar"},"custom-code-guide/js/controls":{"id":"custom-code-guide/js/controls","title":"Controls","description":"Custom Controls in HybridForms are specialized WinJS classes designed to enhance Form development by providing tailored functionality and visual components. Derived from HybridForms.API.UIControls.BaseControl, these controls have the capability to render HTML elements, manage events, and seamlessly integrate with the HybridForms framework.","sidebar":"tutorialSidebar"},"custom-code-guide/js/functions":{"id":"custom-code-guide/js/functions","title":"Functions","description":"Functions in TypeScript play a crucial role in enhancing the functionality of HybridForms by encapsulating reusable code that can be invoked as needed.","sidebar":"tutorialSidebar"},"custom-code-guide/js/integration":{"id":"custom-code-guide/js/integration","title":"Integration","description":"There are two possible ways to implement JS functionality:","sidebar":"tutorialSidebar"},"custom-styling-guide/hf-utility-classes/borders":{"id":"custom-styling-guide/hf-utility-classes/borders","title":"Borders","description":"Use border utilities to easily style the border and border-radius of an element. This is especially useful for images, buttons, and other elements.","sidebar":"tutorialSidebar"},"custom-styling-guide/hf-utility-classes/button":{"id":"custom-styling-guide/hf-utility-classes/button","title":"Button","description":"Use button utilities to quickly style buttons in HybridForms Forms.","sidebar":"tutorialSidebar"},"custom-styling-guide/hf-utility-classes/color":{"id":"custom-styling-guide/hf-utility-classes/color","title":"Color","description":"Use color utilities to quickly style the text and background color of an element. Great for container, buttons, or any other element.","sidebar":"tutorialSidebar"},"custom-styling-guide/hf-utility-classes/helpers":{"id":"custom-styling-guide/hf-utility-classes/helpers","title":"Helpers","description":"There are several helper utilities for quick styling.","sidebar":"tutorialSidebar"},"custom-styling-guide/hf-utility-classes/layout":{"id":"custom-styling-guide/hf-utility-classes/layout","title":"Layout","description":"Use layout utilities to quickly add layout specific stylings.","sidebar":"tutorialSidebar"},"custom-styling-guide/integration":{"id":"custom-styling-guide/integration","title":"Integration","description":"SCSS files cannot be directly included in the Form, they must first be compiled into standard CSS files.","sidebar":"tutorialSidebar"},"custom-styling-guide/theming":{"id":"custom-styling-guide/theming","title":"Theming","description":"Unlock creativity with our powerful theming system! Effortlessly customize the look and feel of HybridForms using intuitive themes, CSS variables for dynamic styling, and extensive style customization options.","sidebar":"tutorialSidebar"},"form-controls/approveButton":{"id":"form-controls/approveButton","title":"ApproveButton","description":"The ApproveButton is a button that triggers the approval process for a form. After the approval process is completed, the user is redirected to a predefined page.","sidebar":"tutorialSidebar"},"form-controls/booleancontrol":{"id":"form-controls/booleancontrol","title":"BooleanControl","description":"{","sidebar":"tutorialSidebar"},"form-controls/buttoncontrol":{"id":"form-controls/buttoncontrol","title":"ButtonControl","description":"The ButtonControl invokes a predefined custom callback.","sidebar":"tutorialSidebar"},"form-controls/checkbox":{"id":"form-controls/checkbox","title":"CheckBox","description":"An HTML CheckBox to be used in Forms.","sidebar":"tutorialSidebar"},"form-controls/combobox":{"id":"form-controls/combobox","title":"ComboBox","description":"The values of the control \\"ComboBox\\" can be provided as static datasource (data formatted like a Json Array inside your template) or in case of a external datasource e.g. by referencing a SharePoint list by linking to the URL or by providing a oData source.","sidebar":"tutorialSidebar"},"form-controls/condition":{"id":"form-controls/condition","title":"Condition","description":"Conditions can be set to HTML areas using the ` tag and the control Condition` within a block.","sidebar":"tutorialSidebar"},"form-controls/datacontrol":{"id":"form-controls/datacontrol","title":"DataControl","description":"The DataControl is a hidden control that can be used to store data in the Form.","sidebar":"tutorialSidebar"},"form-controls/datepicker":{"id":"form-controls/datepicker","title":"DatePicker","description":"A DatePicker is a control element that allows the user to select a date from a calendar.","sidebar":"tutorialSidebar"},"form-controls/datetimepicker":{"id":"form-controls/datetimepicker","title":"DateTimePicker","description":"A DateTimePicker is a control element that allows the user to select date and time from a calendar.","sidebar":"tutorialSidebar"},"form-controls/drawingcontrol":{"id":"form-controls/drawingcontrol","title":"DrawingControl","description":"The DrawingControl is a control element that allows the user to draw on a given image.","sidebar":"tutorialSidebar"},"form-controls/dropdownlist":{"id":"form-controls/dropdownlist","title":"DropDownList","description":"The new control is an alternative to the Control \\"ComboBox\\". The values of the control \\"DropDownList\\" can be provided as static datasource (data formatted as JSON Array inside your Template) or by an external datasource e.g. by referencing a HFSqlServer list by linking to the URL or by providing an oData source as known of the ComboBox control.","sidebar":"tutorialSidebar"},"form-controls/fileuploader":{"id":"form-controls/fileuploader","title":"FileUploader","description":"The FileUploader ctrl enables the user to upload files inside the Form.","sidebar":"tutorialSidebar"},"form-controls/highlighter":{"id":"form-controls/highlighter","title":"Highlighter","description":"A Highlighter is used to highlight text. It is possible to place an initial value as children to the control but it is very limited which tags can be placed.","sidebar":"tutorialSidebar"},"form-controls/htmlcontainer":{"id":"form-controls/htmlcontainer","title":"HtmlContainer","description":"A HtmlContainer is used to dynamically add HTML elements to a Form. It is possible to place an initial value as children to the control but it is very limited which tags can be placed.","sidebar":"tutorialSidebar"},"form-controls/label":{"id":"form-controls/label","title":"Label","description":"The Label control is used to create a HybridForms label element.","sidebar":"tutorialSidebar"},"form-controls/mailbutton":{"id":"form-controls/mailbutton","title":"MailButton","description":"The MailButton invokes the local installed E-Mail program and passes filled in email address information and the predefined subject string.","sidebar":"tutorialSidebar"},"form-controls/mapbutton":{"id":"form-controls/mapbutton","title":"MapButton","description":"The MapButton invokes routing apps. It passes filled in address information and the current location information.","sidebar":"tutorialSidebar"},"form-controls/multiselect":{"id":"form-controls/multiselect","title":"MultiSelect","description":"The values of the control \\"MultiSelect\\" can be provided as static datasource (data formatted like a Json Array inside your template) or in case of a external datasource e.g. by referencing a HybridForms catalog by linking to the URL or by providing an oData source.","sidebar":"tutorialSidebar"},"form-controls/numericfields":{"id":"form-controls/numericfields","title":"NumericField","description":"NumericFields restrict the input value to numbers in the case of a simple input field or you refine it by further properties to offer a kind of slider.","sidebar":"tutorialSidebar"},"form-controls/phonebutton":{"id":"form-controls/phonebutton","title":"PhoneButton","description":"The PhoneButton offers the possibility to dial a phone number provided by an input field inside your Form by a dial-up application i.e. \\"Skype\\" or the mobile device.","sidebar":"tutorialSidebar"},"form-controls/picturepicker":{"id":"form-controls/picturepicker","title":"PicturePicker","description":"The PicturePicker provides image thumbnails directly within the Form data. Insert an image, sketch or map by clicking on the plus icon.","sidebar":"tutorialSidebar"},"form-controls/radiobox":{"id":"form-controls/radiobox","title":"RadioBox","description":"An HTML RadioBox to be used in Forms.","sidebar":"tutorialSidebar"},"form-controls/reversegeolocatorbutton":{"id":"form-controls/reversegeolocatorbutton","title":"ReverseGeolocatorButton","description":"This Form control is a button which request the current location of the user and fills in the Form fields defined in its options.","sidebar":"tutorialSidebar"},"form-controls/scanbuttonbarcode":{"id":"form-controls/scanbuttonbarcode","title":"ScanButton (Barcode/NFC)","description":"This Form control (button) starts a scan of barcodes and processes the decoded information inside the Form.","sidebar":"tutorialSidebar"},"form-controls/scanbuttonidscanner":{"id":"form-controls/scanbuttonidscanner","title":"ScanButton (IDScanner)","description":"This Form control is a button which starts an OCR scan of passports, ID cards and driving licenses and fills in the scanned information.","sidebar":"tutorialSidebar"},"form-controls/selectbox":{"id":"form-controls/selectbox","title":"SelectBox","description":"This type of Form control is similar to the HTML Select Box and the ComboBox control.","sidebar":"tutorialSidebar"},"form-controls/signature":{"id":"form-controls/signature","title":"Signature","description":"The Signature control captures signatures and stores biometric data of the signature.","sidebar":"tutorialSidebar"},"form-controls/signaturelight":{"id":"form-controls/signaturelight","title":"SignatureLight","description":"Like our Signature control, the SignatureLight control captures signatures. However, the SignatureLight control does not capture biometric data but only stores the user\u2019s signature as an image.","sidebar":"tutorialSidebar"},"form-controls/switch":{"id":"form-controls/switch","title":"Switch","description":"The Switch control is a simple control element that can be used to toggle between two states.","sidebar":"tutorialSidebar"},"form-controls/textfield":{"id":"form-controls/textfield","title":"TextField / Textarea","description":"Please ensure there is no non breaking space or line break between the \'textarea\'-opening and closing tag. Otherwise the cursor will not be positioned at the correct place on focus.","sidebar":"tutorialSidebar"},"form-controls/timepicker":{"id":"form-controls/timepicker","title":"TimePicker","description":"The TimePicker is a control element that allows the user to select a time.","sidebar":"tutorialSidebar"},"form-controls/treeview":{"id":"form-controls/treeview","title":"TreeView","description":"The TreeView control enables you to display complex dataSources/catalogs in a hierarchical view and offers the possibility to select and store multiple values as well as the hierarchical path of the values.","sidebar":"tutorialSidebar"},"form-controls/webview":{"id":"form-controls/webview","title":"Webview","description":"The Webview is used to safely display a website or a video file in the Form.","sidebar":"tutorialSidebar"},"form-templates/features/appkioskmode":{"id":"form-templates/features/appkioskmode","title":"App Kiosk Mode","description":"The App Kiosk Mode is designed for providing the possibility to let unauthorized persons fill out Forms in a secure way. In \\"single\\"-App Kiosk Mode an authorized person has to open a new Form, switch to App Kiosk Mode and then pass along the device to another person. To unlock the kiosk mode a PIN is required. In \\"sequential\\"-App Kiosk Mode once it is activated, one Form after another is opened without leaving the App Kiosk Mode.","sidebar":"tutorialSidebar"},"form-templates/features/conditions":{"id":"form-templates/features/conditions","title":"Conditions","description":"Conditions enable you to offer different options of form parts based on the input, alter the visibility of form parts or create dependencies.","sidebar":"tutorialSidebar"},"form-templates/features/counter":{"id":"form-templates/features/counter","title":"Counter","description":"Counter, which you can find under System Settings, offers a quite flexible opportunity to define unique reference numbers for Forms. Users with a valid user license can request a unique counter value when using the HybridForms Client App online.","sidebar":"tutorialSidebar"},"form-templates/features/dynamicrepeatingunits":{"id":"form-templates/features/dynamicrepeatingunits","title":"Dynamic Repeating Units","description":"Dynamic Repeating units are like standard repeating units a repeatable set of controls on the level of tabs. But in case of dynamic repeating units the single repeating units gets generated based on a provided data source. In this way you can add repeating sets of data based on the rows of a datasource. To define a dynamic repeating unit use the **dynamicRepeatingUnit** property on the **data-hf-repeating** attribute.","sidebar":"tutorialSidebar"},"form-templates/features/formfieldsvalidations":{"id":"form-templates/features/formfieldsvalidations","title":"Form Field Validation","description":"Form field validation handles the input. You can restrict the type of characters or the maximal length or match the input values to a certain pattern to ensure only valid and correct values are stored.","sidebar":"tutorialSidebar"},"form-templates/features/integrate-maps":{"id":"form-templates/features/integrate-maps","title":"Integrate Maps","description":"Integrate custom maps into your Form Templates. You can use different types of libraries for creating interactive maps in your forms. Settings and properties can be set in the admin ui and in Custom Code you can further customize your maps.","sidebar":"tutorialSidebar"},"form-templates/features/repeatingunits":{"id":"form-templates/features/repeatingunits","title":"Repeating Units","description":"Repeating units are a repeatable set of controls on the level of tabs. If you define a tab as repeatable the content defined in this tab can be repeated (progammatically or by the user) depending on the repeating options you set.","sidebar":"tutorialSidebar"},"form-templates/features/stages":{"id":"form-templates/features/stages","title":"Stages and Workflows","description":"Stages enable you to control the editable parts and the form processing within the scope of predefined workflows.","sidebar":"tutorialSidebar"},"form-templates/features/translation":{"id":"form-templates/features/translation","title":"Translations","description":"In the HybridForms App, there are 3 areas for language control:","sidebar":"tutorialSidebar"},"form-templates/features/workflow-examples":{"id":"form-templates/features/workflow-examples","title":"Workflow Examples","description":" ","sidebar":"tutorialSidebar"},"form-templates/folder-structure":{"id":"form-templates/folder-structure","title":"Folder Structure","description":"Form Templates and Areas","sidebar":"tutorialSidebar"},"form-templates/html-template-file/basics":{"id":"form-templates/html-template-file/basics","title":"Basics","description":"The General Structure","sidebar":"tutorialSidebar"},"form-templates/html-template-file/formblocks":{"id":"form-templates/html-template-file/formblocks","title":"Form Blocks","description":"Form Blocks are the actual containers for the Form Controls and other HTML contents.","sidebar":"tutorialSidebar"},"form-templates/html-template-file/referencing-css-js-files":{"id":"form-templates/html-template-file/referencing-css-js-files","title":"Referencing CSS and JS Files","description":"In HybridForms, you can enhance the customization and styling of your Form by using custom CSS, and you can add additional functionality using custom JavaScript code.","sidebar":"tutorialSidebar"},"form-templates/html-template-file/referencing-files":{"id":"form-templates/html-template-file/referencing-files","title":"Referencing Files","description":"Referencing Form Template Files","sidebar":"tutorialSidebar"},"form-templates/html-template-file/structure":{"id":"form-templates/html-template-file/structure","title":"Structure, Layout and Navigation","description":"The structure and general layout of your form are determined by three key structural elements:","sidebar":"tutorialSidebar"},"form-templates/html-template-file/titletemplates":{"id":"form-templates/html-template-file/titletemplates","title":"Title Templates","description":"Title templates are implemented as `` elements and defined by the IDs: headerTitleTemplate, titleTemplate and listTemplate.","sidebar":"tutorialSidebar"},"form-templates/html-template-file/variables":{"id":"form-templates/html-template-file/variables","title":"Template Variables","description":"Template variables are used to define the Form Template settings and configurations. They are declared inside the ``-tag of the Form Template file.","sidebar":"tutorialSidebar"},"form-templates/includes":{"id":"form-templates/includes","title":"Includes","description":"HF-Includes are blocks defined in a template HTML file referenced by the HTML Form Definition file.","sidebar":"tutorialSidebar"},"form-templates/pdf":{"id":"form-templates/pdf","title":"PDF","description":"The PDF export of a Form is created automatically by the HybridForms service and stored as attachment file of a Form data list item.","sidebar":"tutorialSidebar"},"form-templates/template-settings":{"id":"form-templates/template-settings","title":"Template Settings","description":"Every FormDefinition folder can have an index.json file. It is used to mimic server settings during development.","sidebar":"tutorialSidebar"},"formdev/backend":{"id":"formdev/backend","title":"Local Backend","description":"Mimic a HybridForms server locally. An Express NodeJS server is used to enable the web client of HybridForms to work properly.","sidebar":"tutorialSidebar"},"formdev/devtools":{"id":"formdev/devtools","title":"Dev Tools","description":"These CLI tools can or have to be used to make form development faster and easier.","sidebar":"tutorialSidebar"},"formdev/quickstart":{"id":"formdev/quickstart","title":"Quickstart","description":"Form development environment for developing Form Templates locally","sidebar":"tutorialSidebar"}}}}')}}]);