"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[94805],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}},42288:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>d,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"js-guide/api","title":"HybridForms API","description":"You find our documentation of the HybridForms API in the formDev docs folder. Just open the index.html in the API folder.","source":"@site/versioned_docs/version-9.1/js-guide/40-api.md","sourceDirName":"js-guide","slug":"/js-guide/api","permalink":"/docs/9.1/js-guide/api","draft":false,"unlisted":false,"tags":[],"version":"9.1","sidebarPosition":40,"frontMatter":{"title":"HybridForms API"},"sidebar":"tutorialSidebar","previous":{"title":"Create Custom Controls","permalink":"/docs/9.1/js-guide/typescript/tscustomcontrols"},"next":{"title":"Style-Guide","permalink":"/docs/9.1/category/style-guide"}}');var i=t(74848),s=t(28453);const o={title:"HybridForms API"},d="HybridForms API",a={},l=[{value:"Get controls",id:"get-controls",level:2},{value:"Get and set values",id:"get-and-set-values",level:2},{value:"Access to the HybridForms data structure aka &quot;FormBlob&quot;",id:"access-to-the-hybridforms-data-structure-aka-formblob",level:2},{value:"How to cope with RepeatingUnits",id:"how-to-cope-with-repeatingunits",level:2},{value:"Page events",id:"page-events",level:2},{value:"Namespace",id:"namespace",level:3},{value:"Example",id:"example",level:3},{value:"How to cope with Catalogs",id:"how-to-cope-with-catalogs",level:2},{value:"Example",id:"example-1",level:3}];function c(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"hybridforms-api",children:"HybridForms API"})}),"\n",(0,i.jsx)(n.p,{children:"You find our documentation of the HybridForms API in the formDev docs folder. Just open the index.html in the API folder."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Some important features and concepts:"})}),"\n",(0,i.jsx)(n.h2,{id:"get-controls",children:"Get controls"}),"\n",(0,i.jsx)(n.p,{children:"Get form or UI controls by the element id to get access to all public members of the specific instance."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"HybridForms.API.FormControls.getCtrl('formcontrol_id'): FormControl;\nHybridForms.API.UIControls.getCtrl('uicontrol_id'): UIControl;\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,i.jsxs)(n.p,{children:["Within an onChanged function you can also connect to the control via ",(0,i.jsx)(n.code,{children:"this"}),"."]})}),"\n",(0,i.jsx)(n.h2,{id:"get-and-set-values",children:"Get and set values"}),"\n",(0,i.jsx)(n.p,{children:"Get the value of the form control"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"let ctrl = HybridForms.API.FormControls.getCtrl('formcontrol_id');\nctrl.val();\n"})}),"\n",(0,i.jsx)(n.p,{children:"Set the value of the form control"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"let ctrl = HybridForms.API.FormControls.getCtrl('formcontrol_id');\nctrl.val('set some value');\n"})}),"\n",(0,i.jsx)(n.h2,{id:"access-to-the-hybridforms-data-structure-aka-formblob",children:'Access to the HybridForms data structure aka "FormBlob"'}),"\n",(0,i.jsx)(n.p,{children:"All controls store their data within the following data structure:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"interface IFormField {\n    id: string;\n    value: any; //depends on the formcontrol\n}\n\n// not accessable yet\nprivate FormBlob: Array<IFormField>;\n"})}),"\n",(0,i.jsx)(n.p,{children:"Most of the controls use several fields to store their data. The following list shows which fields are set by which control:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Control"}),(0,i.jsx)(n.th,{children:"Field id"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Checkbox"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFValue"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ComboBox"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFComboText"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"DatePicker"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFLocal, [id]_HFDate"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"DrawingControl"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFDrawingImageMerged, [id]_DrawingStrokes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"DropDownList"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFDropDownListText"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"FileUploader"}),(0,i.jsx)(n.td,{children:"[id]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"InkControl"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFInkImage, [id]_HFInkImageMerged"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"NumericField"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFNumericField"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"PicturePicker"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFFeatureType"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"RadioBox"}),(0,i.jsx)(n.td,{children:"[id], [name*]_HFValue"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ReverseGeolocatorButton"}),(0,i.jsx)(n.td,{children:"[id]"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"SelectBox"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFSelectText"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Signature"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFInkImage, [id]_HFSignatureZip, [id]_HFSignatureMetadata"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Switch"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFText"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"TextField"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFMaskedValue**"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"TimePicker"}),(0,i.jsx)(n.td,{children:"[id], [id]_HFLocal, [id]_HFTime"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"TreeView"}),(0,i.jsx)(n.td,{children:"[id]"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:'* value of the radiobox name attribute\n** only set if the config option "mask" is set on the control'}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"1. Namespace:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"HybridForms.API.Fields;\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"2. Get value of a field:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"HybridForms.API.Fields.getById(id: string): IFormField\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"3. Set value of a field:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Method signature:\nHybridForms.API.Fields.setField(id: string, value: any);\n\n// Example:\nHybridForms.API.Fields.setField('textfield_id', 'foo');\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"4. Delete value of a field:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"// Method signature:\nHybridForms.API.Fields.deleteField(id: string);\n\n// Example:\nHybridForms.API.Fields.deleteField('textfield_id');\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"5. React on changes of field values:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"this.onFieldChanged = function (ev) {\n    // do something here\n};\nHybridForms.API.Fields.addEventListener('itemmutated', this.onFieldChanged);\n\n// if registerd in a custom control don\xb4t forget to dispose the event handler in your classes dispose() method\nHybridForms.API.Fields.removeEventListener('itemmutated', this.onFieldChanged);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"how-to-cope-with-repeatingunits",children:"How to cope with RepeatingUnits"}),"\n",(0,i.jsx)(n.p,{children:"When the form is parsed, the defined control ids within the form definition receive a postfix if they are situated within a RepeatingUnit. This keeps the ids unique even within a RepeatingUnit."}),"\n",(0,i.jsxs)(n.p,{children:["Control id within the form definition: ",(0,i.jsx)(n.code,{children:"first_name"})]}),"\n",(0,i.jsxs)(n.p,{children:["Appendix: ",(0,i.jsx)(n.code,{children:"_hfrepeating_[n RepeatingUnit]"})]}),"\n",(0,i.jsxs)(n.p,{children:["Control id within rendered form and data structure: ",(0,i.jsx)(n.br,{}),"\n","first_name_hfrepeating_1",(0,i.jsx)(n.br,{}),"\n","first_name_hfrepeating_2",(0,i.jsx)(n.br,{}),"\n","first_name_hfrepeating_3",(0,i.jsx)(n.br,{}),"\n","\u2026"]}),"\n",(0,i.jsx)(n.p,{children:"This is an example, how to connect to a control within a Repeating Unit:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"(function () {\n    'use strict';\n\n    WinJS.Namespace.define('HFFormdefinition.SomeNamespace', {\n        setPhoneNumber: function (value) {\n            let thisCtrl = this,\n                // html control: <div id=\"repeating_phone\" data-win-control=\"HFWinJSCtrl.TextField\"></div>\n                basePhoneId = 'repeating_phone',\n                currentPostfix = HybridForms.API.RepeatingUnits.getPostfixFieldId(thisCtrl.element),\n                phoneInstanceId,\n                phoneCtrl;\n\n            console.log('current Repeating Unit: ', currentPostfix);\n            phoneInstanceId = basePhoneId + currentPostfix;\n            phoneCtrl = HybridForms.API.FormControls.getCtrl(phoneInstanceId);\n            phoneCtrl.val('+43 316 / 721 671-0');\n        },\n    });\n\n    WinJS.Utilities.markSupportedForProcessing(HFFormdefinition.SomeNamespace.setPhoneNumber);\n})();\n"})}),"\n",(0,i.jsx)(n.h2,{id:"page-events",children:"Page events"}),"\n",(0,i.jsx)(n.h3,{id:"namespace",children:"Namespace"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"enum PageEventsEnum {\n    // Gets fired when the page is ready and all controls are rendered\n    rendered = 'rendered',\n\n    // Gets fired when the page for pdf generation is ready and all controls are rendered\n    rendered = 'viewrendered',\n\n    // Gets fired when the page is resizing.\n    resized = 'resized',\n\n    // Gets fired when the page is scrolled.\n    scrolled = 'scrolled',\n\n    // Gets fired when the user navigates away from the form page.\n    navigated = 'navigated',\n};\n\nHybridForms.API.Page.addEventListener(type: PageEventsEnum, callback: function): void;\n\n// removes the event listener\nHybridForms.API.Page.removeEventListener(type: PageEventsEnum, callback: function): void;\n"})}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"this.onRendered = function (ev) {};\nHybridForms.API.Page.addEventListener('rendered', this.onRendered);\n\n// if registerd in a custom control don\xb4t forget to dispose the event handler in your classes dispose() method\nHybridForms.API.Page.removeEventListener('rendered', this.onRendered);\n"})}),"\n",(0,i.jsx)(n.h2,{id:"how-to-cope-with-catalogs",children:"How to cope with Catalogs"}),"\n",(0,i.jsxs)(n.p,{children:['The form controls "ComboBox" and "DropDownList" can access catalogs stored at your server and display the column values.',(0,i.jsx)(n.br,{}),"\n","These catalogs can be imported/exported in different representations as there are Microsoft Excel files, simple CSV files or JSON files.",(0,i.jsx)(n.br,{}),"\n","So those can be easily managed and updated."]}),"\n",(0,i.jsxs)(n.p,{children:["For more information on catalogs, please refer to the ",(0,i.jsx)(n.strong,{children:"HybridForms Administration Manual"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"../form-definition/form",children:"form guide"})," contains detailed information on how to connect to these catalogs in the HTML template."]}),"\n",(0,i.jsx)(n.p,{children:"Any manipulation of the the data sources - for example filtering or setting a new data source - has to be done by scripting."}),"\n",(0,i.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,i.jsxs)(n.p,{children:["For any operation on data sources these have to be available offline too, therefore implement the data sources not only via the form control but also by ",(0,i.jsx)(n.a,{href:"../form-definition/variables",children:"template variables"}),"."]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<var data-hf-name="DataSource" \n    data-hf-data-source-id="CatalogName" \n    data-hf-persistent="true">/api/catalogs/CatalogName?$select=ID,ColumnName1,ColumnName2&amp;$orderby=ID</var>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"example-1",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"\nhandleData function () {\n    ...\n    let nameField = HybridForms.API.FormControls.getCtrl('formcontrol_id');\n    let filter = [{ field: 'ID', operator: 'eq', value: this.val().value }];\n\n    // Retrieve the catalog for onChanged events and set the value of a text field\n    return HybridForms.API.FormStorage.getDataSource('data-hf-data-source-id', filter).then(function (dataSource) {\n        let item = dataSource[0];\n        if (item !== undefined) {\n            nameField.val(item.ColumnName2);\n        }\n    });\n\n    // Retrieve and alter the catalog initial and by onChanged events, especially filter operations\n    return HybridForms.API.FormStorage.getCatalog('data-hf-data-source-id', filter).then(function (dataSource) {\n        // change the form controls data source\n        this.setDataSource(dataSource);\n    });\n}\n\n"})}),"\n",(0,i.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,i.jsxs)(n.p,{children:["Refer to the KendoUI documentation for further information on ",(0,i.jsx)("a",{href:"https://docs.telerik.com/kendo-ui/api/javascript/data/datasource/configuration/filter",target:"_blank",children:"filters"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);