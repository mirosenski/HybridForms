"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[16691],{11470:(e,n,t)=>{t.d(n,{A:()=>I});var i=t(96540),a=t(34164),r=t(23104),o=t(56347),l=t(205),s=t(57485),d=t(31682),c=t(89466);function u(e){return i.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,i.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:i,default:a}}=e;return{value:n,label:t,attributes:i,default:a}}))}(t);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function h(e){let{queryString:n=!1,groupId:t}=e;const a=(0,o.W6)(),r=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s.aZ)(r),(0,i.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})}),[r,a])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,r=p(e),[o,s]=(0,i.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=t.find((e=>e.default))??t[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:r}))),[d,u]=h({queryString:t,groupId:a}),[f,v]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,r]=(0,c.Dv)(t);return[a,(0,i.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:a}),g=(()=>{const e=d??f;return m({value:e,tabValues:r})?e:null})();(0,l.A)((()=>{g&&s(g)}),[g]);return{selectedValue:o,selectValue:(0,i.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);s(e),u(e),v(e)}),[u,v,r]),tabValues:r}}var v=t(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(74848);function b(e){let{className:n,block:t,selectedValue:i,selectValue:o,tabValues:l}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,r.a_)(),c=e=>{const n=e.currentTarget,t=s.indexOf(n),a=l[t].value;a!==i&&(d(n),o(a))},u=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}n?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:r}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:i===n?0:-1,"aria-selected":i===n,ref:e=>{s.push(e)},onKeyDown:u,onClick:c,...r,className:(0,a.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":i===n}),children:t??n},n)}))})}function y(e){let{lazy:n,children:t,selectedValue:r}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,i.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function F(e){const n=f(e);return(0,x.jsxs)("div",{className:(0,a.A)("tabs-container",g.tabList),children:[(0,x.jsx)(b,{...n,...e}),(0,x.jsx)(y,{...n,...e})]})}function I(e){const n=(0,v.A)();return(0,x.jsx)(F,{...e,children:u(e.children)},String(n))}},19365:(e,n,t)=>{t.d(n,{A:()=>o});t(96540);var i=t(34164);const a={tabItem:"tabItem_Ymn6"};var r=t(74848);function o(e){let{children:n,hidden:t,className:o}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(a.tabItem,o),hidden:t,children:n})}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(96540);const a={},r=i.createContext(a);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(r.Provider,{value:n},e.children)}},78925:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>u});const i=JSON.parse('{"id":"custom-code-guide/examples","title":"Examples","description":"In HybridForms development, TypeScript functions are crucial for creating dynamic Forms.","source":"@site/versioned_docs/version-10.0/40-custom-code-guide/40-examples.mdx","sourceDirName":"40-custom-code-guide","slug":"/custom-code-guide/examples","permalink":"/docs/10.0/custom-code-guide/examples","draft":false,"unlisted":false,"tags":[],"version":"10.0","sidebarPosition":40,"frontMatter":{"title":"Examples"},"sidebar":"tutorialSidebar","previous":{"title":"Controls","permalink":"/docs/10.0/custom-code-guide/controls"},"next":{"title":"JS (deprecated)","permalink":"/docs/10.0/category/js-deprecated"}}');var a=t(74848),r=t(28453),o=t(11470),l=t(19365);const s={title:"Examples"},d="Examples",c={},u=[{value:"Combining Two ComboBoxes",id:"combining-two-comboboxes",level:2},{value:"Initializr Control",id:"initializr-control",level:2},{value:"Data Source Handling",id:"data-source-handling",level:2},{value:"User Display Name Handling",id:"user-display-name-handling",level:2},{value:"Repeating Inputs",id:"repeating-inputs",level:2}];function p(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"examples",children:"Examples"})}),"\n",(0,a.jsx)(n.p,{children:"In HybridForms development, TypeScript functions are crucial for creating dynamic Forms.\nThis guide explores their syntax, strategies, and best practices within the Framework.\nFrom event handling to data manipulation, functions empower developers to optimize Form performance and enhance user experience."}),"\n",(0,a.jsxs)(n.p,{children:["Our reliance on the FormAPI is significant for tasks such as retrieving and setting Form Control values, data manipulation, and managing Form events.\nFor further details, please refer to our documentation available ",(0,a.jsx)(n.a,{href:"/form-api",children:"here"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"combining-two-comboboxes",children:"Combining Two ComboBoxes"}),"\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(l.A,{value:"ts",label:"TypeScript",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:"namespace HFFormdefinition.SomeNamespace {\n    /*\n     * filterData\n     * Type: onChanged Method\n     * Description:\n     *      When choosing a Value from the Main ComboBox, the content in the Sub ComboBox\n     *      will change to the relevant content for the selection.\n     *      Works in both non- and repeating units.\n     * @data-hf-options:\n     *      subCtrlId[string](required): formcontrol-id of effected ComboBox\n     */\n    export function filterData() {\n        const filterField = this.val();\n        let currentRU = '';\n        if (HybridForms.API.RepeatingUnits.isRepeatingUnit(this.element)) {\n            currentRU = HybridForms.API.RepeatingUnits.getPostfixFieldId(this.element);\n        }\n\n        const comboBoxTargetCtrl = HybridForms.API.FormControls.getCtrl(this.subCtrlId + currentRU);\n\n        if (typeof comboBoxTargetCtrl === 'undefined') {\n            return;\n        }\n\n        const dataSource = comboBoxTargetCtrl.dataSource;\n        if (!filterField || !filterField.value) {\n            comboBoxTargetCtrl.setDataSource(dataSource);\n            return;\n        }\n\n        const filterByValue = filterField.value;\n        const filtered = dataSource.filter(function (item) {\n            return filterByValue === item.kat;\n        });\n        comboBoxTargetCtrl.setDataSource(filtered);\n    }\n}\n"})})}),(0,a.jsx)(l.A,{value:"html",label:"HTML",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",metastring:"showLineNumbers",children:"\x3c!-- ComboBox: Begin - Field Dependence: When choosing a Value from the Main ComboBox, \nthe content in the Sub ComboBox will change to the relevant content for the selection. --\x3e\n<div\n    id=\"tab1_combobox_haupt\"\n    data-hf-control=\"ComboBox\"\n    data-hf-options=\"{\n        label: 'Main ComboBox',\n        dataSource: [\n        {\n            kat:1,\n            name:'Main selection 1'\n        },\n        {\n            kat:2,\n            name:'Main selection 2'\n        },\n        {\n            kat:3,\n            name:'Main selection 3'\n        }],\n        dataTextField: 'name',\n        dataValueField: 'kat',\n        onChanged: HFFormdefinition.SomeNamespace.filterData,\n        subCtrlId: 'tab1_combobox_sub'\n    }\"\n></div>\n\x3c!-- Replace Namespace from added Script --\x3e\n\n<div\n    id=\"tab1_combobox_sub\"\n    data-hf-control=\"ComboBox\"\n    data-hf-options=\"{\n        label: 'Sub ComboBox',\n        dataSource: [\n        {\n            value:101,\n            name:'Sub selection 1.1',\n            kat:1\n        },\n        {\n            value:102,\n            name:'Sub selection 1.2',\n            kat:1\n        },\n        {\n            value:201,\n            name:'Sub selection 2.1',\n            kat:2\n        },\n        {\n            value:202,\n            name:'Sub selection 2.2',\n            kat:2\n        },\n        {\n            value:301,\n            name:'Sub selection 3.1',\n            kat:3\n        },\n        {\n            value:302,\n            name:'Sub selection 3.2',\n            kat:3\n        }],\n        dataTextField: 'name',\n        dataValueField: 'value'\n    }\"\n></div>\n\x3c!-- ComboBox: End - Field Dependence --\x3e\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"initializr-control",children:"Initializr Control"}),"\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(l.A,{value:"ts",label:"TypeScript",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:"namespace HFFormdefinition.SomeNamespace {\n    export function highlightCell() {\n        $('input:radio, input:checkbox').each(function () {\n            const id = this.dataset?.hfId ? this.dataset.hfId : this.id;\n            const ctrl = HybridForms.API.FormControls.getCtrl(id);\n            const val = ctrl.val();\n            $(this)\n                .closest('div.color')\n                .toggleClass('highlight', val ? val : false);\n        });\n    }\n\n    /**\n     * Initializr: calls a callback function when the form is rendered\n     */\n    export class Initializr extends HybridForms.API.UIControls.BaseControl {\n        private onRendered: () => void;\n        public callback: () => void;\n\n        constructor(element, options) {\n            super(element, options);\n\n            if (typeof this.callback === 'function') {\n                this.onRendered = () => {\n                    this.callback.call(this);\n                };\n                HybridForms.API.Page.addEventListener('rendered', this.onRendered);\n                HybridForms.API.Page.addEventListener('viewrendered', this.onRendered);\n            }\n        }\n\n        public dispose() {\n            if (this.disposed) {\n                return;\n            }\n\n            if (this.onRendered) {\n                HybridForms.API.Page.removeEventListener('rendered', this.onRendered);\n                HybridForms.API.Page.removeEventListener('viewrendered', this.onRendered);\n            }\n\n            this.disposed = true;\n        }\n    }\n}\n"})})}),(0,a.jsx)(l.A,{value:"html",label:"HTML",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",metastring:"showLineNumbers",children:'<div\n    id="init_highlight_cell"\n    class="pdf-hide"\n    data-hf-control="HFFormdefinition.SomeNamespace.Initializr"\n    data-hf-options="{\n        callback: HFFormdefinition.SomeNamespace.highlightCell,\n    }"\n></div>\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"data-source-handling",children:"Data Source Handling"}),"\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(l.A,{value:"ts",label:"TypeScript",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:"namespace HFFormdefinition.SomeNamespace {\n    /**\n     * setDataSource: sets the data source for a control\n     */\n    export function setDataSource() {\n        HybridForms.API.FormStorage.getCatalog('StateCatalog').then((dataSource) => {\n            const amountField = HybridForms.API.Fields.getById('programmatic_set_datasource');\n            const fieldValue = amountField.value;\n            const amountCtrl = HybridForms.API.FormControls.getCtrl('programmatic_set_datasource');\n\n            amountCtrl.isLoaded().then(() => {\n                amountCtrl.setDataSource(dataSource);\n                if (fieldValue) {\n                    amountCtrl.val(fieldValue);\n                }\n            });\n        });\n    }\n}\n"})})}),(0,a.jsx)(l.A,{value:"html",label:"HTML",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",metastring:"showLineNumbers",children:'<var data-hf-name="DataSource" data-hf-data-source-id="StateCatalog"\n    >/api/catalogs/Staat?$select=Title,KatalogText&amp;$orderby=KatalogText&amp;$top=5000</var\n>\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"user-display-name-handling",children:"User Display Name Handling"}),"\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(l.A,{value:"ts",label:"TypeScript",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:"namespace HFFormdefinition.SomeNamespace {\n    export function setUser() {\n        return HybridForms.API.User.get().displayName || '';\n    }\n}\n"})})}),(0,a.jsx)(l.A,{value:"html",label:"HTML",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",metastring:"showLineNumbers",children:'<input\n    id="username"\n    type="text"\n    placeholder="Username"\n    data-hf-control="TextField"\n    data-hf-options="{\n        label: \'Username,\n        disabled: true,\n        defaultValue: HFFormdefinition.SomeNamespace.setUser\n    }"\n/>\n'})})})]}),"\n",(0,a.jsx)(n.h2,{id:"repeating-inputs",children:"Repeating Inputs"}),"\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(l.A,{value:"ts",label:"TypeScript",default:!0,children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",metastring:"showLineNumbers",children:"namespace HFFormdefinition.SomeNamespace {\n    export class addInput extends HybridForms.API.UIControls.BaseControl {\n        constructor(element, options) {\n            super(element, options);\n        }\n\n        private clickEvent(event) {\n            const targetId = event.currentTarget.id;\n            const $block = $(`#${targetId}`).closest('.repeating-input-container');\n\n            $('.repeating-input.hf-hide', $block).first().removeClass('hf-hide');\n        }\n\n        private getElementId(element: HTMLElement): string {\n            if (this.isView) {\n                return element.dataset.hfId;\n            }\n            return element.id;\n        }\n\n        private showRepeatingInputs($ct: JQuery<HTMLElement> | HTMLElement) {\n            $('.repeating-input:not(.init)', $ct).each((idx, element) => {\n                const $element = $(element);\n                const $input = $('.hf-formcontrol', $element);\n                let filled = false;\n\n                $input.each((index, el) => {\n                    const field = HybridForms.API.Fields.getById(this.getElementId(el));\n                    const value = field?.value;\n                    if (value) {\n                        filled = true;\n                    }\n                });\n\n                if (filled) {\n                    $element.removeClass('hf-hide');\n                } else {\n                    $element.addClass('hf-hide');\n                }\n            });\n        }\n\n        protected createView() {\n            const $ct = this.$element.closest('.repeating-input-container');\n            this.showRepeatingInputs($ct);\n        }\n\n        protected createControl(): Promise<void> {\n            const currentStatus = HybridForms.API.Form.getStatus();\n            if (currentStatus > 1) {\n                this.$element.parents('.add-input-wrapper').addClass('hf-hide');\n            }\n\n            const $ct = this.$element.closest('.repeating-input-container');\n\n            this.showRepeatingInputs($ct);\n\n            this.$element.on('click', (ev) => {\n                ev.stopImmediatePropagation();\n                ev.preventDefault();\n                this.clickEvent(ev);\n            });\n\n            return Promise.resolve();\n        }\n\n        public dispose() {\n            if (this.disposed) {\n                return;\n            }\n\n            this.$element.off('click');\n\n            this.disposed = true;\n        }\n    }\n\n    export class removeInput extends HybridForms.API.UIControls.BaseControl {\n        constructor(element, options) {\n            super(element, options);\n        }\n\n        private clickEvent(event) {\n            const targetId = event.currentTarget.id;\n            const $block = $(`#${targetId}`).closest('.repeating-input-container');\n            const $inputBlock = $('#' + event.currentTarget.id, $block).closest('.repeating-input');\n            const $input = $('.hf-formcontrol', $inputBlock);\n\n            $input.each((idx, element) => {\n                HybridForms.API.FormControls.getCtrl(element.id).val(null);\n            });\n\n            const $ruInputs = $('.repeating-input:not(.hf-hide)', $block);\n            $ruInputs.each((idx, context) => {\n                const $context = $(context);\n                const idPostfix = idx + 1;\n                let emptyRow = true;\n\n                const $formControls = $('.hf-formcontrol', $context);\n                $formControls.each((index, element) => {\n                    if ($(element).hasClass('filled')) {\n                        emptyRow = false;\n                    }\n                });\n\n                if (emptyRow && idPostfix < $ruInputs.length) {\n                    $formControls.each((index, element) => {\n                        const id = element.id;\n                        const ctrl = HybridForms.API.FormControls.getCtrl(id);\n                        const nextId = id.replace(/input_(?:\\d*)/, `input_${idPostfix + 1}`);\n                        let nextCtrl = HybridForms.API.FormControls.getCtrl(nextId);\n\n                        let nextVal = nextCtrl.val();\n                        if (nextVal && typeof nextVal.value !== 'undefined') {\n                            nextVal = nextCtrl.val().value;\n                        }\n                        ctrl.val(nextVal);\n                        nextCtrl.val(null);\n\n                        nextCtrl = null;\n                    });\n                }\n            });\n\n            $('.repeating-input:not(.hf-hide):not(.init)', $block).last().addClass('hf-hide');\n        }\n\n        protected createControl(): Promise<void> {\n            const currentStatus = HybridForms.API.Form.getStatus();\n\n            if (currentStatus > 1) {\n                this.$element.addClass('hf-hide');\n            }\n\n            this.$element.on('click', (ev) => {\n                ev.stopImmediatePropagation();\n                ev.preventDefault();\n                this.clickEvent(ev);\n            });\n\n            return Promise.resolve();\n        }\n\n        public dispose() {\n            if (this.disposed) {\n                return;\n            }\n\n            this.$element.off('click');\n\n            this.disposed = true;\n        }\n    }\n}\n"})})}),(0,a.jsx)(l.A,{value:"html",label:"HTML",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",metastring:"showLineNumbers",children:'<div class="repeating-input-container">\n    <div class="grid column1">\n        <div class="r1 c1">\n            <div\n                id="example"\n                type="text"\n                data-hf-control="Label"\n                data-hf-options="{ \n                    label: \'label\',\n                    required: true,\n                    requiredFields: \'example_input_1\'\n                }"\n            ></div>\n        </div>\n    </div>\n    <div class="grid column1 repeating-input init">\n        <div class="r1 c1">\n            <input id="example_input_1" type="text" data-hf-control="TextField" />\n            <div\n                id="example_remove_input_1"\n                class="remove-input pdf-hide"\n                data-hf-control="HFFormdefinition.SomeNamespace.removeInput"\n            >\n                <p class="remove-icon"><i class="fal fa-minus"></i></p>\n            </div>\n        </div>\n    </div>\n    <div class="grid column1 repeating-input">\n        <div class="r1 c1">\n            <input id="example_input_2" type="text" data-hf-control="TextField" />\n            <div\n                id="example_remove_input_2"\n                class="remove-input pdf-hide"\n                data-hf-control="HFFormdefinition.SomeNamespace.removeInput"\n            >\n                <p class="remove-icon"><i class="fal fa-minus"></i></p>\n            </div>\n        </div>\n    </div>\n    <div class="grid column1 repeating-input">\n        <div class="r1 c1">\n            <input id="example_input_3" type="text" data-hf-control="TextField" />\n            <div\n                id="example_remove_input_3"\n                class="remove-input pdf-hide"\n                data-hf-control="HFFormdefinition.SomeNamespace.removeInput"\n            >\n                <p class="remove-icon"><i class="fal fa-minus"></i></p>\n            </div>\n        </div>\n    </div>\n    <div class="grid column1 repeating-input">\n        <div class="r1 c1">\n            <input id="example_input_4" type="text" data-hf-control="TextField" />\n            <div\n                id="example_remove_input_4"\n                class="remove-input pdf-hide"\n                data-hf-control="HFFormdefinition.SomeNamespace.removeInput"\n            >\n                <p class="remove-icon"><i class="fal fa-minus"></i></p>\n            </div>\n        </div>\n    </div>\n    <div class="grid column1 repeating-input">\n        <div class="r1 c1">\n            <input id="example_input_5" type="text" data-hf-control="TextField" />\n            <div\n                id="example_remove_input_5"\n                class="remove-input pdf-hide"\n                data-hf-control="HFFormdefinition.SomeNamespace.removeInput"\n            >\n                <p class="remove-icon"><i class="fal fa-minus"></i></p>\n            </div>\n        </div>\n    </div>\n    <div class="grid column3 add-input-wrapper">\n        <div class="r1 c1">&nbsp;</div>\n        <div class="r1 c2">&nbsp;</div>\n        <div class="r1 c3">\n            <div\n                id="example_add_input"\n                class="add-input pdf-hide"\n                data-hf-control="HFFormdefinition.SomeNamespace.addInput"\n                data-hf-options="{\n                    inputId: \'example_\'\n                }"\n            >\n                <p><strong>Hinzuf\xfcgen</strong></p>\n            </div>\n        </div>\n    </div>\n</div>\n'})})}),(0,a.jsx)(l.A,{value:"scss",label:"SCSS",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-scss",metastring:"showLineNumbers",children:"/* Repeating Input START */\n.add-input-wrapper {\n    margin-bottom: 15px;\n}\n\n.add-input {\n    background-color: #d9d9d9;\n    border-radius: 4px;\n    padding: 10px 0;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #cccccc;\n    }\n\n    p {\n        text-align: center;\n        margin: 0 !important;\n    }\n}\n\n.remove-input {\n    position: absolute;\n    top: 0;\n    right: 10px;\n    width: 30px;\n    height: 30px;\n    padding: 5px;\n    z-index: 9;\n\n    .remove-icon {\n        text-align: center;\n        color: black !important;\n        background-color: #d9d9d9;\n        margin: 0 !important;\n        height: 20px;\n        width: 20px;\n        border-radius: 100%;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #cccccc;\n        }\n    }\n}\n\n.repeating-input.multiline {\n    .remove-input {\n        position: relative;\n        right: 0;\n        margin-left: 10px;\n        padding: 0;\n\n        .remove-icon {\n            display: flex;\n            justify-content: center;\n            align-items: center;\n            border-radius: 4px;\n            width: 30px;\n            height: 30px;\n        }\n    }\n\n    .flex-1-shrink {\n        align-self: flex-end;\n        margin-bottom: 10px;\n    }\n\n    &:nth-child(even) {\n        background-color: rgba(217, 217, 217, 0.3);\n    }\n}\n\n.repeating-input {\n    display: none;\n\n    &.init {\n        display: block;\n    }\n\n    &:not(.multiline) {\n        .hf-numericfield:not(.no-padding) .k-input,\n        .hf-textfield:not(.no-padding) {\n            padding-right: 30px;\n        }\n    }\n\n    .hf-formcontrol {\n        &.hf-view {\n            display: none;\n\n            &.filled {\n                display: block;\n            }\n        }\n    }\n}\n/* Repeating Input END */\n"})})})]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);