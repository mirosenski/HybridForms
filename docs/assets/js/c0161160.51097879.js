"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[96095],{2345:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>h});const l=JSON.parse('{"id":"form-definition/includes","title":"Includes","description":"HF-Includes are blocks defined in a template HTML file referenced by the HTML form definition file.","source":"@site/versioned_docs/version-9.2/form-definition/50-includes.mdx","sourceDirName":"form-definition","slug":"/form-definition/includes","permalink":"/docs/9.2/form-definition/includes","draft":false,"unlisted":false,"tags":[],"version":"9.2","sidebarPosition":50,"frontMatter":{"title":"Includes"},"sidebar":"tutorialSidebar","previous":{"title":"Repeating Units","permalink":"/docs/9.2/form-definition/repeatingunits"},"next":{"title":"Template Variables","permalink":"/docs/9.2/form-definition/variables"}}');var i=t(74848),a=t(28453),r=t(11470),o=t(19365);const s={title:"Includes"},d="Includes",c={},h=[{value:"Usage",id:"usage",level:2},{value:"Complex config attributes",id:"complex-config-attributes",level:2},{value:"Include-Files-Tag",id:"include-files-tag",level:2},{value:"Include HTML-Fragments",id:"include-html-fragments",level:2},{value:"Exclude-Structure-Attribute",id:"exclude-structure-attribute",level:2},{value:"HF-Templates",id:"hf-templates",level:2},{value:"Placeholders",id:"placeholders",level:2},{value:"Export in FormDev",id:"export-in-formdev",level:2}];function u(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"includes",children:"Includes"})}),"\n",(0,i.jsxs)(n.p,{children:["HF-Includes are blocks defined in a template HTML file referenced by the HTML form definition file.\nWhile developing with the FormDev environment HF-Includes are automatically included in the form definition file.",(0,i.jsx)(n.br,{}),"\n","To use form definitions with includes in production you have to export these form definitions to one valid Form definition (i.e. the HTML file and all associated images and files)."]}),"\n",(0,i.jsx)(n.p,{children:'The "Template Exporter" merges the main form definition folder and files with the HF-Includes and generates valid form definitions ready for upload/usage:'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["the exported ",(0,i.jsx)(n.strong,{children:"HTML form definition file"})," contains the HF-Blocks that are defined in the template file"]}),"\n",(0,i.jsxs)(n.li,{children:["and the exported ",(0,i.jsx)(n.strong,{children:"form definition folder"})," contains all linked scripts and style files from the template file as well as all files present in the source form definition folder."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Inside the HTML form definition file:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<form>\n    <ol>\n        <li data-hf-title="PageTitle">\n            <ol>\n                <li data-hf-title="TabTitle">\n                    \x3c!-- *** HF-Include ***--\x3e\n                    <a href="../Demorepair.templ/demo-repair.templ.html#operation-block-template-1"></a>\n                    \x3c!-- ****************** --\x3e\n                    <a href="#operation-block2"></a>\n                </li>\n            </ol>\n        </li>\n    </ol>\n</form>\n'})}),"\n",(0,i.jsx)(n.p,{children:"A reference of the HF-Include block consists of two parts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["the ",(0,i.jsx)(n.strong,{children:"template file link"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['the relative path to the template file, eg "',(0,i.jsx)(n.code,{children:"../Demorepair.templ/demo-repair.templ.html"}),'"']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{title:"Note",type:"tip",children:[(0,i.jsx)(n.p,{children:'The example shows the path to the folder inside the "formdefinitons" folder.  Please ensure that your template folder is located inside this folder. Both - folder and file name - must conform to our naming convention:'}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Folders : ",(0,i.jsx)(n.strong,{children:"*.templ"}),", eg Demorepair.templ/"]}),"\n",(0,i.jsxs)(n.li,{children:["Files: ",(0,i.jsx)(n.strong,{children:"*.templ.html"}),"), eg demo-repair.templ.html"]}),"\n"]})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["the ",(0,i.jsx)(n.strong,{children:"block id"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['this is the html id-tag, eg: "',(0,i.jsx)(n.code,{children:"#operation-block-template-1"}),'"']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:'... and is declared in the block link section the same way as "normal" blocks defined in the main HTML file:'}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:'<a href="../Demorepair.templ/demo-repair.templ.html#operation-block-template-1"></a>'})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"complex-config-attributes",children:"Complex config attributes"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'...\n<form>\n    <ol>\n        <li data-hf-title="PageTitle">\n            <ol>\n                <li data-hf-title="TabTitle">\n                    \x3c!-- *** HF-Include ***--\x3e\n                    <a href="../Demorepair.templ/demo-repair.templ.html#operation-block-template-1"\n                        data-change-ctrl-ids=\'{ \n                            "customcontrol_1": "id_that_has_been_changed", \n                            "operation_id": "my_changed_id" \n                        }\' \n                        data-include-css="false"\n                        data-ph-mylabel="My block label"></a>\n                    \x3c!-- ****************** --\x3e\n                    <a href="#operation-block2"></a>\n                </li>\n            </ol>\n        </li>\n        ...\n    </ol>\n</form>\n'})}),"\n",(0,i.jsx)(n.p,{children:"There are several config attributes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"data-include-css"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["takes a boolean value to prevent exporter to include style definitions, default value equals ",(0,i.jsx)(n.code,{children:'"true"'}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"data-id-prefix"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"adds to each control- and block-id in the template a prefix. For example this can be used to add the same template block multiple times in your formdefinition."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"data-change-ctrl-ids"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:['takes a list of ids of your template to change them, e.g: "',(0,i.jsx)(n.code,{children:'data-change-ctrl-ids=\'{"customcontrol_1": "id_that_has_been_changed", "operation_id": "my_changed_id"}\''}),'"']}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"data-ph-[customValue]"}),":","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["free selectable placeholders, which are used in your template, and are replaced with the value assigned to this property in the HTML template. These properties are so called ",(0,i.jsx)(n.strong,{children:"blockPlaceholders"}),". Enclose the ",(0,i.jsx)(n.strong,{children:"blockPlaceholders"})," in the template within two brackets: ",(0,i.jsx)(n.code,{children:"{{customValue}}"}),".",(0,i.jsx)(n.br,{}),"\n","Only lowercase customValue-names are allowed!",(0,i.jsx)(n.br,{}),"\n","For Example the attribute ",(0,i.jsx)(n.code,{children:'data-ph-mylabel="My block label"'})," replaces the strings ",(0,i.jsx)(n.code,{children:"{{label}}"})," in the given template block with the value of the ",(0,i.jsx)(n.code,{children:"date-ph-mylabel"}),"-value ",(0,i.jsx)(n.code,{children:"My block label"}),". This is also used for including the same template block multiple times in your formdefinition."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"include-files-tag",children:"Include-Files-Tag"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"<head>\n    [...]\n    <includefiles \n        data-include-url=\"../TemplateFolder.templ\"\n        data-include-files=\"['file01.css','file02.jpg','file03.js']\"></includefiles>\n</head>\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The Include-Files-Tag controls what files are copied from the template folder to the formdefinition folder. This is a way to organize all of your assets (logos, css-files, js-files etc.) in your template folder and to define the files your formdefinition needs in the formdefinition html file. The ",(0,i.jsx)(n.code,{children:"data-include-url"}),"-attribute defines the relative path to the the template folder and th ",(0,i.jsx)(n.code,{children:"data-include-files"}),"-attribute defines the files that should be included in the output fordefinition folder. It is possibe to define multiple ",(0,i.jsx)(n.code,{children:"includefiles"}),"-tags if you want to include files from different template folders."]}),"\n",(0,i.jsx)(n.h2,{id:"include-html-fragments",children:"Include HTML-Fragments"}),"\n",(0,i.jsx)(n.p,{children:'Besides blocks it is also possible to include HTML fragments ("rows" and "columns") at any position inse your HTML file.'}),"\n",(0,i.jsx)(n.admonition,{title:"Note",type:"caution",children:(0,i.jsx)(n.p,{children:"Keep in mind the result must be a valid and parseable HTML file."})}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsxs)(o.A,{value:"templ",label:"HTML .templ",default:!0,children:[(0,i.jsx)(n.p,{children:"Provide the fragment in your .templ.html file:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<div id="operation-includeFragment_1">\n    <div class="grid column2">\n        <div class="r1 c1">\n            <div id="operation_date2"\n                data-win-control="HFWinJSCtrl.DatePicker"\n                data-win-options="{\n                    required: true,\n                    label: \'{{DateLabel}}\',\n                    defaultValue: \'now\',\n                    emptyContent : \'W\xe4hlen...\',\n                }"></div>\n        </div>\n        <div class="r1 c2">\n            <input type="text"\n                id="operation_id2"\n                data-win-control="HFWinJSCtrl.TextField"\n                class="show_disabled"\n                data-win-options="{\n                    list: true,  \n                    label: \'{{OperationLabel}}\'\n                }">\n        </div>\n    </div>\n</div>\n'})}),(0,i.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,i.jsxs)(n.p,{children:["The HTML-tag referenced in the HTML file (i.e. ",(0,i.jsx)(n.code,{children:'<div id="operation-includeFragment_1">...</div>'}),") is only a container of the HTML-snippet included in the merged HTML File."]})})]}),(0,i.jsxs)(o.A,{value:"html",label:"Template",children:[(0,i.jsx)(n.p,{children:"and include it in your HTML-file"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<div id="fragement- include-block" data-win-control="WinJS.Binding.Template">\n    <div class="grid column1">\n        <div class="r1 c1">\n            any element\n        </div>\n    </div>\n\n    <div id="fragment1"\n        data-hf-include="../Demo_Training.templ/DemoTraining.templ.html#operation-includeFragment_1"\n        data-id-prefix="template"\n        data-ph-datelabel="Date 1"\n        data-ph-test="{{@SomeTemplTag}}"\n        data-ph-operationlabel="Operation ID"\n        data-change-ctrl-ids=\'{"description": "id_that_has_been_changed"}\'\n        data-ph-test_test="[{ name: \'Dr.\', code: \'2\' },{ name: \'Mag.\', code: \'3\' },{ name: \'DI\', code: \'4\' }]"\n        data-include-css="false">\n    </div>\n    ...\n</div>\n'})}),(0,i.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,i.jsx)(n.p,{children:"Including HTML-fragments require a unique id of the include snippet!"})})]})]}),"\n",(0,i.jsx)(n.h2,{id:"exclude-structure-attribute",children:"Exclude-Structure-Attribute"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<li>[...]</li>\n<li data-hf-title="Optional Page"\n    data-exclude-structure="true"\n    id="optionalPage">\n    <ol>\n        <li data-hf-title="tabs">\n            <a href="#block01"></a>\n            <a href="#block02"></a>\n        </li>\n    </ol>\n</li>\n'})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"data-exclude-structure"}),"-tag allows to exclude certain structural elements (pages, tabs and blockes) from an exported html formdefinition. Define it on the structural element, a page, tab or block, that should be excluded. Default = false."]}),"\n",(0,i.jsx)(n.h2,{id:"hf-templates",children:"HF-Templates"}),"\n",(0,i.jsxs)(n.p,{children:["HF-Templates must be ",(0,i.jsx)(n.strong,{children:"complete and valid HTML5 Files"})," - no HTML snippets:",(0,i.jsx)(n.br,{}),"\n","They must include Doctype-declarations, a head and a body-tag and please stick to the naming convention:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["the template file should end with *",(0,i.jsx)(n.strong,{children:".templ.html"})]}),"\n",(0,i.jsx)(n.li,{children:"the template folder"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",metastring:'title="Example"',children:'<!DOCTYPE html>\n<html>\n<head>\n    <title>Example Template</title>\n    <script data-hf-src="ExampleControl.js"><\/script>\n    \n    <link rel="stylesheet" data-hf-href="aircompressor-template-style.css">\n    <style>\n        .foo{\n            background-color: red;\n        }\n    </style>\n</head>\n\n<body>\n    <div id="operation-block-template-1" data-win-control="WinJS.Binding.Template">\n        <div class="grid column3">\n            <div class="r1 c1">\n                <div id="customcontrol_1" \n                     data-win-control="HFFormdefinition.Templates.ExampleControl">\n                </div>\n            </div>\n            <div class="r1 c2">\n                <input  type="text" \n                    id="operation_id" \n                    data-win-control="HFWinJSCtrl.TextField"\n                    data-win-options="{\n                        label: {{mylabel}}\n                    }">\n            </div>\n            ...\n    </div>\n</body>\n</html>\n'})}),"\n",(0,i.jsx)(n.p,{children:"The HF-Templates contain:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"the block template(s)"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"all scripts and styles"})," needed for the block templates.",(0,i.jsx)(n.br,{}),"\n","Please define these scripts and styles in the head section of the html template."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"placeholders",children:"Placeholders"}),"\n",(0,i.jsx)(n.p,{children:'Placeholders (not to be confused with blockPlaceholders) are global key-value pairs, defined in a json file and used in your source or template HTML file. Global Placeholders are mostly used to generate different outputs of your formdefinition depending on a global "switch"-variable that you can provide when exporting the form.'}),"\n",(0,i.jsxs)(r.A,{children:[(0,i.jsx)(o.A,{value:"json",label:"placeholder.json",default:!0,children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="placeholder.json"',children:'    {\n        "myPlaceholder": "Some Text",  \n        "ComboBoxLabel": "Label for Combobox",\n        "backendUrl": {\n            "Backend_01": "backend_01/liste",\n            "Backend_02": "backendqa_02/liste",\n            "default": "Backend_02"\n        },    \n        "nestedCondition": {\n            "Backend_01": {"op": "and", "cond": [{"type": "field","id": "support_required","val": true},{"type": "stage","id": "ST2","val": true}],"else": "readonly"},\n            "Backend_02": {"op": "and","cond": [{"type": "field","id": "support_required","val": true}, {"op": "or","cond": [{"type": "stage","id": "ST2","val": true}, {"type": "stage","id": "ST4","val": true}]}],"else": "readonly"},\n            "default": "Backend_01",\n            "type": "htmlJSON"\n        }\n    }\n'})})}),(0,i.jsx)(o.A,{value:"html",label:"Template",children:(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"<div id=\"comboboxId\"\n    data-win-control=\"HFWinJSCtrl.ComboBox\"\n    data-hf-condition='{{../TemplateFolder.templ/placeholder.json#nestedCondition}}'\n    data-win-options=\"{\n        label: `{{../TemplateFolder.templ/placeholder.json#ComboBoxLabel}}`,\n        url: `{{../FormDefinition.templ/placeholder.json#backendUrl}}`,\n        dataTextField: 'text',\n        dataValueField: 'code'\n    }\">\n</div>\n"})})})]}),"\n",(0,i.jsx)(n.p,{children:"As you can see, the Placeholder is allways enclosed within two brackets and contsists of three parts:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["the relative path to the json file where the placeholder key is defined, eg. ",(0,i.jsx)(n.code,{children:"../TemplateFolder.templ/placeholder.json"})]}),"\n",(0,i.jsxs)(n.li,{children:["followed by a hash, ",(0,i.jsx)(n.code,{children:"#"})]}),"\n",(0,i.jsxs)(n.li,{children:["and the placeholder key, eg: ",(0,i.jsx)(n.code,{children:"ComboBoxLabel"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"{{../FormDefinition.templ/placeholder.json#ComboBoxLabel}}"})})}),"\n",(0,i.jsxs)(n.p,{children:["In the example these are the ",(0,i.jsx)(n.code,{children:"backendUrl"})," or the ",(0,i.jsx)(n.code,{children:"nestedCondition"})," placeholders."]}),"\n",(0,i.jsxs)(n.p,{children:["If you for example want to generate two different html-formdefinitions for different backends, where some parts of the html formdefinition file should differ you can use global placeholders with a ",(0,i.jsx)(n.strong,{children:"switch"}),'. By defining keys with a nested object that provides the "switch"-keys and the different values for different html formdefinitions you can export different outputs - as you can see in our example above (the ',(0,i.jsx)(n.code,{children:"backendUrl"})," or the ",(0,i.jsx)(n.code,{children:"nestedCondition"}),"-placeholders). Global placeholders with a ",(0,i.jsx)(n.strong,{children:"switch"})," are key-value pairs which values are itself an object with keys that present the different switches that you provide when exporting the form. Lets assume that we want to export the form for two different backends, with different urls to connect to. In this scenario you can use a ",(0,i.jsx)(n.strong,{children:"switch"}),' and tell the exporter or your form-dev environment (via default setting) what switch to use.  This is the way you export a formdefinition for the "Backend_01":']}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:'npm run export -- --formDefPath=relPath/to/your/formdefinition-folder --outputPostfix="Backend_01" --switch="Backend_01"'})}),"\n",(0,i.jsxs)(n.p,{children:["The nested ",(0,i.jsx)(n.strong,{children:"switch"})," objects have two special keys: ",(0,i.jsx)(n.code,{children:"default"})," and ",(0,i.jsx)(n.code,{children:"type"}),". The ",(0,i.jsx)(n.code,{children:"default"})," key defines the default switch that is also used in the formDev environment. The ",(0,i.jsx)(n.code,{children:"type"})," key supports two values: ",(0,i.jsx)(n.code,{children:"string"}),"(default) or ",(0,i.jsx)(n.code,{children:"htmlJSON"}),". The latter is a special case where a json object has to be provided for a html attribute (as this is the case for the ",(0,i.jsx)(n.code,{children:"data-hf-condition"})," attribute)."]}),"\n",(0,i.jsx)(n.h2,{id:"export-in-formdev",children:"Export in FormDev"}),"\n",(0,i.jsx)(n.p,{children:"Projects with Includes functionality have to be exported to merge all the content in one HTML FormDefinition file."}),"\n",(0,i.jsxs)(n.p,{children:['For more information on the export please refer to page "',(0,i.jsx)(n.a,{href:"devtools#exporter",children:"Dev Tools"}),'".']})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},11470:(e,n,t)=>{t.d(n,{A:()=>T});var l=t(96540),i=t(34164),a=t(23104),r=t(56347),o=t(205),s=t(57485),d=t(31682),c=t(89466);function h(e){return l.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,l.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,l.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:t,attributes:l,default:i}}=e;return{value:n,label:t,attributes:l,default:i}}))}(t);return function(e){const n=(0,d.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function p(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const i=(0,r.W6)(),a=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,s.aZ)(a),(0,l.useCallback)((e=>{if(!a)return;const n=new URLSearchParams(i.location.search);n.set(a,e),i.replace({...i.location,search:n.toString()})}),[a,i])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:i}=e,a=u(e),[r,s]=(0,l.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const l=t.find((e=>e.default))??t[0];if(!l)throw new Error("Unexpected error: 0 tabValues");return l.value}({defaultValue:n,tabValues:a}))),[d,h]=m({queryString:t,groupId:i}),[f,x]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[i,a]=(0,c.Dv)(t);return[i,(0,l.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:i}),b=(()=>{const e=d??f;return p({value:e,tabValues:a})?e:null})();(0,o.A)((()=>{b&&s(b)}),[b]);return{selectedValue:r,selectValue:(0,l.useCallback)((e=>{if(!p({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);s(e),h(e),x(e)}),[h,x,a]),tabValues:a}}var x=t(92303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(74848);function g(e){let{className:n,block:t,selectedValue:l,selectValue:r,tabValues:o}=e;const s=[],{blockElementScrollPositionUntilNextRender:d}=(0,a.a_)(),c=e=>{const n=e.currentTarget,t=s.indexOf(n),i=o[t].value;i!==l&&(d(n),r(i))},h=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=s.indexOf(e.currentTarget)+1;n=s[t]??s[0];break}case"ArrowLeft":{const t=s.indexOf(e.currentTarget)-1;n=s[t]??s[s.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":t},n),children:o.map((e=>{let{value:n,label:t,attributes:a}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,ref:e=>{s.push(e)},onKeyDown:h,onClick:c,...a,className:(0,i.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":l===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:a}=e;const r=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===a));return e?(0,l.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,l.cloneElement)(e,{key:n,hidden:e.props.value!==a})))})}function y(e){const n=f(e);return(0,j.jsxs)("div",{className:(0,i.A)("tabs-container",b.tabList),children:[(0,j.jsx)(g,{...n,...e}),(0,j.jsx)(v,{...n,...e})]})}function T(e){const n=(0,x.A)();return(0,j.jsx)(y,{...e,children:h(e.children)},String(n))}},19365:(e,n,t)=>{t.d(n,{A:()=>r});t(96540);var l=t(34164);const i={tabItem:"tabItem_Ymn6"};var a=t(74848);function r(e){let{children:n,hidden:t,className:r}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,l.A)(i.tabItem,r),hidden:t,children:n})}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var l=t(96540);const i={},a=l.createContext(i);function r(e){const n=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),l.createElement(a.Provider,{value:n},e.children)}}}]);