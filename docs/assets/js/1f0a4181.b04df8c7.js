"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[34431],{10894:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"form-controls/scanbuttonbarcode","title":"ScanButton (Barcode/NFC)","description":"This form control (button) starts a scan of barcodes and processes the decoded information inside the form.","source":"@site/versioned_docs/version-9.4/form-controls/scanbuttonbarcode.md","sourceDirName":"form-controls","slug":"/form-controls/scanbuttonbarcode","permalink":"/docs/9.4/form-controls/scanbuttonbarcode","draft":false,"unlisted":false,"tags":[],"version":"9.4","frontMatter":{"title":"ScanButton (Barcode/NFC)"},"sidebar":"tutorialSidebar","previous":{"title":"ScanButton (Anyline)","permalink":"/docs/9.4/form-controls/scanbuttonanyline"},"next":{"title":"SelectBox","permalink":"/docs/9.4/form-controls/selectbox"}}');var r=t(74848),c=t(28453);const d={title:"ScanButton (Barcode/NFC)"},i="ScanButton (Barcode/NFC)",o={},a=[{value:"Barcode Example",id:"barcode-example",level:3},{value:"NFC Example",id:"nfc-example",level:3},{value:"Scan Object",id:"scan-object",level:2}];function l(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"scanbutton-barcodenfc",children:"ScanButton (Barcode/NFC)"})}),"\n",(0,r.jsx)(n.p,{children:"This form control (button) starts a scan of barcodes and processes the decoded information inside the form.\nThe control is based on the NPM cross-platform barcode scanner for cordova and ZXing barcode scanner for browser."}),"\n",(0,r.jsx)(n.h3,{id:"barcode-example",children:"Barcode Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:"<div id=\"scanBtn\" \n    class=\"pdf-hide\" \n    data-win-control=\"HFWinJSCtrl.ScanButton\" \n    data-win-options=\"{                \n        buttonType: 'large',\n        icon: 'fa-barcode-scan',\n        buttonHeading: 'QR-Code',\n        buttonLabel: 'Scan',\n        scan: {\n            fieldId: 'add_parts_item1',\n            scanType: 'BARCODE',      \n            config: {\n                preferFrontCamera : false,\n                showFlipCameraButton : true,\n                showTorchButton : true,\n                saveHistory: false, \n                prompt : 'Please scan the appropriate barcode...',\n                resultDisplayDuration: 500,\n                formats : 'QR_CODE,AZTEC',\n                disableAnimations : true,\n                disableSuccessBeep: false\n            },\n            audioFeedback: true,\n            vibrationFeedback: true,\n            callbackFeedback: true,\n            callback: HFFormdefinition.BaseHelpers.customQRScanButton\n        }\n    }\">\n</div>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"nfc-example",children:"NFC Example"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:"<div id=\"nfcScanBtn\" class=\"hide-in-view\" \n    data-win-control=\"HFWinJSCtrl.ScanButton\" \n    data-win-options=\"{                \n        buttonType: 'large',\n        buttonHeading: 'NFC-Code',\n        buttonLabel: 'Scan',\n        buttonIcon: 'fa-times',\n        scan: {\n            mapping: {\n                '0': 'nfc-textfield-1',\n                '1': 'nfc-textfield-2',\n                '2': 'nfc-textfield-3'\n            },\n            scanType: 'NFC',\n            postProcess: HFFormdefinition.BaseHelpers.postProcessNFC\n        }\n    }\">\n</div>\n"})}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"How to use"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"fieldId *"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fieldId: 'add_parts_item1'"})}),(0,r.jsx)(n.td,{children:"Provide the ID of the form control receiving the scanned value."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"buttonLabel **"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"buttonLabel: 'Scan'"})}),(0,r.jsx)(n.td,{children:'Sets the label of the button (displayed if buttonType is "medium" or "large")'})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"buttonType **"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"buttonType: 'large'"})}),(0,r.jsx)(n.td,{children:"Define the size of the button ('small', 'medium' or 'large')."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"buttonIcon"}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"buttonIcon: 'fa-barcode-scan'"})}),(0,r.jsx)(n.td,{children:"Sets the icon of the button"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"buttonHeading"}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"buttonHeading: 'Navigation'"})}),(0,r.jsx)(n.td,{children:"Define a label for the control element."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"scan"}),(0,r.jsx)(n.td,{children:"Object"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"#scan-object",children:(0,r.jsx)(n.code,{children:"scan: { ... }"})})}),(0,r.jsx)(n.td,{children:"An object with key-value pairs defining the form field and the scan type, a config part for the plugin and an optional custom postprocessing function"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"*  These options are required."}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"**"})," Please provide at least one of these options."]}),"\n",(0,r.jsx)(n.h2,{id:"scan-object",children:"Scan Object"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Property"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"How to use"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"scanType *"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"scanType: 'BARCODE'"})}),(0,r.jsx)(n.td,{children:"Defines the used scanning type. Possible options are: BARCODE or NFC."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"fieldId **"})}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"fieldId: 'scan_input_id'"})}),(0,r.jsx)(n.td,{children:"FormControl in which the scan value is entered."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"mapping **"})}),(0,r.jsx)(n.td,{children:"Object"}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"mapping: {"}),"  ",(0,r.jsx)(n.code,{children:"'0': 'scan_input_id_1',"}),"  ",(0,r.jsx)(n.code,{children:"'1': 'scan_input_id_1'"}),"  ",(0,r.jsx)(n.code,{children:"}"})]}),(0,r.jsx)(n.td,{children:"An object with key-value pairs defining the scan record id and form field ID (especially for NFC Ndef Messages). Overwrites fieldId if both are set!"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"config"}),(0,r.jsx)(n.td,{children:"Object"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"config: { ... }"})}),(0,r.jsx)(n.td,{children:"Configuration object for scan type BARCODE. For more information check out the links below."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"errorMessage"}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"errorMessage: 'This is my custom error.'"})}),(0,r.jsx)(n.td,{children:"Customized error message in case the scan fails."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"audioFeedback"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"audioFeedback: true"})}),(0,r.jsx)(n.td,{children:"Enables or disables an audible feedback on proccessing the scan."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"vibrationFeedback"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"vibrationFeedback: true"})}),(0,r.jsx)(n.td,{children:"Enables or disables a haptic feedback on proccessing the scan."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"callbackFeedback"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"callbackFeedback: true"})}),(0,r.jsx)(n.td,{children:"Enables or disables a audible feedback on success."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"callback"}),(0,r.jsxs)(n.td,{children:["Function(config: ",(0,r.jsx)(n.a,{href:"#scan-object",children:"scan"}),", result: any, postfix: string)"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"callback: HFFormdefinition.BaselHelpers.callback"})}),(0,r.jsx)(n.td,{children:"Call a custom JS-method after the scan is completed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"multiple"}),(0,r.jsx)(n.td,{children:"Boolean"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"multiple: true"})}),(0,r.jsx)(n.td,{children:"Enables or disables multiple scanning. Scan starts again after successful scan. It is aborted after an error or by cancel scanning manually."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"multipleMessage"}),(0,r.jsx)(n.td,{children:"String"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"multipleMessage: 'Another scan follows - abort with Cancel or Back'"})}),(0,r.jsx)(n.td,{children:"Displays confirm message after every scan to start or abort next scan."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"postProcess"}),(0,r.jsxs)(n.td,{children:["Function(config: ",(0,r.jsx)(n.a,{href:"#scan-object",children:"scan"}),", result: any, postfix: string)"]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"postProcess: HFFormdefinition.BaselHelpers.postProcessMRZ "})}),(0,r.jsx)(n.td,{children:"Call a custom JS-method to postprocess the scanned values"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"*  These options are required."}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.strong,{children:"**"})," Please provide at least one of these options."]}),"\n",(0,r.jsx)(n.admonition,{title:"Note",type:"tip",children:(0,r.jsxs)(n.p,{children:["For further information on the config values especially the formats for Barcode/QR-Code scanning (",(0,r.jsx)(n.code,{children:"formats : 'QR_CODE,AZTEC'"}),"), please read the documentation at ",(0,r.jsx)(n.a,{href:"https://github.com/phonegap/phonegap-plugin-barcodescanner",children:"https://github.com/phonegap/phonegap-plugin-barcodescanner"})," for mobile scanning and at ",(0,r.jsx)(n.a,{href:"https://www.npmjs.com/package/@zxing/library",children:"https://www.npmjs.com/package/@zxing/library"})," for browser scanning."]})})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var s=t(96540);const r={},c=s.createContext(r);function d(e){const n=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(c.Provider,{value:n},e.children)}}}]);