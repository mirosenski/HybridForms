"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[391],{4416:(e,t,n)=>{n.d(t,{A:()=>$,n:()=>N});var o=n(96540),s=n(26186),i=n(66801),r=n(51107),a=n(22375),l=n(28774);const d="headingWrapper_viav",c="subHeading_VpFi",h="optionWrapper_rgfQ",p="optionHeading_F865",u="optionDescription_SgL9",m="optionExample_imJ2",g="optionDetails_xihm",x="separator_qNd6",f="tableRow_H7Hk";var b=n(38193);let j=function(e){return e.STORAGE_CHANGED="storageChanged",e}({});const v=(e,t)=>{const[n,s]=(0,o.useState)(((e,t)=>b.A.canUseDOM&&localStorage.getItem(e)||t)(e,t));return(0,o.useEffect)((()=>{const t=t=>{t.detail.key===e&&s(t.detail.newValue)};return window.addEventListener(j.STORAGE_CHANGED,t),()=>{window.removeEventListener(j.STORAGE_CHANGED,t)}}),[]),n},k="buttonGroup_qkEZ",y="buttonGroup__button_W3AV";var C=n(74848);const w=e=>{const{storageKey:t,subHeading:n}=e,o=v(t||"optionsList_Props","list"),s=e=>{var n,o;n=t||"optionsList_Props",o=e,localStorage.setItem(n,o),window.dispatchEvent(new CustomEvent(j.STORAGE_CHANGED,{detail:{key:n,newValue:o}}))};return(0,C.jsxs)("div",{className:k,style:{marginBottom:n?"4px":"20px"},children:[(0,C.jsx)("button",{className:`${y} button button--sm ${"list"===o?"button--primary":"button--secondary"}`,onClick:()=>s("list"),title:"List view",children:(0,C.jsx)("i",{className:"fas fa-list"})}),(0,C.jsx)("button",{className:`${y} button button--sm ${"table"===o?"button--primary":"button--secondary"}`,onClick:()=>s("table"),title:"Table view",children:(0,C.jsx)("i",{className:"far fa-table"})})]})},_=e=>e.sort(((e,t)=>e.name.localeCompare(t.name))).sort(((e,t)=>e.required&&!t.required?-1:!e.required&&t.required?1:0)),N=e=>{e.options=_(e.options);let t=[];return e.heading&&(t=[{value:e.heading,id:(0,a.k)(e.heading),level:e.levelBase?e.levelBase:2}]),[...t,...e.options.map((t=>({value:`${t.name}${t.required?" *":""}`,id:`${t.idPrefix?`${t.idPrefix}-`:""}${t.name}`,level:e.levelBase?e.levelBase+1:3})))]},$=e=>{const{options:t,storageKey:n,levelBase:h,heading:p,subHeading:u,subHeadingLink:m,children:g}=e,x=v(n||"optionsList_Props","list"),f=(0,o.useMemo)((()=>_(t)),[t]);if(0===f.length)return null;let b="h2";return h&&(b=`h${h}`),(0,C.jsxs)(C.Fragment,{children:[p&&(0,C.jsxs)("div",{className:d,children:[(0,C.jsx)(r.A,{as:b,id:(0,a.k)(p),className:"heading",style:{marginBottom:u?"4px":"20px"},children:p}),(0,C.jsx)(w,{storageKey:n,subHeading:Boolean(u)})]}),u&&(0,C.jsxs)("p",{className:c,children:[(0,C.jsx)(s.oz,{components:{a:H,p:"span"},rehypePlugins:[i.A],children:u})," ",m&&(0,C.jsx)(l.A,{href:m,children:"read more"})]}),g&&(0,C.jsx)(C.Fragment,{children:g}),("list"===x&&p||!p)&&(0,C.jsx)(S,{options:f}),"table"===x&&p&&(0,C.jsx)(A,{options:f})]})},S=e=>{const{options:t}=e;return(0,C.jsx)(C.Fragment,{children:t.map(((e,n)=>(0,C.jsxs)("div",{className:h,children:[(0,C.jsxs)(r.A,{as:"h3",id:`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`,className:p,children:[e.name,e.required&&(0,C.jsx)("small",{style:{fontWeight:"normal"},children:" - required"})]}),(0,C.jsx)("div",{className:u,children:(0,C.jsx)(s.oz,{components:{a:H,p:"span"},rehypePlugins:[i.A],children:e.description})}),(0,C.jsxs)("div",{className:g,children:[(0,C.jsxs)("div",{children:[(0,C.jsx)("strong",{children:"How to use:"})," ",(0,C.jsx)("div",{className:m,children:(0,C.jsx)(s.oz,{components:{a:H,p:"code"},rehypePlugins:[i.A],children:e.example})})]}),e.type&&(0,C.jsxs)("div",{children:[(0,C.jsx)("strong",{children:"Type:"})," ",(0,C.jsx)("code",{dangerouslySetInnerHTML:{__html:e.type}})]}),e.signature&&(0,C.jsxs)("div",{children:[(0,C.jsx)("strong",{children:"Signature:"})," ",(0,C.jsx)("code",{children:e.signature})]}),e.default&&(0,C.jsxs)("div",{children:[(0,C.jsx)("strong",{children:"Default:"})," ",(0,C.jsx)("code",{children:e.default})]})]}),n<t.length-1&&(0,C.jsx)("hr",{className:x})]},`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`)))})},A=e=>{const{options:t}=e;return(0,C.jsxs)("table",{children:[(0,C.jsx)("thead",{children:(0,C.jsxs)("tr",{children:[(0,C.jsx)("td",{children:"Property"}),(0,C.jsx)("td",{children:"Type"}),(0,C.jsx)("td",{children:"How to use"}),(0,C.jsx)("td",{children:"Description"})]})}),(0,C.jsx)("tbody",{children:t.map((e=>(0,C.jsxs)("tr",{id:`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`,className:f,children:[(0,C.jsx)("td",{children:e.required?(0,C.jsx)(C.Fragment,{children:(0,C.jsxs)("strong",{children:[e.name," *"]})}):(0,C.jsx)(C.Fragment,{children:e.name})}),(0,C.jsx)("td",{children:(0,C.jsx)("code",{dangerouslySetInnerHTML:{__html:e.type}})}),(0,C.jsx)("td",{children:(0,C.jsx)("div",{className:m,children:(0,C.jsx)(s.oz,{components:{a:H,p:"code"},rehypePlugins:[i.A],children:e.example})})}),(0,C.jsx)("td",{children:(0,C.jsx)(s.oz,{components:{a:H,p:"span"},rehypePlugins:[i.A],children:e.description})})]},`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`)))})]})},H=e=>{let{children:t,href:n}=e;return(0,C.jsx)(l.A,{to:n,children:t})}},22375:(e,t,n)=>{n.d(t,{I:()=>s,k:()=>o});const o=e=>e.replace(/[\s_]+/g,"-").toLowerCase(),s=function(e,t){void 0===t&&(t=!1);const[n,o,s,i]=e.replace(/^#?(?:(?:(..)(..)(..)(..)?)|(?:(.)(.)(.)(.)?))$/,"$1$5$5$2$6$6$3$7$7$4$8$8").match(/(..)/g).map((e=>parseInt("0x"+e)));return(~~(299*n)+~~(587*o)+~~(114*s))/1e3>=128||1+~(128/i)&&t?"#000":"#FFF"}},84747:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>c,default:()=>g,frontMatter:()=>d,metadata:()=>o,options:()=>p,toc:()=>u});const o=JSON.parse('{"id":"form-controls/checkbox","title":"CheckBox","description":"Stored data","source":"@site/versioned_docs/version-9.5/form-controls/checkbox.mdx","sourceDirName":"form-controls","slug":"/form-controls/checkbox","permalink":"/docs/9.5/form-controls/checkbox","draft":false,"unlisted":false,"tags":[],"version":"9.5","frontMatter":{"title":"CheckBox"},"sidebar":"tutorialSidebar","previous":{"title":"ButtonControl","permalink":"/docs/9.5/form-controls/buttoncontrol"},"next":{"title":"ComboBox","permalink":"/docs/9.5/form-controls/combobox"}}');var s=n(74848),i=n(28453),r=n(51107),a=n(4416),l=n(92372);const d={title:"CheckBox"},c=void 0,h={},p=[{name:"defaultValue",type:"boolean | function",signature:"function() => boolean",example:"defaultValue: true",description:'Set the defaultValue to "true" to display the CheckBox as checked by default. A custom code function can be used to set defaultValue.'},{name:"disabled",type:"boolean",example:"disabled: true",description:'Set "true" whenever the checkbox should be disabled.'},{name:"doNotCopy",type:"boolean",example:"doNotCopy: true",description:'Set "true" whenever the field should get deleted if form is copied.'},{name:"label",type:"string",example:"label: &#39;Cover glass broken&#39;",description:"Define a label set next to the checkbox (optional)"},{name:"hidden",type:"boolean",example:"hidden: true",description:"Hide FormControl in Form."},{name:"htmlLabel",type:"string",example:"htmlLabel: &#39;Cover glass <strong>broken</strong>&#39;",description:"Define a label that allows html tags inside the text set next to the checkbox. If a label and a htmlLabel is set, the htmlLabel overwrites the label."},{name:"list",type:"boolean",example:"list: true",description:'Set this property to "true" if data connected with this control should be a sorting/filtering/grouping option on the listpage, is used in template objects (eg. the <a href="../form-definition/templateobjects#list-template-list-entry">listTemplate</a>) or it should show up in admin ui listings.'},{name:"listOptions",type:"{ dialogText: string, dialogHide: boolean }",example:'<a href="#listoptions-object">listOptions: {...}</a>',description:"Set additional options for controls with list equals true. E.g. set custom label for filter/sort/group dialogs or hide them complettely."},{name:"persistent",type:"&#39;user&#39;",example:"persistent: &#39;user&#39;",description:'The value "user" sets the initial value of the checkbox to the value of  the previous form item of the current user and overwrites any defaultValue.'},{name:"required",type:"Boolean",example:"required: true",description:'Set "true" if the control has to be filled in.'},{name:"style",type:"'default' | 'highlightChecked' | 'toggleButton' | 'backgroundHighlight'",example:"style: &#39;default&#39;",description:"Define the display behaviour of the radiobox and its label depending on its status (checked/unchecked). Default is the previously familiar behavior, highlightChecked softens the unchecked input ctrl and its label and emphasizes the checked control by bold font and dark font color."},{name:"toggle",type:"string",example:"toggle: {defaultClass: &#39;hf-radio-orange&#39;, checkedClass: &#39;highlight&#39;}",description:'Define up to two CSS classes applied to the container-div of the checkbox to emphasize the toggle-effect of the form control. At least the "defaultClass" has to be defined. <strong>Note</strong>: Use in case of style: &#39;toggleButton&#39; to assign the background color, this option is ignored in case of the other two possibilities.'},{name:"visiting",type:"boolean",example:"visiting: true",description:'Set "true" whenever the form element should be marked as "visited" when the user has clicked or tapped at the form field.'},{name:"onChanged",type:"function",signature:"function(data: { value: boolean, hfValue: string }) => void",example:"onChanged: HFFormdefinition.Namespace.Method",description:"Call a pre-defined JS-method to do something when the status of the control changes"}],u=[...(0,a.n)({options:p,heading:"FormControl Options"}),...(0,l.S)(),{value:"Stored data",id:"stored-data",level:2}];function m(e){const t={code:"code",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<input id="repair_cover_glass_broken" \n    type="checkbox"\n    value="Cover glass broken"\n    data-win-control="HFWinJSCtrl.CheckBox" \n    data-win-options="{ \n        label: \'Cover glass broken\', \n        list: true, \n        defaultValue: true,\n        style: \'default | highlightChecked | toggleButton\',\n        toggle: {\n            defaultClass: \'hf-radio-red\', \n            checkedClass: \'highlight\'\n        }\n    }">\n'})}),"\n",(0,s.jsx)(a.A,{heading:"FormControl Options",options:p}),"\n",(0,s.jsx)(l.A,{}),"\n",(0,s.jsx)(r.A,{as:"h2",id:"stored-data",children:"Stored data"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<input id="repair_cover_glass_broken" \n    type="checkbox"\n    data-win-control="HFWinJSCtrl.CheckBox" \n    value="Cover glass broken"\n    data-win-options="{\n        label: \'Cover glass broken\', \n        list: true, \n        defaultValue: true \n    }"\n>\n'})}),"\n",(0,s.jsx)(t.p,{children:"For each checked CheckBox inside your forms there are two value pairs of stored data:"}),"\n",(0,s.jsx)(t.p,{children:"First the information if the Checkbox is checked"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n    "id": "repair_cover_glass_broken",\n    "value": true\n}\n'})}),"\n",(0,s.jsx)(t.p,{children:"and for the defined value:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",metastring:"showLineNumbers",children:'{\n    "id": "repair_cover_glass_broken_HFValue",\n    "value": "Cover glass broken"\n}\n'})})]})}function g(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},92372:(e,t,n)=>{n.d(t,{A:()=>a,S:()=>r});n(96540);var o=n(4416),s=n(74848);const i=[{name:"dialogText",type:"string",example:"dialogText: &#39;Display Text&#39;",description:"Set custom label for filter/sort/group dialogs."},{name:"dialogHide",type:"boolean",example:"dialogHide: true",description:"Hide field from filter/sort/group dialogs."}],r=()=>(0,o.n)({options:i,heading:"listOptions Object"}),a=()=>(0,s.jsx)(o.A,{heading:"listOptions Object",options:i,storageKey:"optionsList_List"})}}]);