"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[72221],{4416:(e,t,r)=>{r.d(t,{A:()=>N,n:()=>F});var n=r(96540),i=r(26186),a=r(66801),s=r(51107),o=r(22375),d=r(28774);const l="headingWrapper_viav",c="subHeading_VpFi",m="optionWrapper_rgfQ",p="optionHeading_F865",h="optionDescription_SgL9",u="optionExample_imJ2",f="optionDetails_xihm",x="separator_qNd6",g="tableRow_H7Hk";var v=r(38193);let y=function(e){return e.STORAGE_CHANGED="storageChanged",e}({});const j=(e,t)=>{const[r,i]=(0,n.useState)(((e,t)=>v.A.canUseDOM&&localStorage.getItem(e)||t)(e,t));return(0,n.useEffect)((()=>{const t=t=>{t.detail.key===e&&i(t.detail.newValue)};return window.addEventListener(y.STORAGE_CHANGED,t),()=>{window.removeEventListener(y.STORAGE_CHANGED,t)}}),[]),r},b="buttonGroup_qkEZ",T="buttonGroup__button_W3AV";var w=r(74848);const L=e=>{const{storageKey:t,subHeading:r}=e,n=j(t||"optionsList_Props","list"),i=e=>{var r,n;r=t||"optionsList_Props",n=e,localStorage.setItem(r,n),window.dispatchEvent(new CustomEvent(y.STORAGE_CHANGED,{detail:{key:r,newValue:n}}))};return(0,w.jsxs)("div",{className:b,style:{marginBottom:r?"4px":"20px"},children:[(0,w.jsx)("button",{className:`${T} button button--sm ${"list"===n?"button--primary":"button--secondary"}`,onClick:()=>i("list"),title:"List view",children:(0,w.jsx)("i",{className:"fas fa-list"})}),(0,w.jsx)("button",{className:`${T} button button--sm ${"table"===n?"button--primary":"button--secondary"}`,onClick:()=>i("table"),title:"Table view",children:(0,w.jsx)("i",{className:"far fa-table"})})]})},H=e=>e.sort(((e,t)=>e.name.localeCompare(t.name))).sort(((e,t)=>e.required&&!t.required?-1:!e.required&&t.required?1:0)),F=e=>{e.options=H(e.options);let t=[];return e.heading&&(t=[{value:e.heading,id:(0,o.k)(e.heading),level:e.levelBase?e.levelBase:2}]),[...t,...e.options.map((t=>({value:`${t.name}${t.required?" *":""}`,id:`${t.idPrefix?`${t.idPrefix}-`:""}${t.name}`,level:e.levelBase?e.levelBase+1:3})))]},N=e=>{const{options:t,storageKey:r,levelBase:m,heading:p,subHeading:h,subHeadingLink:u,children:f}=e,x=j(r||"optionsList_Props","list"),g=(0,n.useMemo)((()=>H(t)),[t]);if(0===g.length)return null;let v="h2";return m&&(v=`h${m}`),(0,w.jsxs)(w.Fragment,{children:[p&&(0,w.jsxs)("div",{className:l,children:[(0,w.jsx)(s.A,{as:v,id:(0,o.k)(p),className:"heading",style:{marginBottom:h?"4px":"20px"},children:p}),(0,w.jsx)(L,{storageKey:r,subHeading:Boolean(h)})]}),h&&(0,w.jsxs)("p",{className:c,children:[(0,w.jsx)(i.oz,{components:{a:S,p:"span"},rehypePlugins:[a.A],children:h})," ",u&&(0,w.jsx)(d.A,{href:u,children:"read more"})]}),f&&(0,w.jsx)(w.Fragment,{children:f}),("list"===x&&p||!p)&&(0,w.jsx)(M,{options:g}),"table"===x&&p&&(0,w.jsx)(P,{options:g})]})},M=e=>{const{options:t}=e;return(0,w.jsx)(w.Fragment,{children:t.map(((e,r)=>(0,w.jsxs)("div",{className:m,children:[(0,w.jsxs)(s.A,{as:"h3",id:`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`,className:p,children:[e.name,e.required&&(0,w.jsx)("small",{style:{fontWeight:"normal"},children:" - required"})]}),(0,w.jsx)("div",{className:h,children:(0,w.jsx)(i.oz,{components:{a:S,p:"span"},rehypePlugins:[a.A],children:e.description})}),(0,w.jsxs)("div",{className:f,children:[(0,w.jsxs)("div",{children:[(0,w.jsx)("strong",{children:"How to use:"})," ",(0,w.jsx)("div",{className:u,children:(0,w.jsx)(i.oz,{components:{a:S,p:"code"},rehypePlugins:[a.A],children:e.example})})]}),e.type&&(0,w.jsxs)("div",{children:[(0,w.jsx)("strong",{children:"Type:"})," ",(0,w.jsx)("code",{dangerouslySetInnerHTML:{__html:e.type}})]}),e.signature&&(0,w.jsxs)("div",{children:[(0,w.jsx)("strong",{children:"Signature:"})," ",(0,w.jsx)("code",{children:e.signature})]}),e.default&&(0,w.jsxs)("div",{children:[(0,w.jsx)("strong",{children:"Default:"})," ",(0,w.jsx)("code",{children:e.default})]})]}),r<t.length-1&&(0,w.jsx)("hr",{className:x})]},`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`)))})},P=e=>{const{options:t}=e;return(0,w.jsxs)("table",{children:[(0,w.jsx)("thead",{children:(0,w.jsxs)("tr",{children:[(0,w.jsx)("td",{children:"Property"}),(0,w.jsx)("td",{children:"Type"}),(0,w.jsx)("td",{children:"How to use"}),(0,w.jsx)("td",{children:"Description"})]})}),(0,w.jsx)("tbody",{children:t.map((e=>(0,w.jsxs)("tr",{id:`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`,className:g,children:[(0,w.jsx)("td",{children:e.required?(0,w.jsx)(w.Fragment,{children:(0,w.jsxs)("strong",{children:[e.name," *"]})}):(0,w.jsx)(w.Fragment,{children:e.name})}),(0,w.jsx)("td",{children:(0,w.jsx)("code",{dangerouslySetInnerHTML:{__html:e.type}})}),(0,w.jsx)("td",{children:(0,w.jsx)("div",{className:u,children:(0,w.jsx)(i.oz,{components:{a:S,p:"code"},rehypePlugins:[a.A],children:e.example})})}),(0,w.jsx)("td",{children:(0,w.jsx)(i.oz,{components:{a:S,p:"span"},rehypePlugins:[a.A],children:e.description})})]},`${e.idPrefix?`${e.idPrefix}-`:""}${e.name}`)))})]})},S=e=>{let{children:t,href:r}=e;return(0,w.jsx)(d.A,{to:r,children:t})}},22375:(e,t,r)=>{r.d(t,{I:()=>i,k:()=>n});const n=e=>e.replace(/[\s_]+/g,"-").toLowerCase(),i=function(e,t){void 0===t&&(t=!1);const[r,n,i,a]=e.replace(/^#?(?:(?:(..)(..)(..)(..)?)|(?:(.)(.)(.)(.)?))$/,"$1$5$5$2$6$6$3$7$7$4$8$8").match(/(..)/g).map((e=>parseInt("0x"+e)));return(~~(299*r)+~~(587*n)+~~(114*i))/1e3>=128||1+~(128/a)&&t?"#000":"#FFF"}},50508:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>y,contentTitle:()=>v,default:()=>T,frontMatter:()=>g,metadata:()=>n,toc:()=>j});const n=JSON.parse('{"id":"form-templates/features/formfieldsvalidations","title":"Form Field Validation","description":"Form field validation handles the input. You can restrict the type of characters or the maximal length or match the input values to a certain pattern to ensure only valid and correct values are stored.","source":"@site/versioned_docs/version-10.0/20-form-templates/30-features/20-formfieldsvalidations.mdx","sourceDirName":"20-form-templates/30-features","slug":"/form-templates/features/formfieldsvalidations","permalink":"/docs/10.0/form-templates/features/formfieldsvalidations","draft":false,"unlisted":false,"tags":[],"version":"10.0","sidebarPosition":20,"frontMatter":{"title":"Form Field Validation","description":"Form field validation handles the input. You can restrict the type of characters or the maximal length or match the input values to a certain pattern to ensure only valid and correct values are stored.","toc_min_heading_level":2,"toc_max_heading_level":4},"sidebar":"tutorialSidebar","previous":{"title":"Conditions","permalink":"/docs/10.0/form-templates/features/conditions"},"next":{"title":"Repeating Units","permalink":"/docs/10.0/form-templates/features/repeatingunits"}}');var i=r(74848),a=r(28453),s=r(51107),o=r(4416);const d=[{name:"validator",type:"validator object",example:"validator: { min: 5, max: 10, step: 0.1 }",description:"JavaScript RegExp algorithm (for more details see validator.pattern) or object of type validator.",required:!1,idPrefix:"textfield"},{name:"validator.type",type:"'text' | 'number' | 'email' | 'tel' | 'date' | 'time'",example:"type: &#39;number&#39;",description:"Type of input. Overrules HTML attribute type.",required:!1,idPrefix:"textfield"},{name:"validator.min",type:"number",example:"min: 5",description:"Specifies a minimum value for an input.",required:!1,idPrefix:"textfield"},{name:"validator.max",type:"number",example:"max: 10",description:"Specifies the maximum value for an input.",required:!1,idPrefix:"textfield"},{name:"validator.step",type:"number",example:"step: 0.1",description:"Specifies the legal number intervals for an input field.",required:!1,idPrefix:"textfield"},{name:"validator.minlength",type:"number, text",example:"minlength: 5",description:"Specifies the minimum number of characters allowed.",required:!1,idPrefix:"textfield"},{name:"validator.maxlength",type:"number, text",example:"maxlength: 10",description:"Specifies the maximum number of characters allowed. Default for inputs is 1000 and textareas 5000.",required:!1,idPrefix:"textfield"},{name:"validator.pattern",type:"regex",example:"pattern: &#39;[0-9]{4}&#39",description:'JavaScript RegExp algorithm, with the &#39;u&#39; parameter treats the pattern as a sequence of unicode code points. The pattern is not surrounded by forward slashes and the tokens "^" and "$" are outdated, always the complete string is validated. <br /> Pattern is case-sensitive and no multiline. <strong>Character escape or token starting with a backslash has to be escaped additionally.</strong> <br /> For further details see (<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-pattern" target="_blank">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-pattern</a>, <a href="https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference" target="_blank">https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference</a>). Sample patterns (<a href="http://html5pattern.com/">http://html5pattern.com/</a>). <br>Since Chrome 112 the "v" flag is used for pattern attribute with new standards for regular expressions. See <a href="https://github.com/tc39/proposal-regexp-v-flag" target="_blank">https://github.com/tc39/proposal-regexp-v-flag</a>',required:!1,idPrefix:"textfield"},{name:"validator.custom",type:"function",signature:"(field: object, value: string) => boolean",example:"custom: &#39;HFFormDefinition.Namespace.validate&#39;",description:'Specifies a custom validate function as string. <a href="#custom-validation-js">Read more</a>',required:!1,idPrefix:"textfield"},{name:"validator.errorText",type:"string | object",example:"errorText: &#39;Only number inputs are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. If errorHTML is also present, errorText is not used.",required:!1,idPrefix:"textfield"},{name:"validator.errorHTML",type:"string | object",example:"errorHTML: &#39;Only &lt;strong&gt;number&lt;/strong&gt; inputs are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. Valid HTML is allowed.",required:!1,idPrefix:"textfield"}],l=[{name:"anytext",type:"boolean",example:"anytext: true",description:"Allows free text input. Default is true.",required:!1,idPrefix:"combobox"},{name:"validator.maxlength",type:"number",example:"maxlength: 10",description:"Specifies the maximum number of characters allowed. Default for control is 1000.",required:!1,idPrefix:"combobox"},{name:"validator.custom",type:"function",signature:"(field: object, value: string) => boolean",example:"custom: &#39;HFFormDefinition.Namespace.validate&#39;",description:'Specifies a custom validate function as string. <a href="#custom-validation-js">Read more</a>',required:!1,idPrefix:"combobox"},{name:"validator.errorText",type:"string",example:"errorText: &#39;Only inputs from the dropdown are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. If errorHTML is also present, errorText is not used.",required:!1,idPrefix:"combobox"},{name:"validator.errorHTML",type:"string",example:"errorHTML: &#39;Only &lt;strong&gt;inputs from the dropdown&lt;/strong&gt; are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. Valid HTML is allowed.",required:!1,idPrefix:"combobox"}],c=[{name:"max",type:"string",example:"max: &#39;now&#39;",description:'The option "now" restricts the input of the newest possible entry to the current day. Format for fixed dates is <em>dd.MM.yyyy</em>',required:!1,idPrefix:"datepicker"},{name:"min",type:"string",example:"min: &#39;1965-05-14&#39;",description:"Set to allow entries from that date on. Format is <em>dd.MM.yyyy</em> and default value is 01.01.1900",required:!1,idPrefix:"datepicker"},{name:"validator.custom",type:"function",signature:"(field: object, value: string) => boolean",example:"custom: &#39;HFFormDefinition.Namespace.validate&#39;",description:'Specifies a custom validate function as string. <a href="#custom-validation-js">Read more</a>',required:!1,idPrefix:"datepicker"},{name:"validator.errorText",type:"string",example:"errorText: &#39;Please enter a valid date.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. If errorHTML is also present, errorText is not used.",required:!1,idPrefix:"datepicker"},{name:"validator.errorHTML",type:"string",example:"errorHTML: &#39;Please enter a &lt;strong&gt;valid date&lt;/strong&gt;.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. Valid HTML is allowed.",required:!1,idPrefix:"datepicker"}],m=[{name:"validator.custom",type:"function",signature:"(field: object, value: string) => boolean",example:"custom: &#39;HFFormDefinition.Namespace.validate&#39;",description:'Specifies a custom validate function as string. <a href="#custom-validation-js">Read more</a>',required:!1,idPrefix:"dropdownlist"},{name:"validator.errorText",type:"string",example:"errorText: &#39;Only inputs from the dropdown are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. If errorHTML is also present, errorText is not used.",required:!1,idPrefix:"dropdownlist"},{name:"validator.errorHTML",type:"string",example:"errorHTML: &#39;Only &lt;strong&gt;inputs from the dropdown&lt;/strong&gt; are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. Valid HTML is allowed.",required:!1,idPrefix:"dropdownlist"}],p=[{name:"min",type:"number",example:"min: 5",description:"Specifies a minimum value for an input.",required:!1,idPrefix:"numericfield"},{name:"max",type:"number",example:"max: 10",description:"Specifies the maximum value for an input.",required:!1,idPrefix:"numericfield"},{name:"validator.custom",type:"function",signature:"(field: object, value: string) => boolean",example:"custom: &#39;HFFormDefinition.Namespace.validate&#39;",description:'Specifies a custom validate function as string. <a href="#custom-validation-js">Read more</a>',required:!1,idPrefix:"numericfield"},{name:"validator.errorText",type:"string",example:"errorText: &#39;Only inputs from the dropdown are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. If errorHTML is also present, errorText is not used.",required:!1,idPrefix:"numericfield"},{name:"validator.errorHTML",type:"string",example:"errorHTML: &#39;Only &lt;strong&gt;inputs from the dropdown&lt;/strong&gt; are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. Valid HTML is allowed.",required:!1,idPrefix:"numericfield"}],h=[{name:"validator.custom",type:"function",signature:"(field: object, value: string) => boolean",example:"custom: &#39;HFFormDefinition.Namespace.validate&#39;",description:'Specifies a custom validate function as string. <a href="#custom-validation-js">Read more</a>',required:!1,idPrefix:"datacontrol"},{name:"validator.jsonSchema",type:"jsonschema",example:"jsonSchema: {}",description:'Specify a JSON Schema to validate the given input. <a href="https://json-schema.org/understanding-json-schema/index.html" target="_blank">Read more</a>',required:!1,idPrefix:"datacontrol"}],u=[{name:"validator.custom",type:"function",signature:"(field: object, value: string) => boolean",example:"custom: &#39;HFFormDefinition.Namespace.validate&#39;",description:'Specifies a custom validate function as string. <a href="#custom-validation-js">Read more</a>',required:!1,idPrefix:"selectbox"},{name:"validator.errorText",type:"string",example:"errorText: &#39;Only inputs from the dropdown are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. If errorHTML is also present, errorText is not used.",required:!1,idPrefix:"selectbox"},{name:"validator.errorHTML",type:"string",example:"errorHTML: &#39;Only &lt;strong&gt;inputs from the dropdown&lt;/strong&gt; are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. Valid HTML is allowed.",required:!1,idPrefix:"selectbox"}],f=[{name:"validator.custom",type:"function",signature:"(field: object, value: string) => boolean",example:"custom: &#39;HFFormDefinition.Namespace.validate&#39;",description:'Specifies a custom validate function as string. <a href="#custom-validation-js">Read more</a>',required:!1,idPrefix:"timepicker"},{name:"validator.errorText",type:"string",example:"errorText: &#39;Only inputs from the dropdown are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. If errorHTML is also present, errorText is not used.",required:!1,idPrefix:"timepicker"},{name:"validator.errorHTML",type:"string",example:"errorHTML: &#39;Only &lt;strong&gt;inputs from the dropdown&lt;/strong&gt; are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. Valid HTML is allowed.",required:!1,idPrefix:"timepicker"}],x=[{name:"validator.custom",type:"function",signature:"(field: object, value: string) => boolean",example:"custom: &#39;HFFormDefinition.Namespace.validate&#39;",description:'Specifies a custom validate function as string. <a href="#custom-validation-js">Read more</a>',required:!1,idPrefix:"treeview"},{name:"validator.errorText",type:"string",example:"errorText: &#39;Only inputs from the dropdown are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. If errorHTML is also present, errorText is not used.",required:!1,idPrefix:"treeview"},{name:"validator.errorHTML",type:"string",example:"errorHTML: &#39;Only &lt;strong&gt;inputs from the dropdown&lt;/strong&gt; are allowed.&#39;",description:"Specifies the error message that is shown to the user. An object can be defined for different messages, depending on the error type. In this case, a default type must exist. Valid HTML is allowed.",required:!1,idPrefix:"treeview"}];const g={title:"Form Field Validation",description:"Form field validation handles the input. You can restrict the type of characters or the maximal length or match the input values to a certain pattern to ensure only valid and correct values are stored.",toc_min_heading_level:2,toc_max_heading_level:4},v=void 0,y={},j=[{value:"HTML5 Field Validation",id:"html5-field-validation",level:2},{value:"TextField",id:"textfield-html5",level:3},{value:"Extra Validation",id:"extra-validation",level:2},...(0,o.n)({options:l,heading:"ComboBox",levelBase:3}),{value:"errorText / errorHTML interface",id:"combobox-error-interface",level:4},...(0,o.n)({options:h,heading:"DataControl",levelBase:3}),...(0,o.n)({options:c,heading:"DatePicker",levelBase:3}),{value:"errorText / errorHTML interface",id:"datepicker-error-interface",level:4},...(0,o.n)({options:m,heading:"DropDownList",levelBase:3}),{value:"errorText / errorHTML interface",id:"dropdownlist-error-interface",level:4},...(0,o.n)({options:p,heading:"NumericField",levelBase:3}),{value:"errorText / errorHTML interface",id:"numericfield-error-interface",level:4},...(0,o.n)({options:u,heading:"SelectBox",levelBase:3}),{value:"errorText / errorHTML interface",id:"selectbox-error-interface",level:4},...(0,o.n)({options:d,heading:"TextField",levelBase:3}),{value:"errorText / errorHTML interface",id:"textfield-error-interface",level:4},...(0,o.n)({options:f,heading:"TimePicker",levelBase:3}),{value:"errorText / errorHTML interface",id:"timepicker-error-interface",level:4},...(0,o.n)({options:x,heading:"TreeView",levelBase:3}),{value:"errorText / errorHTML interface",id:"treeview-error-interface",level:4},{value:"Custom Validation (JS)",id:"custom-validation-js",level:3}];function b(e){const t={admonition:"admonition",br:"br",code:"code",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.p,{children:"There are several ways to control the user's input, restrict the type of characters, the maximal length or match the input values to a certain pattern to ensure only valid and correct values are stored."}),"\n",(0,i.jsx)(s.A,{as:"h2",id:"html5-field-validation",children:"HTML5 Field Validation"}),"\n",(0,i.jsx)(t.p,{children:"HTML5 already provides client side input validation based on the input type, this function can be used by assigning the correct type to the form control TextField."}),"\n",(0,i.jsx)(s.A,{as:"h3",id:"textfield-html5",children:"TextField"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["TextField with ",(0,i.jsx)(t.strong,{children:"no validation"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<input id="text1" data-hf-control="TextField" type="text" />\n'})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["TextField with type ",(0,i.jsx)(t.strong,{children:"number"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<input id="number1" data-hf-control="TextField" type="number" />\n'})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["TextField with type ",(0,i.jsx)(t.strong,{children:"telephone"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<input id="tel1" data-hf-control="TextField" type="tel" />\n'})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["TextField with type ",(0,i.jsx)(t.strong,{children:"e-mail"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<input id="email1" data-hf-control="TextField" type="email" />\n'})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["TextField with type ",(0,i.jsx)(t.strong,{children:"date"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<input id="date1" data-hf-control="TextField" type="date" />\n'})}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["TextField with type ",(0,i.jsx)(t.strong,{children:"time"}),":"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<input id="time1" data-hf-control="TextField" type="time" />\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"These validations are very limited and restricted to single line input elements and often do not meet the necessities of the desired input validation. Therefore we provide extended options for a better client-side input validation."}),"\n",(0,i.jsx)(s.A,{as:"h2",id:"extra-validation",children:"Extra Validation"}),"\n",(0,i.jsxs)(t.p,{children:["Besides the already implemented ",(0,i.jsx)(t.code,{children:'data-hf-option "required: true"'}),", which checks if a field has been filled in, you can define more individual validation rules by adding the ",(0,i.jsx)(t.code,{children:'data-hf-option "validator"'})," or by defining a custom validation function."]}),"\n",(0,i.jsxs)(o.A,{options:l,heading:"ComboBox",levelBase:3,children:[(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"ComboBox"})," only allows to select values from the configured data source. The option ",(0,i.jsx)(t.code,{children:"anytext: true"})," allows to enter free text."]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:"<div\n    id=\"combobox1\"\n    data-hf-control=\"ComboBox\"\n    data-hf-options=\"{\n        required: true,\n        anytext: false,\n        dataSource: [\n            { name: 'Bauer, F', code: 'Bauer, F' },\n            { name: 'Gruber, P', code: 'Gruber, P' },\n            { name: 'Lanner, G', code: 'Lanner, G' },\n            { name: 'Simon, R', code: '3521' },\n            { name: 'Herbert, W', code: '123456789012' }\n        ],\n        dataTextField: 'name',\n        dataValueField: 'code',\n        validator: {\n            errorText: 'Only inputs from the dropdown are allowed.'\n        }\n    }\"\n></div>\n"})})]}),"\n",(0,i.jsx)(s.A,{as:"h3",id:"combobox-error-interface",style:{"--ifm-h3-font-size":"1.25rem",marginBottom:"8px"},children:"errorText / errorHTML interface"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"interface IErrorMessages {\n    anytext?: string;\n    maxlength?: string;\n    [custom: string]: string;\n    default: string;\n}\n"})}),"\n",(0,i.jsx)(o.A,{options:h,heading:"DataControl",levelBase:3,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:"<div\n    id=\"test_data_control\"\n    data-hf-control=\"DataControl\"\n    data-hf-options=\"{\n    validator: {\n        jsonSchema: {\n            type: 'array',\n            items: {\n                type: 'object',\n                properties: {\n                    test_data_control: {\n                        type: 'string',\n                        minLength: 1,\n                        maxLength: 10\n                    }\n                }\n            }\n        }\n    }\n}\"\n></div>\n"})})}),"\n",(0,i.jsx)(o.A,{options:c,heading:"DatePicker",levelBase:3,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:"<div\n    id=\"birthday\"\n    data-hf-control=\"DatePicker\"\n    data-hf-options=\"{\n    required: true,\n    displayValueFormat: 'dd.MM.yyyy',\n    max: 'now',\n    min: '1965-05-14',\n    parseFormats: [ 'dd.MM.yyyy', 'ddMMyyyy', 'dd/MM/yyyy', 'dd-MM-yyyy' ],\n    validator: {\n        errorText: 'Please enter a valid date.'\n    }\n}\"\n></div>\n"})})}),"\n",(0,i.jsx)(s.A,{as:"h3",id:"datepicker-error-interface",style:{"--ifm-h3-font-size":"1.25rem",marginBottom:"8px"},children:"errorText / errorHTML interface"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"interface IErrorMessages {\n    max?: string;\n    min?: string;\n    [custom: string]: string;\n    default: string;\n}\n"})}),"\n",(0,i.jsxs)(o.A,{options:m,heading:"DropDownList",levelBase:3,children:[(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"DropDownList"})," only allows to select values from the configured data source."]}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:"<div\n    id=\"dropdownlist1\"\n    data-hf-control=\"DropDownList\"\n    data-hf-options=\"{\n        required: true,\n        dataSource: [\n            { name: 'Bauer, F', code: 'Bauer, F' },\n            { name: 'Gruber, P', code: 'Gruber, P' },\n            { name: 'Lanner, G', code: 'Lanner, G' },\n            { name: 'Simon, R', code: '3521' },\n            { name: 'Herbert, W', code: '123456789012' }\n        ],\n        dataTextField: 'name',\n        dataValueField: 'code',\n        validator: {\n            errorText: 'Only inputs from the dropdown are allowed.'\n        }\n    }\"\n></div>\n"})})]}),"\n",(0,i.jsx)(s.A,{as:"h3",id:"dropdownlist-error-interface",style:{"--ifm-h3-font-size":"1.25rem",marginBottom:"8px"},children:"errorText / errorHTML interface"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"interface IErrorMessages {\n    [custom: string]: string;\n    default: string;\n}\n"})}),"\n",(0,i.jsx)(o.A,{options:p,heading:"NumericField",levelBase:3,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<div\n    id="temperatur"\n    data-hf-control="NumericField"\n    data-hf-options="{\n    step: 0.1,\n    min: 20,\n    max: 45,\n    placeholder: \'\xb0C\',\n    decimals: 1,\n    format: \'0.0\xb0\',\n    startValue: 36 \n}"\n></div>\n'})})}),"\n",(0,i.jsx)(s.A,{as:"h3",id:"numericfield-error-interface",style:{"--ifm-h3-font-size":"1.25rem",marginBottom:"8px"},children:"errorText / errorHTML interface"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"interface IErrorMessages {\n    min?: string;\n    max?: string;\n    [custom: string]: string;\n    default: string;\n}\n"})}),"\n",(0,i.jsxs)(o.A,{options:u,heading:"SelectBox",levelBase:3,children:[(0,i.jsx)(t.p,{children:"Field value must be one of the option values if selected"}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:'<select id="select1" data-hf-control="SelectBox">\n    <option value="value1">value 1</option>\n    <option value="value2">value 2</option>\n    ...\n</select>\n'})})]}),"\n",(0,i.jsx)(s.A,{as:"h3",id:"selectbox-error-interface",style:{"--ifm-h3-font-size":"1.25rem",marginBottom:"8px"},children:"errorText / errorHTML interface"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"interface IErrorMessages {\n    [custom: string]: string;\n    default: string;\n}\n"})}),"\n",(0,i.jsxs)(o.A,{options:d,heading:"TextField",levelBase:3,children:[(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"TextField"})," can be extended by the option ",(0,i.jsx)(t.code,{children:"validator"}),"."]}),(0,i.jsx)(t.admonition,{title:"Info",type:"info",children:(0,i.jsx)(t.p,{children:"This overrules the HTML5 validation."})}),(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:"<input\n    id=\"textfield1\"\n    type=\"(text|number|tel|email|date|time)\"\n    data-hf-control=\"TextField\"\n    data-hf-options=\"{\n    ...,\n    validator: {\n        type?: 'text' | 'number' | 'email' | 'tel' | 'date' | 'time',\n        min?: (number),\n        max?: (number),\n        step?: (number),\n\n        minlength?: (number, text),\n        maxlength?: (number, text),\n\n        custom?: (function),\n\n        pattern?: (RegExString),\n        errorText?: (string | Object)\n        errorHTML?: (string | Object)\n    }\n}\"\n/>\n"})})]}),"\n",(0,i.jsx)(s.A,{as:"h3",id:"textfield-error-interface",style:{"--ifm-h3-font-size":"1.25rem",marginBottom:"8px"},children:"errorText / errorHTML interface"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"interface IErrorMessages {\n    pattern?: string;\n    number?: string;\n    email?: string;\n    min?: string;\n    max?: string;\n    minlength?: string;\n    maxlength?: string;\n    [custom: string]: string;\n    default: string;\n}\n"})}),"\n",(0,i.jsx)(o.A,{options:f,heading:"TimePicker",levelBase:3,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:"<div\n    id=\"repair_time_start\"\n    data-hf-control=\"TimePicker\"\n    data-hf-options=\"{\n    defaultValue: 'now',\n    required: true,\n    min: '11:00',\n    max: '19:00',\n    label: 'Time start'\n}\"\n></div>\n"})})}),"\n",(0,i.jsx)(s.A,{as:"h3",id:"timepicker-error-interface",style:{"--ifm-h3-font-size":"1.25rem",marginBottom:"8px"},children:"errorText / errorHTML interface"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"interface IErrorMessages {\n    [custom: string]: string;\n    default: string;\n}\n"})}),"\n",(0,i.jsx)(o.A,{options:x,heading:"TreeView",levelBase:3,children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:"<div\n    id=\"treeview_minimum\"\n    data-hf-control=\"TreeView\"\n    data-hf-options=\"{ \n    label: 'TreeView',   \n    url: '/api/catalog/Hierarchietest/hierarchy',\n    treeviewCtrlOptions: {\n        dataTextField: 'Text',\n        dataValueField: 'ID',\n    },\n    selectCtrlOptions:{\n        placeholder: 'Open tree',\n    },\n    validator: {\n        errorText: 'Plaese selct from catalog'\n    }\n}\"\n></div>\n"})})}),"\n",(0,i.jsx)(s.A,{as:"h3",id:"treeview-error-interface",style:{"--ifm-h3-font-size":"1.25rem",marginBottom:"8px"},children:"errorText / errorHTML interface"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"interface IErrorMessages {\n    [custom: string]: string;\n    default: string;\n}\n"})}),"\n",(0,i.jsx)(s.A,{as:"h2",id:"custom-validation-js",children:"Custom Validation (JS)"}),"\n",(0,i.jsxs)(t.p,{children:["Some input controls can be validated by adding a custom validation function. Currently supported controls are the ComboBox, the DatePicker, the DropDownList, the NumericField, the SelectBox, the TextField, the TimePicker and the TreeView control.",(0,i.jsx)(t.br,{}),"\n",'These functions offer the possibility to compare two controls of the same type for example the fields "start time" and "end time" or to prevent the user to select identical values of ComboBoxes.']}),"\n",(0,i.jsx)(t.admonition,{title:"Info",type:"info",children:(0,i.jsxs)(t.p,{children:["These functions can return ",(0,i.jsx)(t.code,{children:"true"}),", ",(0,i.jsx)(t.code,{children:"false"})," or ",(0,i.jsx)(t.code,{children:"{ errorType: 'custom' }"}),".\nA returned error type can be used to display an individual error message by defining it in an errorText/errorHTML object."]})}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-typescript",metastring:"showLineNumbers",children:"export function setCustomTimeValidator(field, val) {\n    const fieldTarget = HybridForms.API.Fields.getById('compare_time1');\n    let t1 = Date.parse(fieldTarget.value);\n    let t2 = Date.parse(val);\n    if (t1 >= t2) {\n        return false;\n    }\n    return true;\n}\n\nexport function triggerTimeChange() {\n    const ctrl = HybridForms.API.FormControls.getCtrl('compare_time2');\n    if (ctrl && ctrl.ctrl) {\n        HybridForms.API.FormControls.getCtrl('compare_time2').ctrl.trigger('change');\n    }\n}\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Just add your custom validation function to your JavaScript file and in your HTML template call the function inside the control(s) by adding the data-hf-option ",(0,i.jsx)(t.code,{children:"validator"}),"."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-html",metastring:"showLineNumbers",children:"<div\n    id=\"compare_time1\"\n    data-hf-control=\"TimePicker\"\n    data-hf-options=\"{\n        label: 'Begin time',\n        defaultValue: 'now',\n        emptyContent: 'hh:mm',\n        format: 'HH:mm',\n        onChanged: HFFormdefinition.DemoHelpers.triggerTimeChange\n    }\"\n></div>\n\n<div\n    id=\"compare_time2\"\n    data-hf-control=\"TimePicker\"\n    data-hf-options=\"{\n        label: 'End time',\n        emptyContent: 'hh:mm',\n        format: 'HH:mm',\n        validator:{\n            custom: 'HFFormdefinition.DemoHelpers.setCustomTimeValidator',\n            errorHTML: 'End time can not be equal or before begin time!!!'\n        }\n    }\"\n></div>\n"})}),"\n",(0,i.jsx)(t.admonition,{title:"Note",type:"tip",children:(0,i.jsx)(t.p,{children:"In case of comparing two values keep in mind to trigger any changes of the control to be compared with, so validation is working vice-versa."})})]})}function T(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(b,{...e})}):b(e)}}}]);